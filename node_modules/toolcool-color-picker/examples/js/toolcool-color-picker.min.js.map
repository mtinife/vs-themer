{
  "version": 3,
  "sources": ["../../src/domain/events-provider.ts", "../../node_modules/@ctrl/tinycolor/dist/module/util.js", "../../node_modules/@ctrl/tinycolor/dist/module/conversion.js", "../../node_modules/@ctrl/tinycolor/dist/module/css-color-names.js", "../../node_modules/@ctrl/tinycolor/dist/module/format-input.js", "../../node_modules/@ctrl/tinycolor/dist/module/index.js", "../../src/domain/common-provider.ts", "../../src/domain/color-provider.ts", "../../src/ui/saturation/saturation.ts", "../../src/ui/hue/hue.ts", "../../src/ui/alpha/alpha.ts", "../../src/ui/fields/fields.ts", "../../src/ui/popup/popup.ts", "../../src/app/color-picker.ts", "../../src/index.ts"],
  "sourcesContent": ["export const CUSTOM_EVENT_COLOR_HSV_CHANGED = 'tc-hsv-changed';\nexport const CUSTOM_EVENT_COLOR_HUE_CHANGED = 'tc-hue-changed';\nexport const CUSTOM_EVENT_COLOR_ALPHA_CHANGED = 'tc-alpha-changed';\nexport const CUSTOM_EVENT_BUTTON_CLICKED = 'tc-button-clicked';\n\nexport const sendButtonClickedCustomEvent = (cid: string) => {\n  if (!cid) return;\n\n  document.dispatchEvent(\n    new CustomEvent(CUSTOM_EVENT_BUTTON_CLICKED, {\n      detail: {\n        cid,\n      },\n    })\n  );\n};\n\nexport const sendAlphaCustomEvent = (cid: string, a: number) => {\n  if (!cid) return;\n\n  document.dispatchEvent(\n    new CustomEvent(CUSTOM_EVENT_COLOR_ALPHA_CHANGED, {\n      detail: {\n        a,\n        cid,\n      },\n    })\n  );\n};\n\nexport const sendHsvCustomEvent = (cid: string, h: number, s: number, v: number) => {\n  if (!cid) return;\n\n  document.dispatchEvent(\n    new CustomEvent(CUSTOM_EVENT_COLOR_HSV_CHANGED, {\n      detail: {\n        h,\n        s,\n        v,\n        cid,\n      },\n    })\n  );\n};\n\nexport const sendHueCustomEvent = (cid: string, h: number) => {\n  if (!cid) return;\n\n  document.dispatchEvent(\n    new CustomEvent(CUSTOM_EVENT_COLOR_HUE_CHANGED, {\n      detail: {\n        h,\n        cid,\n      },\n    })\n  );\n};\n", "/**\n * Take input from [0, n] and return it as [0, 1]\n * @hidden\n */\nexport function bound01(n, max) {\n    if (isOnePointZero(n)) {\n        n = '100%';\n    }\n    var isPercent = isPercentage(n);\n    n = max === 360 ? n : Math.min(max, Math.max(0, parseFloat(n)));\n    // Automatically convert percentage into number\n    if (isPercent) {\n        n = parseInt(String(n * max), 10) / 100;\n    }\n    // Handle floating point rounding errors\n    if (Math.abs(n - max) < 0.000001) {\n        return 1;\n    }\n    // Convert into [0, 1] range if it isn't already\n    if (max === 360) {\n        // If n is a hue given in degrees,\n        // wrap around out-of-range values into [0, 360] range\n        // then convert into [0, 1].\n        n = (n < 0 ? (n % max) + max : n % max) / parseFloat(String(max));\n    }\n    else {\n        // If n not a hue given in degrees\n        // Convert into [0, 1] range if it isn't already.\n        n = (n % max) / parseFloat(String(max));\n    }\n    return n;\n}\n/**\n * Force a number between 0 and 1\n * @hidden\n */\nexport function clamp01(val) {\n    return Math.min(1, Math.max(0, val));\n}\n/**\n * Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n * <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\n * @hidden\n */\nexport function isOnePointZero(n) {\n    return typeof n === 'string' && n.indexOf('.') !== -1 && parseFloat(n) === 1;\n}\n/**\n * Check to see if string passed in is a percentage\n * @hidden\n */\nexport function isPercentage(n) {\n    return typeof n === 'string' && n.indexOf('%') !== -1;\n}\n/**\n * Return a valid alpha value [0,1] with all invalid values being set to 1\n * @hidden\n */\nexport function boundAlpha(a) {\n    a = parseFloat(a);\n    if (isNaN(a) || a < 0 || a > 1) {\n        a = 1;\n    }\n    return a;\n}\n/**\n * Replace a decimal with it's percentage value\n * @hidden\n */\nexport function convertToPercentage(n) {\n    if (n <= 1) {\n        return \"\".concat(Number(n) * 100, \"%\");\n    }\n    return n;\n}\n/**\n * Force a hex value to have 2 characters\n * @hidden\n */\nexport function pad2(c) {\n    return c.length === 1 ? '0' + c : String(c);\n}\n", "import { bound01, pad2 } from './util';\n// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n/**\n * Handle bounds / percentage checking to conform to CSS color spec\n * <http://www.w3.org/TR/css3-color/>\n * *Assumes:* r, g, b in [0, 255] or [0, 1]\n * *Returns:* { r, g, b } in [0, 255]\n */\nexport function rgbToRgb(r, g, b) {\n    return {\n        r: bound01(r, 255) * 255,\n        g: bound01(g, 255) * 255,\n        b: bound01(b, 255) * 255,\n    };\n}\n/**\n * Converts an RGB color value to HSL.\n * *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n * *Returns:* { h, s, l } in [0,1]\n */\nexport function rgbToHsl(r, g, b) {\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n    var max = Math.max(r, g, b);\n    var min = Math.min(r, g, b);\n    var h = 0;\n    var s = 0;\n    var l = (max + min) / 2;\n    if (max === min) {\n        s = 0;\n        h = 0; // achromatic\n    }\n    else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n            default:\n                break;\n        }\n        h /= 6;\n    }\n    return { h: h, s: s, l: l };\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0) {\n        t += 1;\n    }\n    if (t > 1) {\n        t -= 1;\n    }\n    if (t < 1 / 6) {\n        return p + (q - p) * (6 * t);\n    }\n    if (t < 1 / 2) {\n        return q;\n    }\n    if (t < 2 / 3) {\n        return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n}\n/**\n * Converts an HSL color value to RGB.\n *\n * *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n * *Returns:* { r, g, b } in the set [0, 255]\n */\nexport function hslToRgb(h, s, l) {\n    var r;\n    var g;\n    var b;\n    h = bound01(h, 360);\n    s = bound01(s, 100);\n    l = bound01(l, 100);\n    if (s === 0) {\n        // achromatic\n        g = l;\n        b = l;\n        r = l;\n    }\n    else {\n        var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n        var p = 2 * l - q;\n        r = hue2rgb(p, q, h + 1 / 3);\n        g = hue2rgb(p, q, h);\n        b = hue2rgb(p, q, h - 1 / 3);\n    }\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n/**\n * Converts an RGB color value to HSV\n *\n * *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n * *Returns:* { h, s, v } in [0,1]\n */\nexport function rgbToHsv(r, g, b) {\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n    var max = Math.max(r, g, b);\n    var min = Math.min(r, g, b);\n    var h = 0;\n    var v = max;\n    var d = max - min;\n    var s = max === 0 ? 0 : d / max;\n    if (max === min) {\n        h = 0; // achromatic\n    }\n    else {\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n            default:\n                break;\n        }\n        h /= 6;\n    }\n    return { h: h, s: s, v: v };\n}\n/**\n * Converts an HSV color value to RGB.\n *\n * *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n * *Returns:* { r, g, b } in the set [0, 255]\n */\nexport function hsvToRgb(h, s, v) {\n    h = bound01(h, 360) * 6;\n    s = bound01(s, 100);\n    v = bound01(v, 100);\n    var i = Math.floor(h);\n    var f = h - i;\n    var p = v * (1 - s);\n    var q = v * (1 - f * s);\n    var t = v * (1 - (1 - f) * s);\n    var mod = i % 6;\n    var r = [v, q, p, p, t, v][mod];\n    var g = [t, v, v, q, p, p][mod];\n    var b = [p, p, t, v, v, q][mod];\n    return { r: r * 255, g: g * 255, b: b * 255 };\n}\n/**\n * Converts an RGB color to hex\n *\n * Assumes r, g, and b are contained in the set [0, 255]\n * Returns a 3 or 6 character hex\n */\nexport function rgbToHex(r, g, b, allow3Char) {\n    var hex = [\n        pad2(Math.round(r).toString(16)),\n        pad2(Math.round(g).toString(16)),\n        pad2(Math.round(b).toString(16)),\n    ];\n    // Return a 3 character hex if possible\n    if (allow3Char &&\n        hex[0].startsWith(hex[0].charAt(1)) &&\n        hex[1].startsWith(hex[1].charAt(1)) &&\n        hex[2].startsWith(hex[2].charAt(1))) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n    }\n    return hex.join('');\n}\n/**\n * Converts an RGBA color plus alpha transparency to hex\n *\n * Assumes r, g, b are contained in the set [0, 255] and\n * a in [0, 1]. Returns a 4 or 8 character rgba hex\n */\n// eslint-disable-next-line max-params\nexport function rgbaToHex(r, g, b, a, allow4Char) {\n    var hex = [\n        pad2(Math.round(r).toString(16)),\n        pad2(Math.round(g).toString(16)),\n        pad2(Math.round(b).toString(16)),\n        pad2(convertDecimalToHex(a)),\n    ];\n    // Return a 4 character hex if possible\n    if (allow4Char &&\n        hex[0].startsWith(hex[0].charAt(1)) &&\n        hex[1].startsWith(hex[1].charAt(1)) &&\n        hex[2].startsWith(hex[2].charAt(1)) &&\n        hex[3].startsWith(hex[3].charAt(1))) {\n        return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\n    }\n    return hex.join('');\n}\n/**\n * Converts an RGBA color to an ARGB Hex8 string\n * Rarely used, but required for \"toFilter()\"\n */\nexport function rgbaToArgbHex(r, g, b, a) {\n    var hex = [\n        pad2(convertDecimalToHex(a)),\n        pad2(Math.round(r).toString(16)),\n        pad2(Math.round(g).toString(16)),\n        pad2(Math.round(b).toString(16)),\n    ];\n    return hex.join('');\n}\n/** Converts a decimal to a hex value */\nexport function convertDecimalToHex(d) {\n    return Math.round(parseFloat(d) * 255).toString(16);\n}\n/** Converts a hex value to a decimal */\nexport function convertHexToDecimal(h) {\n    return parseIntFromHex(h) / 255;\n}\n/** Parse a base-16 hex value into a base-10 integer */\nexport function parseIntFromHex(val) {\n    return parseInt(val, 16);\n}\nexport function numberInputToObject(color) {\n    return {\n        r: color >> 16,\n        g: (color & 0xff00) >> 8,\n        b: color & 0xff,\n    };\n}\n", "// https://github.com/bahamas10/css-color-names/blob/master/css-color-names.json\n/**\n * @hidden\n */\nexport var names = {\n    aliceblue: '#f0f8ff',\n    antiquewhite: '#faebd7',\n    aqua: '#00ffff',\n    aquamarine: '#7fffd4',\n    azure: '#f0ffff',\n    beige: '#f5f5dc',\n    bisque: '#ffe4c4',\n    black: '#000000',\n    blanchedalmond: '#ffebcd',\n    blue: '#0000ff',\n    blueviolet: '#8a2be2',\n    brown: '#a52a2a',\n    burlywood: '#deb887',\n    cadetblue: '#5f9ea0',\n    chartreuse: '#7fff00',\n    chocolate: '#d2691e',\n    coral: '#ff7f50',\n    cornflowerblue: '#6495ed',\n    cornsilk: '#fff8dc',\n    crimson: '#dc143c',\n    cyan: '#00ffff',\n    darkblue: '#00008b',\n    darkcyan: '#008b8b',\n    darkgoldenrod: '#b8860b',\n    darkgray: '#a9a9a9',\n    darkgreen: '#006400',\n    darkgrey: '#a9a9a9',\n    darkkhaki: '#bdb76b',\n    darkmagenta: '#8b008b',\n    darkolivegreen: '#556b2f',\n    darkorange: '#ff8c00',\n    darkorchid: '#9932cc',\n    darkred: '#8b0000',\n    darksalmon: '#e9967a',\n    darkseagreen: '#8fbc8f',\n    darkslateblue: '#483d8b',\n    darkslategray: '#2f4f4f',\n    darkslategrey: '#2f4f4f',\n    darkturquoise: '#00ced1',\n    darkviolet: '#9400d3',\n    deeppink: '#ff1493',\n    deepskyblue: '#00bfff',\n    dimgray: '#696969',\n    dimgrey: '#696969',\n    dodgerblue: '#1e90ff',\n    firebrick: '#b22222',\n    floralwhite: '#fffaf0',\n    forestgreen: '#228b22',\n    fuchsia: '#ff00ff',\n    gainsboro: '#dcdcdc',\n    ghostwhite: '#f8f8ff',\n    goldenrod: '#daa520',\n    gold: '#ffd700',\n    gray: '#808080',\n    green: '#008000',\n    greenyellow: '#adff2f',\n    grey: '#808080',\n    honeydew: '#f0fff0',\n    hotpink: '#ff69b4',\n    indianred: '#cd5c5c',\n    indigo: '#4b0082',\n    ivory: '#fffff0',\n    khaki: '#f0e68c',\n    lavenderblush: '#fff0f5',\n    lavender: '#e6e6fa',\n    lawngreen: '#7cfc00',\n    lemonchiffon: '#fffacd',\n    lightblue: '#add8e6',\n    lightcoral: '#f08080',\n    lightcyan: '#e0ffff',\n    lightgoldenrodyellow: '#fafad2',\n    lightgray: '#d3d3d3',\n    lightgreen: '#90ee90',\n    lightgrey: '#d3d3d3',\n    lightpink: '#ffb6c1',\n    lightsalmon: '#ffa07a',\n    lightseagreen: '#20b2aa',\n    lightskyblue: '#87cefa',\n    lightslategray: '#778899',\n    lightslategrey: '#778899',\n    lightsteelblue: '#b0c4de',\n    lightyellow: '#ffffe0',\n    lime: '#00ff00',\n    limegreen: '#32cd32',\n    linen: '#faf0e6',\n    magenta: '#ff00ff',\n    maroon: '#800000',\n    mediumaquamarine: '#66cdaa',\n    mediumblue: '#0000cd',\n    mediumorchid: '#ba55d3',\n    mediumpurple: '#9370db',\n    mediumseagreen: '#3cb371',\n    mediumslateblue: '#7b68ee',\n    mediumspringgreen: '#00fa9a',\n    mediumturquoise: '#48d1cc',\n    mediumvioletred: '#c71585',\n    midnightblue: '#191970',\n    mintcream: '#f5fffa',\n    mistyrose: '#ffe4e1',\n    moccasin: '#ffe4b5',\n    navajowhite: '#ffdead',\n    navy: '#000080',\n    oldlace: '#fdf5e6',\n    olive: '#808000',\n    olivedrab: '#6b8e23',\n    orange: '#ffa500',\n    orangered: '#ff4500',\n    orchid: '#da70d6',\n    palegoldenrod: '#eee8aa',\n    palegreen: '#98fb98',\n    paleturquoise: '#afeeee',\n    palevioletred: '#db7093',\n    papayawhip: '#ffefd5',\n    peachpuff: '#ffdab9',\n    peru: '#cd853f',\n    pink: '#ffc0cb',\n    plum: '#dda0dd',\n    powderblue: '#b0e0e6',\n    purple: '#800080',\n    rebeccapurple: '#663399',\n    red: '#ff0000',\n    rosybrown: '#bc8f8f',\n    royalblue: '#4169e1',\n    saddlebrown: '#8b4513',\n    salmon: '#fa8072',\n    sandybrown: '#f4a460',\n    seagreen: '#2e8b57',\n    seashell: '#fff5ee',\n    sienna: '#a0522d',\n    silver: '#c0c0c0',\n    skyblue: '#87ceeb',\n    slateblue: '#6a5acd',\n    slategray: '#708090',\n    slategrey: '#708090',\n    snow: '#fffafa',\n    springgreen: '#00ff7f',\n    steelblue: '#4682b4',\n    tan: '#d2b48c',\n    teal: '#008080',\n    thistle: '#d8bfd8',\n    tomato: '#ff6347',\n    turquoise: '#40e0d0',\n    violet: '#ee82ee',\n    wheat: '#f5deb3',\n    white: '#ffffff',\n    whitesmoke: '#f5f5f5',\n    yellow: '#ffff00',\n    yellowgreen: '#9acd32',\n};\n", "import { convertHexToDecimal, hslToRgb, hsvToRgb, parseIntFromHex, rgbToRgb } from './conversion';\nimport { names } from './css-color-names';\nimport { boundAlpha, convertToPercentage } from './util';\n/**\n * Given a string or object, convert that input to RGB\n *\n * Possible string inputs:\n * ```\n * \"red\"\n * \"#f00\" or \"f00\"\n * \"#ff0000\" or \"ff0000\"\n * \"#ff000000\" or \"ff000000\"\n * \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n * \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n * \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n * \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n * \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n * \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n * \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n * ```\n */\nexport function inputToRGB(color) {\n    var rgb = { r: 0, g: 0, b: 0 };\n    var a = 1;\n    var s = null;\n    var v = null;\n    var l = null;\n    var ok = false;\n    var format = false;\n    if (typeof color === 'string') {\n        color = stringInputToObject(color);\n    }\n    if (typeof color === 'object') {\n        if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {\n            rgb = rgbToRgb(color.r, color.g, color.b);\n            ok = true;\n            format = String(color.r).substr(-1) === '%' ? 'prgb' : 'rgb';\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {\n            s = convertToPercentage(color.s);\n            v = convertToPercentage(color.v);\n            rgb = hsvToRgb(color.h, s, v);\n            ok = true;\n            format = 'hsv';\n        }\n        else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {\n            s = convertToPercentage(color.s);\n            l = convertToPercentage(color.l);\n            rgb = hslToRgb(color.h, s, l);\n            ok = true;\n            format = 'hsl';\n        }\n        if (Object.prototype.hasOwnProperty.call(color, 'a')) {\n            a = color.a;\n        }\n    }\n    a = boundAlpha(a);\n    return {\n        ok: ok,\n        format: color.format || format,\n        r: Math.min(255, Math.max(rgb.r, 0)),\n        g: Math.min(255, Math.max(rgb.g, 0)),\n        b: Math.min(255, Math.max(rgb.b, 0)),\n        a: a,\n    };\n}\n// <http://www.w3.org/TR/css3-values/#integers>\nvar CSS_INTEGER = '[-\\\\+]?\\\\d+%?';\n// <http://www.w3.org/TR/css3-values/#number-value>\nvar CSS_NUMBER = '[-\\\\+]?\\\\d*\\\\.\\\\d+%?';\n// Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\nvar CSS_UNIT = \"(?:\".concat(CSS_NUMBER, \")|(?:\").concat(CSS_INTEGER, \")\");\n// Actual matching.\n// Parentheses and commas are optional, but not required.\n// Whitespace can take the place of commas or opening paren\nvar PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\".concat(CSS_UNIT, \")[,|\\\\s]+(\").concat(CSS_UNIT, \")[,|\\\\s]+(\").concat(CSS_UNIT, \")\\\\s*\\\\)?\");\nvar PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\".concat(CSS_UNIT, \")[,|\\\\s]+(\").concat(CSS_UNIT, \")[,|\\\\s]+(\").concat(CSS_UNIT, \")[,|\\\\s]+(\").concat(CSS_UNIT, \")\\\\s*\\\\)?\");\nvar matchers = {\n    CSS_UNIT: new RegExp(CSS_UNIT),\n    rgb: new RegExp('rgb' + PERMISSIVE_MATCH3),\n    rgba: new RegExp('rgba' + PERMISSIVE_MATCH4),\n    hsl: new RegExp('hsl' + PERMISSIVE_MATCH3),\n    hsla: new RegExp('hsla' + PERMISSIVE_MATCH4),\n    hsv: new RegExp('hsv' + PERMISSIVE_MATCH3),\n    hsva: new RegExp('hsva' + PERMISSIVE_MATCH4),\n    hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n    hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n    hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n    hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n};\n/**\n * Permissive string parsing.  Take in a number of formats, and output an object\n * based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\n */\nexport function stringInputToObject(color) {\n    color = color.trim().toLowerCase();\n    if (color.length === 0) {\n        return false;\n    }\n    var named = false;\n    if (names[color]) {\n        color = names[color];\n        named = true;\n    }\n    else if (color === 'transparent') {\n        return { r: 0, g: 0, b: 0, a: 0, format: 'name' };\n    }\n    // Try to match string input using regular expressions.\n    // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n    // Just return an object and let the conversion functions handle that.\n    // This way the result will be the same whether the tinycolor is initialized with string or object.\n    var match = matchers.rgb.exec(color);\n    if (match) {\n        return { r: match[1], g: match[2], b: match[3] };\n    }\n    match = matchers.rgba.exec(color);\n    if (match) {\n        return { r: match[1], g: match[2], b: match[3], a: match[4] };\n    }\n    match = matchers.hsl.exec(color);\n    if (match) {\n        return { h: match[1], s: match[2], l: match[3] };\n    }\n    match = matchers.hsla.exec(color);\n    if (match) {\n        return { h: match[1], s: match[2], l: match[3], a: match[4] };\n    }\n    match = matchers.hsv.exec(color);\n    if (match) {\n        return { h: match[1], s: match[2], v: match[3] };\n    }\n    match = matchers.hsva.exec(color);\n    if (match) {\n        return { h: match[1], s: match[2], v: match[3], a: match[4] };\n    }\n    match = matchers.hex8.exec(color);\n    if (match) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            a: convertHexToDecimal(match[4]),\n            format: named ? 'name' : 'hex8',\n        };\n    }\n    match = matchers.hex6.exec(color);\n    if (match) {\n        return {\n            r: parseIntFromHex(match[1]),\n            g: parseIntFromHex(match[2]),\n            b: parseIntFromHex(match[3]),\n            format: named ? 'name' : 'hex',\n        };\n    }\n    match = matchers.hex4.exec(color);\n    if (match) {\n        return {\n            r: parseIntFromHex(match[1] + match[1]),\n            g: parseIntFromHex(match[2] + match[2]),\n            b: parseIntFromHex(match[3] + match[3]),\n            a: convertHexToDecimal(match[4] + match[4]),\n            format: named ? 'name' : 'hex8',\n        };\n    }\n    match = matchers.hex3.exec(color);\n    if (match) {\n        return {\n            r: parseIntFromHex(match[1] + match[1]),\n            g: parseIntFromHex(match[2] + match[2]),\n            b: parseIntFromHex(match[3] + match[3]),\n            format: named ? 'name' : 'hex',\n        };\n    }\n    return false;\n}\n/**\n * Check to see if it looks like a CSS unit\n * (see `matchers` above for definition).\n */\nexport function isValidCSSUnit(color) {\n    return Boolean(matchers.CSS_UNIT.exec(String(color)));\n}\n", "import { numberInputToObject, rgbaToHex, rgbToHex, rgbToHsl, rgbToHsv } from './conversion';\nimport { names } from './css-color-names';\nimport { inputToRGB } from './format-input';\nimport { bound01, boundAlpha, clamp01 } from './util';\nvar TinyColor = /** @class */ (function () {\n    function TinyColor(color, opts) {\n        if (color === void 0) { color = ''; }\n        if (opts === void 0) { opts = {}; }\n        var _a;\n        // If input is already a tinycolor, return itself\n        if (color instanceof TinyColor) {\n            // eslint-disable-next-line no-constructor-return\n            return color;\n        }\n        if (typeof color === 'number') {\n            color = numberInputToObject(color);\n        }\n        this.originalInput = color;\n        var rgb = inputToRGB(color);\n        this.originalInput = color;\n        this.r = rgb.r;\n        this.g = rgb.g;\n        this.b = rgb.b;\n        this.a = rgb.a;\n        this.roundA = Math.round(100 * this.a) / 100;\n        this.format = (_a = opts.format) !== null && _a !== void 0 ? _a : rgb.format;\n        this.gradientType = opts.gradientType;\n        // Don't let the range of [0,255] come back in [0,1].\n        // Potentially lose a little bit of precision here, but will fix issues where\n        // .5 gets interpreted as half of the total, instead of half of 1\n        // If it was supposed to be 128, this was already taken care of by `inputToRgb`\n        if (this.r < 1) {\n            this.r = Math.round(this.r);\n        }\n        if (this.g < 1) {\n            this.g = Math.round(this.g);\n        }\n        if (this.b < 1) {\n            this.b = Math.round(this.b);\n        }\n        this.isValid = rgb.ok;\n    }\n    TinyColor.prototype.isDark = function () {\n        return this.getBrightness() < 128;\n    };\n    TinyColor.prototype.isLight = function () {\n        return !this.isDark();\n    };\n    /**\n     * Returns the perceived brightness of the color, from 0-255.\n     */\n    TinyColor.prototype.getBrightness = function () {\n        // http://www.w3.org/TR/AERT#color-contrast\n        var rgb = this.toRgb();\n        return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n    };\n    /**\n     * Returns the perceived luminance of a color, from 0-1.\n     */\n    TinyColor.prototype.getLuminance = function () {\n        // http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        var rgb = this.toRgb();\n        var R;\n        var G;\n        var B;\n        var RsRGB = rgb.r / 255;\n        var GsRGB = rgb.g / 255;\n        var BsRGB = rgb.b / 255;\n        if (RsRGB <= 0.03928) {\n            R = RsRGB / 12.92;\n        }\n        else {\n            // eslint-disable-next-line prefer-exponentiation-operator\n            R = Math.pow((RsRGB + 0.055) / 1.055, 2.4);\n        }\n        if (GsRGB <= 0.03928) {\n            G = GsRGB / 12.92;\n        }\n        else {\n            // eslint-disable-next-line prefer-exponentiation-operator\n            G = Math.pow((GsRGB + 0.055) / 1.055, 2.4);\n        }\n        if (BsRGB <= 0.03928) {\n            B = BsRGB / 12.92;\n        }\n        else {\n            // eslint-disable-next-line prefer-exponentiation-operator\n            B = Math.pow((BsRGB + 0.055) / 1.055, 2.4);\n        }\n        return 0.2126 * R + 0.7152 * G + 0.0722 * B;\n    };\n    /**\n     * Returns the alpha value of a color, from 0-1.\n     */\n    TinyColor.prototype.getAlpha = function () {\n        return this.a;\n    };\n    /**\n     * Sets the alpha value on the current color.\n     *\n     * @param alpha - The new alpha value. The accepted range is 0-1.\n     */\n    TinyColor.prototype.setAlpha = function (alpha) {\n        this.a = boundAlpha(alpha);\n        this.roundA = Math.round(100 * this.a) / 100;\n        return this;\n    };\n    /**\n     * Returns the object as a HSVA object.\n     */\n    TinyColor.prototype.toHsv = function () {\n        var hsv = rgbToHsv(this.r, this.g, this.b);\n        return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this.a };\n    };\n    /**\n     * Returns the hsva values interpolated into a string with the following format:\n     * \"hsva(xxx, xxx, xxx, xx)\".\n     */\n    TinyColor.prototype.toHsvString = function () {\n        var hsv = rgbToHsv(this.r, this.g, this.b);\n        var h = Math.round(hsv.h * 360);\n        var s = Math.round(hsv.s * 100);\n        var v = Math.round(hsv.v * 100);\n        return this.a === 1 ? \"hsv(\".concat(h, \", \").concat(s, \"%, \").concat(v, \"%)\") : \"hsva(\".concat(h, \", \").concat(s, \"%, \").concat(v, \"%, \").concat(this.roundA, \")\");\n    };\n    /**\n     * Returns the object as a HSLA object.\n     */\n    TinyColor.prototype.toHsl = function () {\n        var hsl = rgbToHsl(this.r, this.g, this.b);\n        return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this.a };\n    };\n    /**\n     * Returns the hsla values interpolated into a string with the following format:\n     * \"hsla(xxx, xxx, xxx, xx)\".\n     */\n    TinyColor.prototype.toHslString = function () {\n        var hsl = rgbToHsl(this.r, this.g, this.b);\n        var h = Math.round(hsl.h * 360);\n        var s = Math.round(hsl.s * 100);\n        var l = Math.round(hsl.l * 100);\n        return this.a === 1 ? \"hsl(\".concat(h, \", \").concat(s, \"%, \").concat(l, \"%)\") : \"hsla(\".concat(h, \", \").concat(s, \"%, \").concat(l, \"%, \").concat(this.roundA, \")\");\n    };\n    /**\n     * Returns the hex value of the color.\n     * @param allow3Char will shorten hex value to 3 char if possible\n     */\n    TinyColor.prototype.toHex = function (allow3Char) {\n        if (allow3Char === void 0) { allow3Char = false; }\n        return rgbToHex(this.r, this.g, this.b, allow3Char);\n    };\n    /**\n     * Returns the hex value of the color -with a # appened.\n     * @param allow3Char will shorten hex value to 3 char if possible\n     */\n    TinyColor.prototype.toHexString = function (allow3Char) {\n        if (allow3Char === void 0) { allow3Char = false; }\n        return '#' + this.toHex(allow3Char);\n    };\n    /**\n     * Returns the hex 8 value of the color.\n     * @param allow4Char will shorten hex value to 4 char if possible\n     */\n    TinyColor.prototype.toHex8 = function (allow4Char) {\n        if (allow4Char === void 0) { allow4Char = false; }\n        return rgbaToHex(this.r, this.g, this.b, this.a, allow4Char);\n    };\n    /**\n     * Returns the hex 8 value of the color -with a # appened.\n     * @param allow4Char will shorten hex value to 4 char if possible\n     */\n    TinyColor.prototype.toHex8String = function (allow4Char) {\n        if (allow4Char === void 0) { allow4Char = false; }\n        return '#' + this.toHex8(allow4Char);\n    };\n    /**\n     * Returns the object as a RGBA object.\n     */\n    TinyColor.prototype.toRgb = function () {\n        return {\n            r: Math.round(this.r),\n            g: Math.round(this.g),\n            b: Math.round(this.b),\n            a: this.a,\n        };\n    };\n    /**\n     * Returns the RGBA values interpolated into a string with the following format:\n     * \"RGBA(xxx, xxx, xxx, xx)\".\n     */\n    TinyColor.prototype.toRgbString = function () {\n        var r = Math.round(this.r);\n        var g = Math.round(this.g);\n        var b = Math.round(this.b);\n        return this.a === 1 ? \"rgb(\".concat(r, \", \").concat(g, \", \").concat(b, \")\") : \"rgba(\".concat(r, \", \").concat(g, \", \").concat(b, \", \").concat(this.roundA, \")\");\n    };\n    /**\n     * Returns the object as a RGBA object.\n     */\n    TinyColor.prototype.toPercentageRgb = function () {\n        var fmt = function (x) { return \"\".concat(Math.round(bound01(x, 255) * 100), \"%\"); };\n        return {\n            r: fmt(this.r),\n            g: fmt(this.g),\n            b: fmt(this.b),\n            a: this.a,\n        };\n    };\n    /**\n     * Returns the RGBA relative values interpolated into a string\n     */\n    TinyColor.prototype.toPercentageRgbString = function () {\n        var rnd = function (x) { return Math.round(bound01(x, 255) * 100); };\n        return this.a === 1\n            ? \"rgb(\".concat(rnd(this.r), \"%, \").concat(rnd(this.g), \"%, \").concat(rnd(this.b), \"%)\")\n            : \"rgba(\".concat(rnd(this.r), \"%, \").concat(rnd(this.g), \"%, \").concat(rnd(this.b), \"%, \").concat(this.roundA, \")\");\n    };\n    /**\n     * The 'real' name of the color -if there is one.\n     */\n    TinyColor.prototype.toName = function () {\n        if (this.a === 0) {\n            return 'transparent';\n        }\n        if (this.a < 1) {\n            return false;\n        }\n        var hex = '#' + rgbToHex(this.r, this.g, this.b, false);\n        for (var _i = 0, _a = Object.entries(names); _i < _a.length; _i++) {\n            var _b = _a[_i], key = _b[0], value = _b[1];\n            if (hex === value) {\n                return key;\n            }\n        }\n        return false;\n    };\n    TinyColor.prototype.toString = function (format) {\n        var formatSet = Boolean(format);\n        format = format !== null && format !== void 0 ? format : this.format;\n        var formattedString = false;\n        var hasAlpha = this.a < 1 && this.a >= 0;\n        var needsAlphaFormat = !formatSet && hasAlpha && (format.startsWith('hex') || format === 'name');\n        if (needsAlphaFormat) {\n            // Special case for \"transparent\", all other non-alpha formats\n            // will return rgba when there is transparency.\n            if (format === 'name' && this.a === 0) {\n                return this.toName();\n            }\n            return this.toRgbString();\n        }\n        if (format === 'rgb') {\n            formattedString = this.toRgbString();\n        }\n        if (format === 'prgb') {\n            formattedString = this.toPercentageRgbString();\n        }\n        if (format === 'hex' || format === 'hex6') {\n            formattedString = this.toHexString();\n        }\n        if (format === 'hex3') {\n            formattedString = this.toHexString(true);\n        }\n        if (format === 'hex4') {\n            formattedString = this.toHex8String(true);\n        }\n        if (format === 'hex8') {\n            formattedString = this.toHex8String();\n        }\n        if (format === 'name') {\n            formattedString = this.toName();\n        }\n        if (format === 'hsl') {\n            formattedString = this.toHslString();\n        }\n        if (format === 'hsv') {\n            formattedString = this.toHsvString();\n        }\n        return formattedString || this.toHexString();\n    };\n    TinyColor.prototype.toNumber = function () {\n        return (Math.round(this.r) << 16) + (Math.round(this.g) << 8) + Math.round(this.b);\n    };\n    TinyColor.prototype.clone = function () {\n        return new TinyColor(this.toString());\n    };\n    /**\n     * Lighten the color a given amount. Providing 100 will always return white.\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.lighten = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        var hsl = this.toHsl();\n        hsl.l += amount / 100;\n        hsl.l = clamp01(hsl.l);\n        return new TinyColor(hsl);\n    };\n    /**\n     * Brighten the color a given amount, from 0 to 100.\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.brighten = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        var rgb = this.toRgb();\n        rgb.r = Math.max(0, Math.min(255, rgb.r - Math.round(255 * -(amount / 100))));\n        rgb.g = Math.max(0, Math.min(255, rgb.g - Math.round(255 * -(amount / 100))));\n        rgb.b = Math.max(0, Math.min(255, rgb.b - Math.round(255 * -(amount / 100))));\n        return new TinyColor(rgb);\n    };\n    /**\n     * Darken the color a given amount, from 0 to 100.\n     * Providing 100 will always return black.\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.darken = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        var hsl = this.toHsl();\n        hsl.l -= amount / 100;\n        hsl.l = clamp01(hsl.l);\n        return new TinyColor(hsl);\n    };\n    /**\n     * Mix the color with pure white, from 0 to 100.\n     * Providing 0 will do nothing, providing 100 will always return white.\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.tint = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        return this.mix('white', amount);\n    };\n    /**\n     * Mix the color with pure black, from 0 to 100.\n     * Providing 0 will do nothing, providing 100 will always return black.\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.shade = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        return this.mix('black', amount);\n    };\n    /**\n     * Desaturate the color a given amount, from 0 to 100.\n     * Providing 100 will is the same as calling greyscale\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.desaturate = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        var hsl = this.toHsl();\n        hsl.s -= amount / 100;\n        hsl.s = clamp01(hsl.s);\n        return new TinyColor(hsl);\n    };\n    /**\n     * Saturate the color a given amount, from 0 to 100.\n     * @param amount - valid between 1-100\n     */\n    TinyColor.prototype.saturate = function (amount) {\n        if (amount === void 0) { amount = 10; }\n        var hsl = this.toHsl();\n        hsl.s += amount / 100;\n        hsl.s = clamp01(hsl.s);\n        return new TinyColor(hsl);\n    };\n    /**\n     * Completely desaturates a color into greyscale.\n     * Same as calling `desaturate(100)`\n     */\n    TinyColor.prototype.greyscale = function () {\n        return this.desaturate(100);\n    };\n    /**\n     * Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n     * Values outside of this range will be wrapped into this range.\n     */\n    TinyColor.prototype.spin = function (amount) {\n        var hsl = this.toHsl();\n        var hue = (hsl.h + amount) % 360;\n        hsl.h = hue < 0 ? 360 + hue : hue;\n        return new TinyColor(hsl);\n    };\n    /**\n     * Mix the current color a given amount with another color, from 0 to 100.\n     * 0 means no mixing (return current color).\n     */\n    TinyColor.prototype.mix = function (color, amount) {\n        if (amount === void 0) { amount = 50; }\n        var rgb1 = this.toRgb();\n        var rgb2 = new TinyColor(color).toRgb();\n        var p = amount / 100;\n        var rgba = {\n            r: (rgb2.r - rgb1.r) * p + rgb1.r,\n            g: (rgb2.g - rgb1.g) * p + rgb1.g,\n            b: (rgb2.b - rgb1.b) * p + rgb1.b,\n            a: (rgb2.a - rgb1.a) * p + rgb1.a,\n        };\n        return new TinyColor(rgba);\n    };\n    TinyColor.prototype.analogous = function (results, slices) {\n        if (results === void 0) { results = 6; }\n        if (slices === void 0) { slices = 30; }\n        var hsl = this.toHsl();\n        var part = 360 / slices;\n        var ret = [this];\n        for (hsl.h = (hsl.h - ((part * results) >> 1) + 720) % 360; --results;) {\n            hsl.h = (hsl.h + part) % 360;\n            ret.push(new TinyColor(hsl));\n        }\n        return ret;\n    };\n    /**\n     * taken from https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js\n     */\n    TinyColor.prototype.complement = function () {\n        var hsl = this.toHsl();\n        hsl.h = (hsl.h + 180) % 360;\n        return new TinyColor(hsl);\n    };\n    TinyColor.prototype.monochromatic = function (results) {\n        if (results === void 0) { results = 6; }\n        var hsv = this.toHsv();\n        var h = hsv.h;\n        var s = hsv.s;\n        var v = hsv.v;\n        var res = [];\n        var modification = 1 / results;\n        while (results--) {\n            res.push(new TinyColor({ h: h, s: s, v: v }));\n            v = (v + modification) % 1;\n        }\n        return res;\n    };\n    TinyColor.prototype.splitcomplement = function () {\n        var hsl = this.toHsl();\n        var h = hsl.h;\n        return [\n            this,\n            new TinyColor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l }),\n            new TinyColor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l }),\n        ];\n    };\n    /**\n     * Compute how the color would appear on a background\n     */\n    TinyColor.prototype.onBackground = function (background) {\n        var fg = this.toRgb();\n        var bg = new TinyColor(background).toRgb();\n        return new TinyColor({\n            r: bg.r + (fg.r - bg.r) * fg.a,\n            g: bg.g + (fg.g - bg.g) * fg.a,\n            b: bg.b + (fg.b - bg.b) * fg.a,\n        });\n    };\n    /**\n     * Alias for `polyad(3)`\n     */\n    TinyColor.prototype.triad = function () {\n        return this.polyad(3);\n    };\n    /**\n     * Alias for `polyad(4)`\n     */\n    TinyColor.prototype.tetrad = function () {\n        return this.polyad(4);\n    };\n    /**\n     * Get polyad colors, like (for 1, 2, 3, 4, 5, 6, 7, 8, etc...)\n     * monad, dyad, triad, tetrad, pentad, hexad, heptad, octad, etc...\n     */\n    TinyColor.prototype.polyad = function (n) {\n        var hsl = this.toHsl();\n        var h = hsl.h;\n        var result = [this];\n        var increment = 360 / n;\n        for (var i = 1; i < n; i++) {\n            result.push(new TinyColor({ h: (h + i * increment) % 360, s: hsl.s, l: hsl.l }));\n        }\n        return result;\n    };\n    /**\n     * compare color vs current color\n     */\n    TinyColor.prototype.equals = function (color) {\n        return this.toRgbString() === new TinyColor(color).toRgbString();\n    };\n    return TinyColor;\n}());\nexport { TinyColor };\n// kept for backwards compatability with v1\nexport function tinycolor(color, opts) {\n    if (color === void 0) { color = ''; }\n    if (opts === void 0) { opts = {}; }\n    return new TinyColor(color, opts);\n}\n", "export const getUniqueId = () => {\n  return Math.random().toString(16).slice(2);\n};\n\nexport const round2places = (num: number) => {\n  return Math.round((num + Number.EPSILON) * 100) / 100;\n};\n", "import { TinyColor } from '@ctrl/tinycolor';\nimport { round2places } from './common-provider';\n\nexport const SATURATION_STEP = 0.01;\n\n/**\n * This hue background is used in saturation component.\n * The hsl color is supported in 99.5% browsers - https://caniuse.com/?search=hsl\n * @param {number} hue - [0, 360]\n */\nexport const getHueBackground = (hue: number) => {\n  if (hue < 0) {\n    hue = 0;\n  }\n  if (hue > 360) {\n    hue = 360;\n  }\n  return `hsl(${Math.round(hue)}, 100%, 50%)`;\n};\n\n/**\n * This alpha color background is used in the alpha component.\n * The hsl color is supported in 99.5% browsers - https://caniuse.com/?search=rgba\n */\nexport const getAlphaColorBackground = (color: TinyColor) => {\n  const rgba = color.toRgb();\n  return `linear-gradient(to right, rgba(${rgba.r},${rgba.g},${rgba.b}, 0) 0%, rgba(${rgba.r},${rgba.g},${rgba.b}, 1) 100%)`;\n};\n\nexport const rgbaToString = (color: TinyColor) => {\n  const rgba = color.toRgb();\n  return `rgba(${rgba.r}, ${rgba.g}, ${rgba.b}, ${round2places(rgba.a)})`;\n};\n\nexport const hslaToString = (color: TinyColor) => {\n  const hsla = color.toHsl();\n  return `hsla(${Math.round(hsla.h)}, ${Math.round(hsla.s * 100)}%, ${Math.round(hsla.l * 100)}%, ${round2places(hsla.a)})`;\n};\n\nexport const hsvaToString = (color: TinyColor) => {\n  const hsva = color.toHsv();\n  return `hsva(${Math.round(hsva.h)}, ${Math.round(hsva.s * 100)}%, ${Math.round(hsva.v * 100)}%, ${round2places(hsva.a)})`;\n};\n\n/**\n * Saturation: get top position in % by value from hsv.\n * @param {number} value - [0, 1]\n */\nexport const getTopByValue = (value: number) => {\n  if (value < 0) {\n    value = 0;\n  }\n  if (value > 1) {\n    value = 1;\n  }\n  const top = -(value * 100) + 100;\n  return `${top.toFixed(2)}%`;\n};\n\n/**\n * Saturation: get left position in % by saturation from hsv.\n * @param {number} saturation - [0, 1]\n */\nexport const getLeftBySaturation = (saturation: number) => {\n  if (saturation < 0) {\n    saturation = 0;\n  }\n  if (saturation > 1) {\n    saturation = 1;\n  }\n\n  const top = saturation * 100;\n  return `${top.toFixed(2)}%`;\n};\n\n/**\n * Hue: get left position in % by hue from hsv.\n * @param {number} hue - [0, 360]\n */\nexport const getLeftByHue = (hue: number) => {\n  if (hue < 0) {\n    hue = 0;\n  }\n\n  if (hue > 360) {\n    hue = 360;\n  }\n  const left = (hue * 100) / 360;\n  let rounded = Math.round(left * 1e2) / 1e2; // round to 2 decimal places\n\n  if (rounded < 0) {\n    rounded = 0;\n  }\n\n  if (rounded > 100) {\n    rounded = 100;\n  }\n\n  return rounded;\n};\n\n/**\n * Ig given left position in % ---> return the relevant hue.\n */\nexport const getHueByLeft = (left: number) => {\n  return (360 * left) / 100;\n};\n\n/**\n * returns a number in the range [0, 255]\n */\nexport const fixRGB = (updatedValue: string | number) => {\n  let value = Number(updatedValue) || 0;\n  value = Math.round(value);\n  value = Math.max(0, value);\n  value = Math.min(255, value);\n  return value;\n};\n\n/**\n * returns a number in the range [0, 100]\n */\nexport const fixPercent = (updatedValue: string | number) => {\n  let value = Number(updatedValue) || 100;\n  value = Math.round(value);\n  value = Math.max(0, value);\n  value = Math.min(100, value);\n  return value;\n};\n\nexport const parseColor = (colorString: string | null) => {\n  const color = new TinyColor(colorString || '#000');\n  color.setAlpha(color.getAlpha());\n  return color;\n};\n", "// @ts-ignore: esbuild custom loader\nimport styles from './saturation.pcss';\nimport { CUSTOM_EVENT_COLOR_HSV_CHANGED, CUSTOM_EVENT_COLOR_HUE_CHANGED, sendHsvCustomEvent } from '../../domain/events-provider';\nimport { getHueBackground, getLeftBySaturation, getTopByValue, parseColor, SATURATION_STEP } from '../../domain/color-provider';\n\n/*\n Usage:\n ------\n <toolcool-color-picker-saturation color=\"#000\" cid=\"...\"></toolcool-color-picker-saturation>\n */\nclass Saturation extends HTMLElement {\n  // this id attribute is used for custom events\n  private cid: string;\n\n  private $saturation: HTMLElement | null;\n  private $color: HTMLElement | null;\n  private $pointer: HTMLElement | null;\n\n  private hue = 0; // [0, 360]\n  private saturation = 0; // [0, 1]\n  private value = 0; // [0, 1]\n\n  static get observedAttributes() {\n    return ['color'];\n  }\n\n  constructor() {\n    super();\n\n    this.attachShadow({\n      mode: 'open', // 'closed', 'open',\n    });\n\n    this.onMouseDown = this.onMouseDown.bind(this);\n    this.onMouseUp = this.onMouseUp.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.onPointerKeyDown = this.onPointerKeyDown.bind(this);\n\n    this.hsvChanged = this.hsvChanged.bind(this);\n    this.hueChanged = this.hueChanged.bind(this);\n  }\n\n  render(sendEvent = true) {\n    // re-render\n    if (this.$pointer) {\n      this.$pointer.style.left = getLeftBySaturation(this.saturation);\n      this.$pointer.style.top = getTopByValue(this.value);\n    }\n\n    if (this.$color) {\n      this.$color.setAttribute('style', `background: ${getHueBackground(this.hue)}`);\n    }\n\n    if (sendEvent) {\n      // update outer color to change the button, and\n      // send the updated color to the user\n      sendHsvCustomEvent(this.cid, this.hue, this.saturation, this.value);\n    }\n  }\n\n  // we need to handle both MouseEvent and TouchEvent --->\n  // eslint-disable-next-line\n  onChange(evt: any) {\n    if (!this.$saturation) return;\n\n    const { width: boxWidth, height: boxHeight, left: boxLeft, top: boxTop } = this.$saturation.getBoundingClientRect();\n    if (boxWidth === 0 || boxHeight === 0) return;\n\n    const mouseX = typeof evt.clientX === 'number' ? evt.clientX : evt.touches[0].clientX;\n    const mouseY = typeof evt.clientY === 'number' ? evt.clientY : evt.touches[0].clientY;\n\n    const lPos = Math.min(Math.max(0, mouseX - boxLeft), boxWidth);\n    const tPos = Math.min(Math.max(0, mouseY - boxTop), boxHeight);\n\n    this.saturation = lPos / boxWidth;\n    this.value = 1 - tPos / boxHeight;\n\n    this.render();\n  }\n\n  onPointerKeyDown(evt: KeyboardEvent) {\n    switch (evt.key) {\n      case 'ArrowLeft': {\n        this.saturation = Math.max(0, this.saturation - SATURATION_STEP);\n        this.render();\n        break;\n      }\n\n      case 'ArrowRight': {\n        this.saturation = Math.min(1, this.saturation + SATURATION_STEP);\n        this.render();\n        break;\n      }\n\n      case 'ArrowUp': {\n        this.value = Math.min(1, this.value + SATURATION_STEP);\n        this.render();\n        break;\n      }\n\n      case 'ArrowDown': {\n        evt.preventDefault();\n        this.value = Math.max(0, this.value - SATURATION_STEP);\n        this.render();\n        break;\n      }\n    }\n  }\n\n  onMouseDown(evt: MouseEvent) {\n    if (evt.preventDefault) {\n      evt.preventDefault();\n    }\n\n    this.onChange(evt);\n\n    window.addEventListener('mousemove', this.onChange);\n    window.addEventListener('mouseup', this.onMouseUp);\n\n    window.setTimeout(() => {\n      this.$pointer?.focus();\n    }, 0);\n  }\n\n  onMouseUp() {\n    window.removeEventListener('mousemove', this.onChange);\n    window.removeEventListener('mouseup', this.onChange);\n  }\n\n  hsvChanged(evt: CustomEvent) {\n    if (!evt || !evt.detail || !evt.detail.cid) return;\n\n    // handle only current instance\n    if (evt.detail.cid !== this.cid) return;\n\n    let changed = false;\n\n    if (this.hue !== evt.detail.h) {\n      this.hue = evt.detail.h;\n      changed = true;\n    }\n\n    if (this.saturation !== evt.detail.s) {\n      this.saturation = evt.detail.s;\n      changed = true;\n    }\n\n    if (this.value !== evt.detail.v) {\n      this.value = evt.detail.v;\n      changed = true;\n    }\n\n    if (changed) {\n      this.render(false);\n    }\n  }\n\n  hueChanged(evt: CustomEvent) {\n    if (!evt || !evt.detail || !evt.detail.cid) return;\n\n    // handle only current instance\n    if (evt.detail.cid !== this.cid) return;\n\n    this.hue = evt.detail.h;\n\n    this.render();\n  }\n\n  /**\n   * when the custom element connected to DOM\n   */\n  connectedCallback() {\n    if (!this.shadowRoot) return;\n\n    this.cid = this.getAttribute('cid') || '';\n\n    const color = parseColor(this.getAttribute('color'));\n    const hsv = color.toHsv();\n\n    this.hue = hsv.h;\n    this.saturation = hsv.s;\n    this.value = hsv.v;\n\n    const top = getTopByValue(this.value);\n    const left = getLeftBySaturation(this.saturation);\n\n    this.shadowRoot.innerHTML = `\n           <style>${styles}</style>\n           <div class=\"saturation\">\n                <div class=\"box\" style=\"background: ${getHueBackground(this.hue)}\">\n                    <div class=\"white box\">\n                        <div class=\"black box\"></div>\n                        \n                        <div class=\"pointer\" tabindex=\"0\" style=\"top: ${top}; left: ${left};\">\n                            <div class=\"handler\"></div>\n                        </div>\n                    </div>\n                </div>\n           </div>\n        `;\n\n    this.$saturation = this.shadowRoot.querySelector('.saturation');\n    this.$color = this.shadowRoot.querySelector('.box');\n    this.$pointer = this.shadowRoot.querySelector('.pointer');\n\n    this.$pointer?.addEventListener('keydown', this.onPointerKeyDown);\n    this.$saturation?.addEventListener('mousedown', this.onMouseDown);\n    this.$saturation?.addEventListener('mouseup', this.onMouseUp);\n    this.$saturation?.addEventListener('touchmove', this.onChange);\n    this.$saturation?.addEventListener('touchstart', this.onChange);\n\n    document.addEventListener(CUSTOM_EVENT_COLOR_HSV_CHANGED, this.hsvChanged);\n    document.addEventListener(CUSTOM_EVENT_COLOR_HUE_CHANGED, this.hueChanged);\n  }\n\n  /**\n   * when the custom element disconnected from DOM\n   */\n  disconnectedCallback() {\n    this.$saturation?.removeEventListener('mousedown', this.onMouseDown);\n    this.$saturation?.removeEventListener('mouseup', this.onMouseUp);\n    this.$saturation?.removeEventListener('touchmove', this.onChange);\n    this.$saturation?.removeEventListener('touchstart', this.onChange);\n    this.$pointer?.removeEventListener('keydown', this.onPointerKeyDown);\n\n    document.removeEventListener(CUSTOM_EVENT_COLOR_HSV_CHANGED, this.hsvChanged);\n    document.removeEventListener(CUSTOM_EVENT_COLOR_HUE_CHANGED, this.hueChanged);\n  }\n\n  /**\n   * when attributes change\n   */\n  attributeChangedCallback(_attrName: string, _oldVal: string, newVal: string) {\n    const color = parseColor(newVal);\n    const hsv = color.toHsv();\n\n    this.hue = hsv.h;\n    this.saturation = hsv.s;\n    this.value = hsv.v;\n\n    this.render(false);\n  }\n}\n\nexport default Saturation;\n", "// @ts-ignore: esbuild custom loader\nimport styles from './hue.pcss';\nimport { CUSTOM_EVENT_COLOR_HSV_CHANGED, sendHueCustomEvent } from '../../domain/events-provider';\nimport { getHueByLeft, getLeftByHue, parseColor } from '../../domain/color-provider';\n\n/*\n Usage:\n ------\n <toolcool-color-picker-hue color=\"#000\" cid=\"...\"></toolcool-color-picker-hue>\n */\nclass Hue extends HTMLElement {\n  // this id attribute is used for custom events\n  private cid: string;\n\n  private $hue: HTMLElement | null;\n  private $pointer: HTMLElement | null;\n\n  private hue = 0; // [0, 360]\n\n  static get observedAttributes() {\n    return ['color'];\n  }\n\n  constructor() {\n    super();\n\n    this.attachShadow({\n      mode: 'open', // 'closed', 'open',\n    });\n\n    this.onMouseDown = this.onMouseDown.bind(this);\n    this.onMouseUp = this.onMouseUp.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.onKeyDown = this.onKeyDown.bind(this);\n\n    this.hsvChanged = this.hsvChanged.bind(this);\n  }\n\n  render() {\n    if (this.$pointer) {\n      this.$pointer.style.left = `${getLeftByHue(this.hue)}%`;\n    }\n\n    // update outer color to change the button, and\n    // send the updated color to the user\n    sendHueCustomEvent(this.cid, this.hue);\n  }\n\n  hsvChanged(evt: CustomEvent) {\n    if (!evt || !evt.detail || !evt.detail.cid) return;\n\n    // handle only current instance\n    if (evt.detail.cid !== this.cid) return;\n\n    if (this.hue !== evt.detail.h) {\n      this.hue = evt.detail.h;\n      this.render();\n    }\n  }\n\n  // we need to handle both MouseEvent and TouchEvent --->\n  // eslint-disable-next-line\n  onChange(evt: any) {\n    if (!this.$hue) return;\n\n    if (evt.preventDefault) {\n      evt.preventDefault();\n    }\n\n    const { width: boxWidth, left: boxLeft } = this.$hue.getBoundingClientRect();\n    if (boxWidth === 0) return;\n\n    const mouseX = typeof evt.clientX === 'number' ? evt.clientX : evt.touches[0].clientX;\n\n    const left = Math.min(Math.max(0, mouseX - boxLeft), boxWidth);\n    const percent = Math.min(Math.max(0, Math.round((left * 100) / boxWidth)), 100);\n\n    this.hue = getHueByLeft(percent);\n    this.render();\n  }\n\n  onKeyDown(evt: KeyboardEvent) {\n    this.$pointer?.focus();\n\n    switch (evt.key) {\n      case 'ArrowLeft': {\n        let percent = getLeftByHue(this.hue);\n        percent = Math.max(0, percent - 1);\n        this.hue = getHueByLeft(percent);\n        this.render();\n        break;\n      }\n\n      case 'ArrowRight': {\n        let percent = getLeftByHue(this.hue);\n        percent = Math.min(100, percent + 1);\n        this.hue = getHueByLeft(percent);\n        this.render();\n        break;\n      }\n    }\n  }\n\n  onMouseDown(evt: MouseEvent) {\n    if (evt.preventDefault) {\n      evt.preventDefault();\n    }\n\n    this.onChange(evt);\n\n    window.addEventListener('mousemove', this.onChange);\n    window.addEventListener('mouseup', this.onMouseUp);\n\n    window.setTimeout(() => {\n      this.$pointer?.focus();\n    }, 0);\n  }\n\n  onMouseUp() {\n    window.removeEventListener('mousemove', this.onChange);\n    window.removeEventListener('mouseup', this.onChange);\n  }\n\n  /**\n   * when the custom element connected to DOM\n   */\n  connectedCallback() {\n    if (!this.shadowRoot) return;\n\n    this.cid = this.getAttribute('cid') || '';\n\n    const color = parseColor(this.getAttribute('color'));\n    this.hue = color.toHsv().h;\n\n    this.shadowRoot.innerHTML = `\n           <style>${styles}</style>\n           <div class=\"hue\">\n                <div class=\"box\">\n                    <div class=\"hue-v box\">\n                        <div class=\"hue-h\"></div>\n                    </div>\n                    \n                    <div class=\"pointer box\">\n                        <div class=\"pointer-box\" tabindex=\"0\" style=\"left: ${getLeftByHue(this.hue)}%\">\n                            <div class=\"handler\"></div>\n                        </div>\n                    </div>\n                </div>\n           </div>\n        `;\n\n    this.$hue = this.shadowRoot.querySelector('.hue');\n    this.$pointer = this.shadowRoot.querySelector('.pointer-box');\n\n    this.$hue?.addEventListener('mousedown', this.onMouseDown);\n    this.$hue?.addEventListener('mouseup', this.onMouseUp);\n    this.$hue?.addEventListener('touchmove', this.onChange);\n    this.$hue?.addEventListener('touchstart', this.onChange);\n\n    this.$pointer?.addEventListener('keydown', this.onKeyDown);\n    document.addEventListener(CUSTOM_EVENT_COLOR_HSV_CHANGED, this.hsvChanged);\n  }\n\n  /**\n   * when the custom element disconnected from DOM\n   */\n  disconnectedCallback() {\n    this.$hue?.removeEventListener('mousedown', this.onMouseDown);\n    this.$hue?.removeEventListener('mouseup', this.onMouseUp);\n    this.$hue?.removeEventListener('touchmove', this.onChange);\n    this.$hue?.removeEventListener('touchstart', this.onChange);\n    this.$pointer?.removeEventListener('keydown', this.onKeyDown);\n\n    document.removeEventListener(CUSTOM_EVENT_COLOR_HSV_CHANGED, this.hsvChanged);\n  }\n\n  /**\n   * when attributes change\n   */\n  attributeChangedCallback(_attrName: string, _oldVal: string, newVal: string) {\n    const color = parseColor(newVal);\n    const hsv = color.toHsv();\n\n    this.hue = hsv.h;\n    this.render();\n  }\n}\n\nexport default Hue;\n", "// @ts-ignore: esbuild custom loader\nimport styles from './alpha.pcss';\nimport { CUSTOM_EVENT_COLOR_ALPHA_CHANGED, CUSTOM_EVENT_COLOR_HSV_CHANGED, CUSTOM_EVENT_COLOR_HUE_CHANGED, sendAlphaCustomEvent } from '../../domain/events-provider';\nimport { getAlphaColorBackground, parseColor } from '../../domain/color-provider';\nimport { TinyColor } from '@ctrl/tinycolor';\n\n/*\n Usage:\n ------\n <toolcool-color-picker-alpha color=\"#000\" cid=\"...\"></toolcool-color-picker-alpha>\n */\nclass Alpha extends HTMLElement {\n  static get observedAttributes() {\n    return ['color'];\n  }\n\n  // this id attribute is used for custom events\n  private cid: string;\n\n  private $alpha: HTMLElement | null;\n  private $color: HTMLElement | null;\n  private $pointer: HTMLElement | null;\n\n  private alpha = 1; // [0, 1]\n  private hue = 0; // [0, 360]\n  private saturation = 0; // [0, 1]\n  private value = 0; // [0, 1]\n\n  constructor() {\n    super();\n\n    this.attachShadow({\n      mode: 'open', // 'closed', 'open',\n    });\n\n    this.onMouseDown = this.onMouseDown.bind(this);\n    this.onMouseUp = this.onMouseUp.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.onKeyDown = this.onKeyDown.bind(this);\n\n    this.hsvChanged = this.hsvChanged.bind(this);\n    this.hueChanged = this.hueChanged.bind(this);\n    this.alphaChanged = this.alphaChanged.bind(this);\n  }\n\n  render(sendEvent = true) {\n    if (this.$pointer) {\n      this.$pointer.style.left = `${this.alpha * 100}%`;\n    }\n\n    if (this.$color) {\n      const color = new TinyColor({\n        h: this.hue,\n        s: this.saturation,\n        v: this.value,\n        a: this.alpha,\n      });\n\n      this.$color.style.background = getAlphaColorBackground(color);\n    }\n\n    if (sendEvent) {\n      sendAlphaCustomEvent(this.cid, this.alpha);\n    }\n  }\n\n  // we need to handle both MouseEvent and TouchEvent --->\n  // eslint-disable-next-line\n  onChange(evt: any) {\n    if (!this.$alpha) return;\n\n    if (evt.preventDefault) {\n      evt.preventDefault();\n    }\n\n    const { width: boxWidth, left: boxLeft } = this.$alpha.getBoundingClientRect();\n    if (boxWidth === 0) return;\n\n    const mouseX = typeof evt.clientX === 'number' ? evt.clientX : evt.touches[0].clientX;\n\n    const left = Math.min(Math.max(0, mouseX - boxLeft), boxWidth);\n    const percent = Math.min(Math.max(0, (left * 100) / boxWidth), 100);\n\n    this.alpha = percent / 100;\n    this.render();\n  }\n\n  onKeyDown(evt: KeyboardEvent) {\n    this.$pointer?.focus();\n\n    switch (evt.key) {\n      case 'ArrowLeft': {\n        let percent = this.alpha * 100;\n        percent = Math.max(0, percent - 1);\n        this.alpha = percent / 100;\n        this.render();\n        break;\n      }\n\n      case 'ArrowRight': {\n        let percent = this.alpha * 100;\n        percent = Math.min(100, percent + 1);\n        this.alpha = percent / 100;\n        this.render();\n        break;\n      }\n    }\n  }\n\n  hsvChanged(evt: CustomEvent) {\n    if (!evt || !evt.detail || !evt.detail.cid) return;\n\n    // handle only current instance\n    if (evt.detail.cid !== this.cid) return;\n\n    this.saturation = evt.detail.h;\n    this.hue = evt.detail.s;\n    this.value = evt.detail.v;\n\n    this.render(false);\n  }\n\n  hueChanged(evt: CustomEvent) {\n    if (!evt || !evt.detail || !evt.detail.cid) return;\n\n    // handle only current instance\n    if (evt.detail.cid !== this.cid) return;\n\n    this.hue = evt.detail.h;\n\n    this.render(false);\n  }\n\n  alphaChanged(evt: CustomEvent) {\n    if (!evt || !evt.detail || !evt.detail.cid) return;\n\n    // handle only current instance\n    if (evt.detail.cid !== this.cid) return;\n\n    if (this.alpha !== evt.detail.a) {\n      this.alpha = evt.detail.a;\n      this.render();\n    }\n  }\n\n  onMouseDown(evt: MouseEvent) {\n    if (evt.preventDefault) {\n      evt.preventDefault();\n    }\n\n    this.onChange(evt);\n\n    window.addEventListener('mousemove', this.onChange);\n    window.addEventListener('mouseup', this.onMouseUp);\n\n    window.setTimeout(() => {\n      this.$pointer?.focus();\n    }, 0);\n  }\n\n  onMouseUp() {\n    window.removeEventListener('mousemove', this.onChange);\n    window.removeEventListener('mouseup', this.onChange);\n  }\n\n  /**\n   * when the custom element connected to DOM\n   */\n  connectedCallback() {\n    if (!this.shadowRoot) return;\n\n    this.cid = this.getAttribute('cid') || '';\n\n    const color = parseColor(this.getAttribute('color'));\n    const hsv = color.toHsv();\n\n    this.alpha = hsv.a;\n    this.hue = hsv.h;\n    this.saturation = hsv.s;\n    this.value = hsv.v;\n\n    this.shadowRoot.innerHTML = `\n           <style>${styles}</style>\n           <div class=\"alpha\">\n                <div class=\"box\">\n                    <div class=\"transparent-bg box\"></div>\n                    <div class=\"color-bg box\" style=\"background: ${getAlphaColorBackground(color)}\"></div>\n                    \n                    <div class=\"pointer box\">\n                        <div class=\"pointer-box\" tabindex=\"0\" style=\"left: ${this.alpha * 100}%;\" >\n                            <div class=\"handler\"></div>\n                        </div>\n                    </div>\n                </div>\n           </div>\n        `;\n\n    this.$alpha = this.shadowRoot.querySelector('.alpha');\n    this.$color = this.shadowRoot.querySelector('.color-bg');\n    this.$pointer = this.shadowRoot.querySelector('.pointer-box');\n\n    this.$alpha?.addEventListener('mousedown', this.onMouseDown);\n    this.$alpha?.addEventListener('mouseup', this.onMouseUp);\n    this.$alpha?.addEventListener('touchmove', this.onChange);\n    this.$alpha?.addEventListener('touchstart', this.onChange);\n    this.$pointer?.addEventListener('keydown', this.onKeyDown);\n\n    document.addEventListener(CUSTOM_EVENT_COLOR_HSV_CHANGED, this.hsvChanged);\n    document.addEventListener(CUSTOM_EVENT_COLOR_HUE_CHANGED, this.hueChanged);\n    document.addEventListener(CUSTOM_EVENT_COLOR_ALPHA_CHANGED, this.alphaChanged);\n  }\n\n  /**\n   * when the custom element disconnected from DOM\n   */\n  disconnectedCallback() {\n    this.$alpha?.removeEventListener('mousedown', this.onMouseDown);\n    this.$alpha?.removeEventListener('mouseup', this.onMouseUp);\n    this.$alpha?.removeEventListener('touchmove', this.onChange);\n    this.$alpha?.removeEventListener('touchstart', this.onChange);\n    this.$pointer?.removeEventListener('keydown', this.onKeyDown);\n\n    document.removeEventListener(CUSTOM_EVENT_COLOR_HSV_CHANGED, this.hsvChanged);\n    document.removeEventListener(CUSTOM_EVENT_COLOR_HUE_CHANGED, this.hueChanged);\n    document.removeEventListener(CUSTOM_EVENT_COLOR_ALPHA_CHANGED, this.alphaChanged);\n  }\n\n  /**\n   * when attributes change\n   */\n  attributeChangedCallback(_attrName: string, _oldVal: string, newVal: string) {\n    const color = parseColor(newVal);\n    const hsv = color.toHsv();\n\n    this.alpha = hsv.a;\n    this.hue = hsv.h;\n    this.saturation = hsv.s;\n    this.value = hsv.v;\n\n    this.render();\n  }\n}\n\nexport default Alpha;\n", "// @ts-ignore: esbuild custom loader\nimport styles from './fields.pcss';\nimport { CUSTOM_EVENT_COLOR_ALPHA_CHANGED, CUSTOM_EVENT_COLOR_HSV_CHANGED, CUSTOM_EVENT_COLOR_HUE_CHANGED, sendAlphaCustomEvent, sendHsvCustomEvent } from '../../domain/events-provider';\nimport { TinyColor } from '@ctrl/tinycolor';\nimport { fixPercent, fixRGB, parseColor } from '../../domain/color-provider';\nimport { getUniqueId } from '../../domain/common-provider';\n\n/*\n Usage:\n ------\n <toolcool-color-picker-fields color=\"#000\" cid=\"...\"></toolcool-color-picker-fields>\n */\nclass Fields extends HTMLElement {\n  // this id attribute is used for custom events\n  private cid: string;\n  private color: TinyColor = new TinyColor('#000');\n\n  private $hex: HTMLInputElement;\n  private $r: HTMLInputElement;\n  private $g: HTMLInputElement;\n  private $b: HTMLInputElement;\n  private $a: HTMLInputElement;\n\n  private hex = '';\n  private r = 0;\n  private g = 0;\n  private b = 0;\n  private a = 1;\n\n  static get observedAttributes() {\n    return ['color'];\n  }\n\n  constructor() {\n    super();\n\n    this.attachShadow({\n      mode: 'open', // 'closed', 'open',\n    });\n\n    this.hsvChanged = this.hsvChanged.bind(this);\n    this.hueChanged = this.hueChanged.bind(this);\n    this.alphaChanged = this.alphaChanged.bind(this);\n\n    this.onHexChange = this.onHexChange.bind(this);\n    this.render = this.render.bind(this);\n    this.onRedChange = this.onRedChange.bind(this);\n    this.onGreenChange = this.onGreenChange.bind(this);\n    this.onBlueChange = this.onBlueChange.bind(this);\n    this.onAlphaChange = this.onAlphaChange.bind(this);\n    this.onRedKeyDown = this.onRedKeyDown.bind(this);\n    this.onBlueKeyDown = this.onBlueKeyDown.bind(this);\n    this.onGreenKeyDown = this.onGreenKeyDown.bind(this);\n    this.onAlphaKeyDown = this.onAlphaKeyDown.bind(this);\n  }\n\n  hueChanged(evt: CustomEvent) {\n    if (!evt || !evt.detail || !evt.detail.cid) return;\n\n    // handle only current instance\n    if (evt.detail.cid !== this.cid) return;\n\n    const hsv = this.color.toHsv();\n\n    this.color = new TinyColor({\n      h: Number(evt.detail.h),\n      s: hsv.s,\n      v: hsv.v,\n      a: hsv.a,\n    });\n\n    this.render();\n  }\n\n  alphaChanged(evt: CustomEvent) {\n    if (!evt || !evt.detail || !evt.detail.cid) return;\n\n    // handle only current instance\n    if (evt.detail.cid !== this.cid) return;\n\n    const rgba = this.color.toRgb();\n    rgba.a = evt.detail.a;\n\n    this.color = new TinyColor(rgba);\n    this.render();\n  }\n\n  hsvChanged(evt: CustomEvent) {\n    if (!evt || !evt.detail || !evt.detail.cid) return;\n\n    // handle only current instance\n    if (evt.detail.cid !== this.cid) return;\n\n    this.color = new TinyColor({\n      h: evt.detail.h,\n      s: evt.detail.s,\n      v: evt.detail.v,\n      a: this.color.toHsv().a,\n    });\n\n    this.render();\n  }\n\n  render() {\n    const rgba = this.color.toRgb();\n    this.r = rgba.r;\n    this.g = rgba.g;\n    this.b = rgba.b;\n    this.a = rgba.a;\n    this.hex = this.color.toHex();\n\n    if (this.$hex && this.shadowRoot?.activeElement !== this.$hex) {\n      this.$hex.value = this.hex.toUpperCase();\n    }\n\n    if (this.$r && this.shadowRoot?.activeElement !== this.$r) {\n      this.$r.value = this.r.toString();\n    }\n\n    if (this.$g && this.shadowRoot?.activeElement !== this.$g) {\n      this.$g.value = this.g.toString();\n    }\n\n    if (this.$b && this.shadowRoot?.activeElement !== this.$b) {\n      this.$b.value = this.b.toString();\n    }\n\n    if (this.$a && this.shadowRoot?.activeElement !== this.$a) {\n      this.$a.value = Math.round(this.a * 100).toString();\n    }\n  }\n\n  onFieldKeyDown(evt: KeyboardEvent, type: string) {\n    const rgba = this.color.toRgb();\n\n    switch (evt.key) {\n      case 'ArrowUp': {\n        if (type === 'r') {\n          this.r = Math.min(255, rgba.r + 1);\n          rgba.r = this.r;\n          const hsv = new TinyColor(rgba).toHsv();\n          sendHsvCustomEvent(this.cid, hsv.h, hsv.s, hsv.v);\n          this.$r.value = this.r.toString();\n          this.render();\n        }\n        if (type === 'g') {\n          this.g = Math.min(255, rgba.g + 1);\n          rgba.g = this.g;\n\n          const hsv = new TinyColor(rgba).toHsv();\n          sendHsvCustomEvent(this.cid, hsv.h, hsv.s, hsv.v);\n          this.$g.value = this.g.toString();\n          this.render();\n        }\n        if (type === 'b') {\n          this.b = Math.min(255, rgba.b + 1);\n          rgba.b = this.b;\n          const hsv = new TinyColor(rgba).toHsv();\n          sendHsvCustomEvent(this.cid, hsv.h, hsv.s, hsv.v);\n          this.$b.value = this.b.toString();\n          this.render();\n        }\n        if (type === 'a') {\n          this.a = Math.min(100, this.a + 0.01);\n          this.$a.value = Math.round(this.a * 100).toString();\n\n          const rgba = this.color.toRgb();\n          rgba.a = this.a;\n          this.color = new TinyColor(rgba);\n\n          this.render();\n          sendAlphaCustomEvent(this.cid, this.a);\n        }\n        break;\n      }\n      case 'ArrowDown': {\n        if (type === 'r') {\n          this.r = Math.max(0, rgba.r - 1);\n          rgba.r = this.r;\n          const hsv = new TinyColor(rgba).toHsv();\n          sendHsvCustomEvent(this.cid, hsv.h, hsv.s, hsv.v);\n          this.$r.value = this.r.toString();\n          this.render();\n        }\n        if (type === 'g') {\n          this.g = Math.max(0, rgba.g - 1);\n          rgba.g = this.g;\n\n          const hsv = new TinyColor(rgba).toHsv();\n          sendHsvCustomEvent(this.cid, hsv.h, hsv.s, hsv.v);\n          this.$g.value = this.g.toString();\n          this.render();\n        }\n        if (type === 'b') {\n          this.b = Math.max(0, rgba.b - 1);\n          rgba.b = this.b;\n          const hsv = new TinyColor(rgba).toHsv();\n          sendHsvCustomEvent(this.cid, hsv.h, hsv.s, hsv.v);\n          this.$b.value = this.b.toString();\n          this.render();\n        }\n        if (type === 'a') {\n          this.a = Math.max(0, this.a - 0.01);\n          this.$a.value = Math.round(this.a * 100).toString();\n\n          const rgba = this.color.toRgb();\n          rgba.a = this.a;\n          this.color = new TinyColor(rgba);\n\n          this.render();\n          sendAlphaCustomEvent(this.cid, this.a);\n        }\n        break;\n      }\n      case 'Escape': {\n        if (this.shadowRoot?.activeElement) {\n          const $el = this.shadowRoot.activeElement as HTMLElement;\n          $el.blur();\n        }\n\n        this.render();\n        break;\n      }\n      case 'Enter': {\n        if (this.shadowRoot?.activeElement) {\n          const $el = this.shadowRoot.activeElement as HTMLElement;\n          $el.blur();\n        }\n\n        this.render();\n        break;\n      }\n    }\n  }\n\n  onRedKeyDown(evt: KeyboardEvent) {\n    this.onFieldKeyDown(evt, 'r');\n  }\n\n  onGreenKeyDown(evt: KeyboardEvent) {\n    this.onFieldKeyDown(evt, 'g');\n  }\n\n  onBlueKeyDown(evt: KeyboardEvent) {\n    this.onFieldKeyDown(evt, 'b');\n  }\n\n  onAlphaKeyDown(evt: KeyboardEvent) {\n    this.onFieldKeyDown(evt, 'a');\n  }\n\n  onHexChange(evt: Event) {\n    const $target = evt.target as HTMLInputElement;\n    if ($target.value.length !== 6) return;\n\n    const updatedColor = new TinyColor(`#${$target.value}`);\n\n    if (updatedColor.isValid) {\n      this.color = updatedColor;\n\n      const hsv = this.color.toHsv();\n\n      // update outer color to change the button, and\n      // send the updated color to the user\n      sendHsvCustomEvent(this.cid, hsv.h, hsv.s, hsv.v);\n    }\n  }\n\n  onRedChange(evt: Event) {\n    const $target = evt.target as HTMLInputElement;\n    const fixedValue = fixRGB($target.value);\n\n    if (fixedValue.toString() === $target.value) {\n      const rgba = this.color.toRgb();\n      rgba.r = fixedValue;\n      const hsv = new TinyColor(rgba).toHsv();\n\n      // update outer color to change the button, and\n      // send the updated color to the user\n      sendHsvCustomEvent(this.cid, hsv.h, hsv.s, hsv.v);\n    }\n  }\n\n  onGreenChange(evt: Event) {\n    const $target = evt.target as HTMLInputElement;\n    const fixedValue = fixRGB($target.value);\n\n    if (fixedValue.toString() === $target.value) {\n      const rgba = this.color.toRgb();\n      rgba.g = fixedValue;\n      const hsv = new TinyColor(rgba).toHsv();\n\n      // update outer color to change the button, and\n      // send the updated color to the user\n      sendHsvCustomEvent(this.cid, hsv.h, hsv.s, hsv.v);\n    }\n  }\n\n  onBlueChange(evt: Event) {\n    const $target = evt.target as HTMLInputElement;\n    const fixedValue = fixRGB($target.value);\n\n    if (fixedValue.toString() === $target.value) {\n      const rgba = this.color.toRgb();\n      rgba.b = fixedValue;\n      const hsv = new TinyColor(rgba).toHsv();\n\n      // update outer color to change the button, and\n      // send the updated color to the user\n      sendHsvCustomEvent(this.cid, hsv.h, hsv.s, hsv.v);\n    }\n  }\n\n  onAlphaChange(evt: Event) {\n    const $target = evt.target as HTMLInputElement;\n    const fixedValue = fixPercent($target.value);\n\n    if (fixedValue.toString() === $target.value) {\n      sendAlphaCustomEvent(this.cid, fixedValue / 100);\n    }\n  }\n\n  /**\n   * when the custom element connected to DOM\n   */\n  connectedCallback() {\n    if (!this.shadowRoot) return;\n\n    this.cid = this.getAttribute('cid') || '';\n    this.color = parseColor(this.getAttribute('color'));\n\n    const rgba = this.color.toRgb();\n    this.r = rgba.r;\n    this.g = rgba.g;\n    this.b = rgba.b;\n    this.a = rgba.a;\n    this.hex = this.color.toHex();\n\n    const hexId = getUniqueId();\n    const rId = getUniqueId();\n    const gId = getUniqueId();\n    const bId = getUniqueId();\n    const aId = getUniqueId();\n\n    this.shadowRoot.innerHTML = `\n           <style>${styles}</style>\n           <div class=\"fields\">\n               <input id=\"hex-${hexId}\" type=\"text\" value=\"${this.hex.toUpperCase()}\" data-type=\"hex\" />\n               <input id=\"r-${rId}\" type=\"text\" value=\"${this.r}\" data-type=\"r\" />\n               <input id=\"g-${gId}\" type=\"text\" value=\"${this.g}\" data-type=\"g\" />\n               <input id=\"b-${bId}\" type=\"text\" value=\"${this.b}\" data-type=\"b\" />\n               <input id=\"a-${aId}\" type=\"text\" value=\"${Math.round(this.a * 100)}\" data-type=\"a\" />\n               \n               <label for=\"hex-${hexId}\">Hex</label>\n               <label for=\"r-${rId}\">R</label>\n               <label for=\"g-${gId}\">G</label>\n               <label for=\"b-${bId}\">B</label>\n               <label for=\"a-${aId}\">A</label>\n           </div>\n        `;\n\n    this.$hex = this.shadowRoot.getElementById(`hex-${hexId}`) as HTMLInputElement;\n    this.$r = this.shadowRoot.getElementById(`r-${rId}`) as HTMLInputElement;\n    this.$g = this.shadowRoot.getElementById(`g-${gId}`) as HTMLInputElement;\n    this.$b = this.shadowRoot.getElementById(`b-${bId}`) as HTMLInputElement;\n    this.$a = this.shadowRoot.getElementById(`a-${aId}`) as HTMLInputElement;\n\n    // custom event from other parts of the app\n    document.addEventListener(CUSTOM_EVENT_COLOR_HSV_CHANGED, this.hsvChanged);\n    document.addEventListener(CUSTOM_EVENT_COLOR_HUE_CHANGED, this.hueChanged);\n    document.addEventListener(CUSTOM_EVENT_COLOR_ALPHA_CHANGED, this.alphaChanged);\n\n    this.$hex.addEventListener('input', this.onHexChange);\n    this.$r.addEventListener('input', this.onRedChange);\n    this.$g.addEventListener('input', this.onGreenChange);\n    this.$b.addEventListener('input', this.onBlueChange);\n    this.$a.addEventListener('input', this.onAlphaChange);\n\n    this.$hex.addEventListener('blur', this.render);\n    this.$r.addEventListener('blur', this.render);\n    this.$g.addEventListener('blur', this.render);\n    this.$b.addEventListener('blur', this.render);\n    this.$a.addEventListener('blur', this.render);\n\n    this.$r.addEventListener('keydown', this.onRedKeyDown);\n    this.$g.addEventListener('keydown', this.onGreenKeyDown);\n    this.$b.addEventListener('keydown', this.onBlueKeyDown);\n    this.$a.addEventListener('keydown', this.onAlphaKeyDown);\n  }\n\n  /**\n   * when the custom element disconnected from DOM\n   */\n  disconnectedCallback() {\n    document.removeEventListener(CUSTOM_EVENT_COLOR_HSV_CHANGED, this.hsvChanged);\n    document.removeEventListener(CUSTOM_EVENT_COLOR_HUE_CHANGED, this.hueChanged);\n    document.removeEventListener(CUSTOM_EVENT_COLOR_ALPHA_CHANGED, this.alphaChanged);\n\n    this.$hex.removeEventListener('input', this.onHexChange);\n    this.$r.removeEventListener('input', this.onRedChange);\n    this.$g.removeEventListener('input', this.onGreenChange);\n    this.$b.removeEventListener('input', this.onBlueChange);\n    this.$a.removeEventListener('input', this.onAlphaChange);\n\n    this.$hex.removeEventListener('blur', this.render);\n    this.$r.removeEventListener('blur', this.render);\n    this.$g.removeEventListener('blur', this.render);\n    this.$b.removeEventListener('blur', this.render);\n    this.$a.removeEventListener('blur', this.render);\n\n    this.$r.removeEventListener('keydown', this.onRedKeyDown);\n    this.$g.removeEventListener('keydown', this.onGreenKeyDown);\n    this.$b.removeEventListener('keydown', this.onBlueKeyDown);\n    this.$a.removeEventListener('keydown', this.onAlphaKeyDown);\n  }\n\n  /**\n   * when attributes change\n   */\n  attributeChangedCallback(_attrName: string, _oldVal: string, newVal: string) {\n    this.color = parseColor(newVal);\n    this.render();\n  }\n}\n\nexport default Fields;\n", "// @ts-ignore: esbuild custom loader\nimport styles from './popup.pcss';\nimport Saturation from '../saturation/saturation';\nimport Hue from '../hue/hue';\nimport Alpha from '../alpha/alpha';\nimport Fields from '../fields/fields';\n\n/*\n Usage:\n ------\n <toolcool-color-picker-popup color=\"#000\" cid=\"...\" popup-position=\"left\"></toolcool-color-picker-popup>\n */\nclass ColorPickerPopup extends HTMLElement {\n  // this id attribute is used for custom events\n  private readonly cid: string;\n  private popupPosition = 'left';\n\n  private $popup: HTMLElement | null;\n  private color = '#000';\n\n  static get observedAttributes() {\n    return ['color', 'popup-position'];\n  }\n\n  constructor() {\n    super();\n\n    // register web components\n    if (!customElements.get('toolcool-color-picker-saturation')) {\n      customElements.define('toolcool-color-picker-saturation', Saturation);\n    }\n\n    if (!customElements.get('toolcool-color-picker-hue')) {\n      customElements.define('toolcool-color-picker-hue', Hue);\n    }\n\n    if (!customElements.get('toolcool-color-picker-alpha')) {\n      customElements.define('toolcool-color-picker-alpha', Alpha);\n    }\n\n    if (!customElements.get('toolcool-color-picker-fields')) {\n      customElements.define('toolcool-color-picker-fields', Fields);\n    }\n\n    this.cid = this.getAttribute('cid') || '';\n    this.prevent = this.prevent.bind(this);\n\n    this.attachShadow({\n      mode: 'open', // 'closed', 'open',\n    });\n  }\n\n  prevent(evt: MouseEvent) {\n    evt.stopPropagation();\n  }\n\n  /**\n   * when the custom element connected to DOM\n   */\n  connectedCallback() {\n    if (!this.shadowRoot) return;\n\n    this.color = this.getAttribute('color') || '#000';\n    this.popupPosition = this.getAttribute('popup-position') || 'left';\n\n    this.shadowRoot.innerHTML = `\n           <style>${styles}</style>\n           <div class=\"popup\">\n                <toolcool-color-picker-saturation color=\"${this.color}\" cid=\"${this.cid}\"></toolcool-color-picker-saturation>\n                <toolcool-color-picker-hue color=\"${this.color}\" cid=\"${this.cid}\"></toolcool-color-picker-hue>\n                <toolcool-color-picker-alpha color=\"${this.color}\" cid=\"${this.cid}\"></toolcool-color-picker-alpha>\n                <toolcool-color-picker-fields color=\"${this.color}\" cid=\"${this.cid}\"></toolcool-color-picker-fields>\n           </div>\n        `;\n\n    this.$popup = this.shadowRoot.querySelector('.popup');\n    this.$popup?.addEventListener('mousedown', this.prevent); // disable 'click outside' feature inside the popup\n    this.$popup?.classList.toggle('right', this.popupPosition === 'right');\n  }\n\n  /**\n   * when the custom element disconnected from DOM\n   */\n  disconnectedCallback() {\n    this.$popup?.removeEventListener('mousedown', this.prevent);\n  }\n\n  /**\n   * when attributes change\n   */\n  attributeChangedCallback(attrName: string, _oldVal: string, newVal: string) {\n    if (attrName === 'popup-position') {\n      this.popupPosition = newVal;\n\n      if (this.$popup) {\n        this.$popup.classList.toggle('right', this.popupPosition === 'right');\n      }\n    }\n\n    if (attrName === 'color') {\n      this.color = newVal;\n\n      const $saturation = this.shadowRoot?.querySelector('toolcool-color-picker-saturation');\n      const $hue = this.shadowRoot?.querySelector('toolcool-color-picker-hue');\n      const $alpha = this.shadowRoot?.querySelector('toolcool-color-picker-alpha');\n      const $fields = this.shadowRoot?.querySelector('toolcool-color-picker-fields');\n\n      if ($saturation) {\n        $saturation.setAttribute('color', this.color);\n      }\n\n      if ($hue) {\n        $hue.setAttribute('color', this.color);\n      }\n\n      if ($alpha) {\n        $alpha.setAttribute('color', this.color);\n      }\n\n      if ($fields) {\n        $fields.setAttribute('color', this.color);\n      }\n    }\n  }\n}\n\nexport default ColorPickerPopup;\n", "// @ts-ignore: esbuild custom loader\nimport styles from './styles.pcss';\nimport ColorPickerPopup from '../ui/popup/popup';\nimport { CUSTOM_EVENT_COLOR_HSV_CHANGED, CUSTOM_EVENT_COLOR_HUE_CHANGED, CUSTOM_EVENT_COLOR_ALPHA_CHANGED, CUSTOM_EVENT_BUTTON_CLICKED, sendButtonClickedCustomEvent } from '../domain/events-provider';\nimport { getUniqueId } from '../domain/common-provider';\nimport { hslaToString, hsvaToString, parseColor, rgbaToString } from '../domain/color-provider';\nimport { TinyColor } from '@ctrl/tinycolor'; // https://github.com/scttcper/tinycolor\nimport { ColorInput } from '@ctrl/tinycolor/dist';\n\n/**\n * predefined button widths\n */\nconst buttonPredefinedSizes: { [key: string]: string } = {\n  sm: '0.875rem',\n  md: '1.2rem',\n  lg: '1.5rem',\n  xl: '2.25rem',\n  '2xl': '3rem',\n  '3xl': '3.75rem',\n  '4xl': '4.5rem',\n};\n\n/*\n Usage:\n ------\n <toolcool-color-picker color=\"#ff0000\" popup-position=\"left\"></toolcool-color-picker>\n */\ninterface IColorPickerState {\n  // popup\n  isPopupVisible: boolean;\n  popupPosition: string;\n\n  // color\n  initialColor: TinyColor;\n  color: TinyColor;\n\n  // button\n  buttonWidth?: string | null;\n  buttonHeight?: string | null;\n  buttonPadding?: string | null;\n}\n\nclass ColorPicker extends HTMLElement {\n  static get observedAttributes() {\n    return ['color', 'popup-position', 'button-width', 'button-height', 'button-padding'];\n  }\n\n  // ----------- APIs ------------------------\n\n  /**\n   * set any color that TinyColor accepts\n   */\n  public set color(userColor: ColorInput) {\n    this.state.color = new TinyColor(userColor);\n  }\n\n  /**\n   * returns TinyColor object\n   */\n  public get color() {\n    return this.state.color;\n  }\n\n  /**\n   * hex format getter\n   */\n  public get hex() {\n    return this.state.color.toHexString().toUpperCase();\n  }\n\n  /**\n   * hex with alpha format getter\n   */\n  public get hex8() {\n    return this.state.color.toHex8String().toUpperCase();\n  }\n\n  /**\n   * rgb format getter\n   */\n  public get rgb() {\n    return this.state.color.toRgbString();\n  }\n\n  /**\n   * rgba format getter\n   */\n  public get rgba() {\n    return rgbaToString(this.state.color);\n  }\n\n  /**\n   * hsl format getter\n   */\n  public get hsl() {\n    return this.state.color.toHslString();\n  }\n\n  /**\n   * hsla format getter\n   */\n  public get hsla() {\n    return hslaToString(this.state.color);\n  }\n\n  /**\n   * hsv format getter\n   */\n  public get hsv() {\n    return this.state.color.toHsvString();\n  }\n\n  /**\n   * hsva format getter\n   */\n  public get hsva() {\n    return hsvaToString(this.state.color);\n  }\n\n  public get opened() {\n    return this.state.isPopupVisible;\n  }\n\n  public set opened(isOpened: boolean) {\n    this.state.isPopupVisible = isOpened;\n  }\n\n  // ------------------------- INIT ----------------\n\n  // this id attribute is used for custom events\n  public readonly cid: string;\n\n  private $button: HTMLElement | null;\n  private $buttonColor: HTMLElement | null;\n  private $popupBox: HTMLElement | null;\n\n  private stateDefaults: IColorPickerState = {\n    isPopupVisible: false,\n    popupPosition: 'left',\n    initialColor: new TinyColor('#000'),\n    color: new TinyColor('#000'),\n    buttonWidth: null,\n    buttonHeight: null,\n    buttonPadding: null,\n  };\n  private state: IColorPickerState;\n\n  constructor() {\n    super();\n\n    this.cid = getUniqueId();\n\n    // register web components\n    if (!customElements.get('toolcool-color-picker-popup')) {\n      customElements.define('toolcool-color-picker-popup', ColorPickerPopup);\n    }\n\n    this.attachShadow({\n      mode: 'open', // 'closed', 'open',\n    });\n\n    this.toggle = this.toggle.bind(this);\n    this.onKeyDown = this.onKeyDown.bind(this);\n    this.clickedOutside = this.clickedOutside.bind(this);\n    this.stopPropagation = this.stopPropagation.bind(this);\n\n    this.hsvChanged = this.hsvChanged.bind(this);\n    this.hueChanged = this.hueChanged.bind(this);\n    this.alphaChanged = this.alphaChanged.bind(this);\n    this.buttonClicked = this.buttonClicked.bind(this);\n    this.formatButtonSize = this.formatButtonSize.bind(this);\n\n    this.initState();\n  }\n\n  // --------------------------------------------------\n\n  initState() {\n    // eslint-disable-next-line\n    const scope = this;\n    this.state = new Proxy(scope.stateDefaults, {\n      // eslint-disable-next-line\n      set(target: IColorPickerState, key: string | symbol, value: any, _receiver: any): boolean {\n        target[key] = value;\n\n        if (key === 'isPopupVisible') {\n          scope.onPopupVisibilityChange();\n        }\n\n        if (key === 'popupPosition') {\n          scope.onPopupPosChange();\n        }\n\n        if (key === 'initialColor') {\n          scope.onInitialColorChange();\n        }\n\n        if (key === 'color') {\n          scope.onColorChange();\n        }\n\n        if (key === 'buttonWidth' || key === 'buttonHeight' || key === 'buttonPadding') {\n          scope.setButtonSize();\n        }\n\n        return true;\n      },\n    });\n  }\n\n  onPopupVisibilityChange() {\n    if (!this.$popupBox) return;\n    this.$popupBox.innerHTML = this.state.isPopupVisible\n      ? `<toolcool-color-picker-popup color=\"${this.state.color.toRgbString()}\" cid=\"${this.cid}\" popup-position=\"${this.state.popupPosition}\" />`\n      : '';\n  }\n\n  onPopupPosChange() {\n    if (!this.$popupBox) return;\n\n    const $popup = this.$popupBox.querySelector('toolcool-color-picker-popup');\n    if (!$popup) return;\n\n    $popup.setAttribute('popup-position', this.state.popupPosition);\n  }\n\n  onInitialColorChange() {\n    const bgColor = rgbaToString(this.state.color);\n\n    if (this.$buttonColor) {\n      this.$buttonColor.style.backgroundColor = bgColor;\n    }\n\n    const $popup = this.shadowRoot?.querySelector('toolcool-color-picker-popup');\n    if ($popup) {\n      $popup.setAttribute('color', bgColor);\n    }\n  }\n\n  setButtonSize() {\n    if (!this.$button) return;\n\n    if (this.state.buttonWidth) {\n      this.$button.style.width = this.formatButtonSize(this.state.buttonWidth);\n    }\n\n    if (this.state.buttonHeight) {\n      this.$button.style.height = this.formatButtonSize(this.state.buttonHeight);\n    }\n\n    if (this.state.buttonPadding) {\n      this.$button.style.padding = this.state.buttonPadding;\n    }\n  }\n\n  onColorChange() {\n    if (this.$buttonColor) {\n      this.$buttonColor.style.backgroundColor = rgbaToString(this.state.color);\n    }\n\n    this.dispatchEvent(\n      new CustomEvent('change', {\n        detail: {\n          hex: this.hex,\n          hex8: this.hex8,\n          rgb: this.rgb,\n          rgba: this.rgba,\n          hsl: this.hsl,\n          hsla: this.hsla,\n          hsv: this.hsv,\n          hsva: this.hsva,\n          color: this.color,\n        },\n      })\n    );\n  }\n\n  hsvChanged(evt: CustomEvent) {\n    if (!evt || !evt.detail || !evt.detail.cid) return;\n\n    // handle only current instance\n    if (evt.detail.cid !== this.cid) return;\n\n    this.state.color = new TinyColor({\n      h: evt.detail.h,\n      s: evt.detail.s,\n      v: evt.detail.v,\n      a: this.state.color.toHsv().a,\n    });\n  }\n\n  hueChanged(evt: CustomEvent) {\n    if (!evt || !evt.detail || !evt.detail.cid) return;\n\n    // handle only current instance\n    if (evt.detail.cid !== this.cid) return;\n\n    const hsv = this.state.color.toHsv();\n\n    this.state.color = new TinyColor({\n      h: evt.detail.h,\n      s: hsv.s,\n      v: hsv.v,\n      a: hsv.a,\n    });\n  }\n\n  alphaChanged(evt: CustomEvent) {\n    if (!evt || !evt.detail || !evt.detail.cid) return;\n\n    // handle only current instance\n    if (evt.detail.cid !== this.cid) return;\n\n    const rgba = this.state.color.toRgb();\n    rgba.a = evt.detail.a;\n\n    this.state.color = new TinyColor(rgba);\n  }\n\n  /**\n   * when button clicked ---> close all other color pickers\n   */\n  buttonClicked(evt: CustomEvent) {\n    if (!evt || !evt.detail || !evt.detail.cid) return;\n\n    if (evt.detail.cid === this.cid) return;\n\n    this.state.isPopupVisible = false;\n  }\n\n  clickedOutside() {\n    this.state.isPopupVisible = false;\n  }\n\n  toggle() {\n    const isVisible = this.state.isPopupVisible;\n\n    // setTimeout is used instead stopPropagation\n    // to close other popup instances\n    window.setTimeout(() => {\n      this.state.isPopupVisible = !isVisible;\n\n      sendButtonClickedCustomEvent(this.cid);\n    }, 0);\n  }\n\n  onKeyDown(evt: KeyboardEvent) {\n    if (evt.key === 'Escape') {\n      // close the popup\n      this.state.isPopupVisible = false;\n    }\n  }\n\n  stopPropagation(evt: MouseEvent) {\n    evt.stopPropagation();\n  }\n\n  /**\n   * button can accept predefined width and height lik sm, lg, etc.\n   * and also it can accept any css sizes like 1rem, 50px, etc.\n   */\n  formatButtonSize(size: string) {\n    return buttonPredefinedSizes[size] ?? size;\n  }\n\n  // ------------------------- WEB COMPONENT LIFECYCLE ----------------------------\n\n  /**\n   * when the custom element connected to DOM\n   */\n  connectedCallback() {\n    if (!this.shadowRoot) return;\n\n    this.state.initialColor = parseColor(this.getAttribute('color'));\n    this.state.color = parseColor(this.getAttribute('color'));\n    this.state.popupPosition = this.getAttribute('popup-position') || 'left';\n    this.state.buttonWidth = this.getAttribute('button-width');\n    this.state.buttonHeight = this.getAttribute('button-height');\n    this.state.buttonPadding = this.getAttribute('button-padding');\n\n    this.shadowRoot.innerHTML = `\n            <style>\n                ${styles} \n            </style>\n            <div class=\"color-picker\" >\n                <button\n                    type=\"button\"\n                    tabIndex=\"0\"\n                    class=\"button\"\n                    title=\"Select Color\">\n                    <span class=\"button-color\" style=\"background: ${rgbaToString(this.state.color)};\"></span>\n                </button>\n                <div data-popup-box></div>\n            </div>\n        `;\n\n    // init button and its events\n    this.$button = this.shadowRoot.querySelector('.button');\n    this.$buttonColor = this.shadowRoot.querySelector('.button-color');\n\n    this.$button?.addEventListener('click', this.toggle);\n    this.$button?.addEventListener('keydown', this.onKeyDown);\n    this.$button?.addEventListener('mousedown', this.stopPropagation);\n\n    // init popup container\n    this.$popupBox = this.shadowRoot.querySelector('[data-popup-box]');\n\n    // init button dimensions\n    this.setButtonSize();\n\n    // close popup when clicked outside - we use mousedown instead of click to fix strange behaviour when\n    // user drags some inner element like saturation point from the bounds of the window,\n    // and the popup is suddenly closed\n    document.addEventListener('mousedown', this.clickedOutside);\n\n    // custom event from other parts of the app\n    document.addEventListener(CUSTOM_EVENT_COLOR_HSV_CHANGED, this.hsvChanged);\n    document.addEventListener(CUSTOM_EVENT_COLOR_HUE_CHANGED, this.hueChanged);\n    document.addEventListener(CUSTOM_EVENT_COLOR_ALPHA_CHANGED, this.alphaChanged);\n    document.addEventListener(CUSTOM_EVENT_BUTTON_CLICKED, this.buttonClicked);\n  }\n\n  /**\n   * when the custom element disconnected from DOM\n   */\n  disconnectedCallback() {\n    this.$button?.removeEventListener('click', this.toggle);\n    this.$button?.removeEventListener('keydown', this.onKeyDown);\n    this.$button?.removeEventListener('mousedown', this.stopPropagation);\n    document.removeEventListener('mousedown', this.clickedOutside);\n\n    document.removeEventListener(CUSTOM_EVENT_COLOR_HSV_CHANGED, this.hsvChanged);\n    document.removeEventListener(CUSTOM_EVENT_COLOR_HUE_CHANGED, this.hueChanged);\n    document.removeEventListener(CUSTOM_EVENT_COLOR_ALPHA_CHANGED, this.alphaChanged);\n    document.removeEventListener(CUSTOM_EVENT_BUTTON_CLICKED, this.buttonClicked);\n  }\n\n  /**\n   * when attributes change\n   */\n  attributeChangedCallback(attrName: string) {\n    switch (attrName) {\n      case 'color': {\n        this.state.initialColor = parseColor(this.getAttribute('color'));\n        this.state.color = parseColor(this.getAttribute('color'));\n        this.onInitialColorChange();\n        break;\n      }\n\n      case 'popup-position': {\n        this.state.popupPosition = this.getAttribute('popup-position') || 'left';\n        this.onPopupPosChange();\n        break;\n      }\n\n      case 'button-width': {\n        this.state.buttonWidth = this.getAttribute('button-width');\n        this.setButtonSize();\n        break;\n      }\n\n      case 'button-height': {\n        this.state.buttonHeight = this.getAttribute('button-height');\n        this.setButtonSize();\n        break;\n      }\n\n      case 'button-padding': {\n        this.state.buttonPadding = this.getAttribute('button-padding');\n        this.setButtonSize();\n        break;\n      }\n    }\n  }\n}\n\nexport default ColorPicker;\n", "import ColorPicker from './app/color-picker';\n\n/*\n Usage: https://github.com/toolcool-org/toolcool-color-picker\n Demo: https://toolcool.org/toolcool-color-picker/\n */\n\n// register web components\nif (!customElements.get('toolcool-color-picker')) {\n  customElements.define('toolcool-color-picker', ColorPicker);\n}\n"],
  "mappings": ";;;;;;;koEAAO,GAAM,GAAiC,iBACjC,EAAiC,iBACjC,EAAmC,mBACnC,EAA8B,oBAE9B,GAA+B,AAAC,GAAgB,CAC3D,AAAI,CAAC,GAEL,SAAS,cACP,GAAI,aAAY,EAA6B,CAC3C,OAAQ,CACN,KACF,CACF,CAAC,CACH,CACF,EAEa,EAAuB,CAAC,EAAa,IAAc,CAC9D,AAAI,CAAC,GAEL,SAAS,cACP,GAAI,aAAY,EAAkC,CAChD,OAAQ,CACN,IACA,KACF,CACF,CAAC,CACH,CACF,EAEa,EAAqB,CAAC,EAAa,EAAW,EAAW,IAAc,CAClF,AAAI,CAAC,GAEL,SAAS,cACP,GAAI,aAAY,EAAgC,CAC9C,OAAQ,CACN,IACA,IACA,IACA,KACF,CACF,CAAC,CACH,CACF,EAEa,GAAqB,CAAC,EAAa,IAAc,CAC5D,AAAI,CAAC,GAEL,SAAS,cACP,GAAI,aAAY,EAAgC,CAC9C,OAAQ,CACN,IACA,KACF,CACF,CAAC,CACH,CACF,ECpDO,WAAiB,EAAG,EAAK,CAC5B,AAAI,GAAe,CAAC,GAChB,GAAI,QAER,GAAI,GAAY,GAAa,CAAC,EAO9B,MANA,GAAI,IAAQ,IAAM,EAAI,KAAK,IAAI,EAAK,KAAK,IAAI,EAAG,WAAW,CAAC,CAAC,CAAC,EAE1D,GACA,GAAI,SAAS,OAAO,EAAI,CAAG,EAAG,EAAE,EAAI,KAGpC,KAAK,IAAI,EAAI,CAAG,EAAI,KACb,EAGX,CAAI,IAAQ,IAIR,EAAK,GAAI,EAAK,EAAI,EAAO,EAAM,EAAI,GAAO,WAAW,OAAO,CAAG,CAAC,EAKhE,EAAK,EAAI,EAAO,WAAW,OAAO,CAAG,CAAC,EAEnC,EACX,CAKO,WAAiB,EAAK,CACzB,MAAO,MAAK,IAAI,EAAG,KAAK,IAAI,EAAG,CAAG,CAAC,CACvC,CAMO,YAAwB,EAAG,CAC9B,MAAO,OAAO,IAAM,UAAY,EAAE,QAAQ,GAAG,IAAM,IAAM,WAAW,CAAC,IAAM,CAC/E,CAKO,YAAsB,EAAG,CAC5B,MAAO,OAAO,IAAM,UAAY,EAAE,QAAQ,GAAG,IAAM,EACvD,CAKO,WAAoB,EAAG,CAC1B,SAAI,WAAW,CAAC,EACZ,OAAM,CAAC,GAAK,EAAI,GAAK,EAAI,IACzB,GAAI,GAED,CACX,CAKO,WAA6B,EAAG,CACnC,MAAI,IAAK,EACE,GAAG,OAAO,OAAO,CAAC,EAAI,IAAK,GAAG,EAElC,CACX,CAKO,WAAc,EAAG,CACpB,MAAO,GAAE,SAAW,EAAI,IAAM,EAAI,OAAO,CAAC,CAC9C,CCxEO,YAAkB,EAAG,EAAG,EAAG,CAC9B,MAAO,CACH,EAAG,EAAQ,EAAG,GAAG,EAAI,IACrB,EAAG,EAAQ,EAAG,GAAG,EAAI,IACrB,EAAG,EAAQ,EAAG,GAAG,EAAI,GACzB,CACJ,CAMO,WAAkB,EAAG,EAAG,EAAG,CAC9B,EAAI,EAAQ,EAAG,GAAG,EAClB,EAAI,EAAQ,EAAG,GAAG,EAClB,EAAI,EAAQ,EAAG,GAAG,EAClB,GAAI,GAAM,KAAK,IAAI,EAAG,EAAG,CAAC,EACtB,EAAM,KAAK,IAAI,EAAG,EAAG,CAAC,EACtB,EAAI,EACJ,EAAI,EACJ,EAAK,GAAM,GAAO,EACtB,GAAI,IAAQ,EACR,EAAI,EACJ,EAAI,MAEH,CACD,GAAI,GAAI,EAAM,EAEd,OADA,EAAI,EAAI,GAAM,EAAK,GAAI,EAAM,GAAO,EAAK,GAAM,GACvC,OACC,GACD,EAAK,GAAI,GAAK,EAAK,GAAI,EAAI,EAAI,GAC/B,UACC,GACD,EAAK,GAAI,GAAK,EAAI,EAClB,UACC,GACD,EAAK,GAAI,GAAK,EAAI,EAClB,cAEA,MAER,GAAK,CACT,CACA,MAAO,CAAE,EAAG,EAAG,EAAM,EAAG,CAAE,CAC9B,CACA,WAAiB,EAAG,EAAG,EAAG,CAOtB,MANI,GAAI,GACJ,IAAK,GAEL,EAAI,GACJ,IAAK,GAEL,EAAI,EAAI,EACD,EAAK,GAAI,GAAM,GAAI,GAE1B,EAAI,EAAI,EACD,EAEP,EAAI,EAAI,EACD,EAAK,GAAI,GAAM,GAAI,EAAI,GAAK,EAEhC,CACX,CAOO,YAAkB,EAAG,EAAG,EAAG,CAC9B,GAAI,GACA,EACA,EAIJ,GAHA,EAAI,EAAQ,EAAG,GAAG,EAClB,EAAI,EAAQ,EAAG,GAAG,EAClB,EAAI,EAAQ,EAAG,GAAG,EACd,IAAM,EAEN,EAAI,EACJ,EAAI,EACJ,EAAI,MAEH,CACD,GAAI,GAAI,EAAI,GAAM,EAAK,GAAI,GAAK,EAAI,EAAI,EAAI,EACxC,EAAI,EAAI,EAAI,EAChB,EAAI,EAAQ,EAAG,EAAG,EAAI,EAAI,CAAC,EAC3B,EAAI,EAAQ,EAAG,EAAG,CAAC,EACnB,EAAI,EAAQ,EAAG,EAAG,EAAI,EAAI,CAAC,CAC/B,CACA,MAAO,CAAE,EAAG,EAAI,IAAK,EAAG,EAAI,IAAK,EAAG,EAAI,GAAI,CAChD,CAOO,WAAkB,EAAG,EAAG,EAAG,CAC9B,EAAI,EAAQ,EAAG,GAAG,EAClB,EAAI,EAAQ,EAAG,GAAG,EAClB,EAAI,EAAQ,EAAG,GAAG,EAClB,GAAI,GAAM,KAAK,IAAI,EAAG,EAAG,CAAC,EACtB,EAAM,KAAK,IAAI,EAAG,EAAG,CAAC,EACtB,EAAI,EACJ,EAAI,EACJ,EAAI,EAAM,EACV,EAAI,IAAQ,EAAI,EAAI,EAAI,EAC5B,GAAI,IAAQ,EACR,EAAI,MAEH,CACD,OAAQ,OACC,GACD,EAAK,GAAI,GAAK,EAAK,GAAI,EAAI,EAAI,GAC/B,UACC,GACD,EAAK,GAAI,GAAK,EAAI,EAClB,UACC,GACD,EAAK,GAAI,GAAK,EAAI,EAClB,cAEA,MAER,GAAK,CACT,CACA,MAAO,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,CAAE,CAC9B,CAOO,YAAkB,EAAG,EAAG,EAAG,CAC9B,EAAI,EAAQ,EAAG,GAAG,EAAI,EACtB,EAAI,EAAQ,EAAG,GAAG,EAClB,EAAI,EAAQ,EAAG,GAAG,EAClB,GAAI,GAAI,KAAK,MAAM,CAAC,EAChB,EAAI,EAAI,EACR,EAAI,EAAK,GAAI,GACb,EAAI,EAAK,GAAI,EAAI,GACjB,EAAI,EAAK,GAAK,GAAI,GAAK,GACvB,EAAM,EAAI,EACV,EAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,CAAC,EAAE,GACvB,EAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,CAAC,EAAE,GACvB,EAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,CAAC,EAAE,GAC3B,MAAO,CAAE,EAAG,EAAI,IAAK,EAAG,EAAI,IAAK,EAAG,EAAI,GAAI,CAChD,CAOO,WAAkB,EAAG,EAAG,EAAG,EAAY,CAC1C,GAAI,GAAM,CACN,EAAK,KAAK,MAAM,CAAC,EAAE,SAAS,EAAE,CAAC,EAC/B,EAAK,KAAK,MAAM,CAAC,EAAE,SAAS,EAAE,CAAC,EAC/B,EAAK,KAAK,MAAM,CAAC,EAAE,SAAS,EAAE,CAAC,CACnC,EAEA,MAAI,IACA,EAAI,GAAG,WAAW,EAAI,GAAG,OAAO,CAAC,CAAC,GAClC,EAAI,GAAG,WAAW,EAAI,GAAG,OAAO,CAAC,CAAC,GAClC,EAAI,GAAG,WAAW,EAAI,GAAG,OAAO,CAAC,CAAC,EAC3B,EAAI,GAAG,OAAO,CAAC,EAAI,EAAI,GAAG,OAAO,CAAC,EAAI,EAAI,GAAG,OAAO,CAAC,EAEzD,EAAI,KAAK,EAAE,CACtB,CAQO,YAAmB,EAAG,EAAG,EAAG,EAAG,EAAY,CAC9C,GAAI,GAAM,CACN,EAAK,KAAK,MAAM,CAAC,EAAE,SAAS,EAAE,CAAC,EAC/B,EAAK,KAAK,MAAM,CAAC,EAAE,SAAS,EAAE,CAAC,EAC/B,EAAK,KAAK,MAAM,CAAC,EAAE,SAAS,EAAE,CAAC,EAC/B,EAAK,GAAoB,CAAC,CAAC,CAC/B,EAEA,MAAI,IACA,EAAI,GAAG,WAAW,EAAI,GAAG,OAAO,CAAC,CAAC,GAClC,EAAI,GAAG,WAAW,EAAI,GAAG,OAAO,CAAC,CAAC,GAClC,EAAI,GAAG,WAAW,EAAI,GAAG,OAAO,CAAC,CAAC,GAClC,EAAI,GAAG,WAAW,EAAI,GAAG,OAAO,CAAC,CAAC,EAC3B,EAAI,GAAG,OAAO,CAAC,EAAI,EAAI,GAAG,OAAO,CAAC,EAAI,EAAI,GAAG,OAAO,CAAC,EAAI,EAAI,GAAG,OAAO,CAAC,EAE5E,EAAI,KAAK,EAAE,CACtB,CAeO,YAA6B,EAAG,CACnC,MAAO,MAAK,MAAM,WAAW,CAAC,EAAI,GAAG,EAAE,SAAS,EAAE,CACtD,CAEO,WAA6B,EAAG,CACnC,MAAO,GAAgB,CAAC,EAAI,GAChC,CAEO,WAAyB,EAAK,CACjC,MAAO,UAAS,EAAK,EAAE,CAC3B,CACO,YAA6B,EAAO,CACvC,MAAO,CACH,EAAG,GAAS,GACZ,EAAI,GAAQ,QAAW,EACvB,EAAG,EAAQ,GACf,CACJ,CCtOO,GAAI,GAAQ,CACf,UAAW,UACX,aAAc,UACd,KAAM,UACN,WAAY,UACZ,MAAO,UACP,MAAO,UACP,OAAQ,UACR,MAAO,UACP,eAAgB,UAChB,KAAM,UACN,WAAY,UACZ,MAAO,UACP,UAAW,UACX,UAAW,UACX,WAAY,UACZ,UAAW,UACX,MAAO,UACP,eAAgB,UAChB,SAAU,UACV,QAAS,UACT,KAAM,UACN,SAAU,UACV,SAAU,UACV,cAAe,UACf,SAAU,UACV,UAAW,UACX,SAAU,UACV,UAAW,UACX,YAAa,UACb,eAAgB,UAChB,WAAY,UACZ,WAAY,UACZ,QAAS,UACT,WAAY,UACZ,aAAc,UACd,cAAe,UACf,cAAe,UACf,cAAe,UACf,cAAe,UACf,WAAY,UACZ,SAAU,UACV,YAAa,UACb,QAAS,UACT,QAAS,UACT,WAAY,UACZ,UAAW,UACX,YAAa,UACb,YAAa,UACb,QAAS,UACT,UAAW,UACX,WAAY,UACZ,UAAW,UACX,KAAM,UACN,KAAM,UACN,MAAO,UACP,YAAa,UACb,KAAM,UACN,SAAU,UACV,QAAS,UACT,UAAW,UACX,OAAQ,UACR,MAAO,UACP,MAAO,UACP,cAAe,UACf,SAAU,UACV,UAAW,UACX,aAAc,UACd,UAAW,UACX,WAAY,UACZ,UAAW,UACX,qBAAsB,UACtB,UAAW,UACX,WAAY,UACZ,UAAW,UACX,UAAW,UACX,YAAa,UACb,cAAe,UACf,aAAc,UACd,eAAgB,UAChB,eAAgB,UAChB,eAAgB,UAChB,YAAa,UACb,KAAM,UACN,UAAW,UACX,MAAO,UACP,QAAS,UACT,OAAQ,UACR,iBAAkB,UAClB,WAAY,UACZ,aAAc,UACd,aAAc,UACd,eAAgB,UAChB,gBAAiB,UACjB,kBAAmB,UACnB,gBAAiB,UACjB,gBAAiB,UACjB,aAAc,UACd,UAAW,UACX,UAAW,UACX,SAAU,UACV,YAAa,UACb,KAAM,UACN,QAAS,UACT,MAAO,UACP,UAAW,UACX,OAAQ,UACR,UAAW,UACX,OAAQ,UACR,cAAe,UACf,UAAW,UACX,cAAe,UACf,cAAe,UACf,WAAY,UACZ,UAAW,UACX,KAAM,UACN,KAAM,UACN,KAAM,UACN,WAAY,UACZ,OAAQ,UACR,cAAe,UACf,IAAK,UACL,UAAW,UACX,UAAW,UACX,YAAa,UACb,OAAQ,UACR,WAAY,UACZ,SAAU,UACV,SAAU,UACV,OAAQ,UACR,OAAQ,UACR,QAAS,UACT,UAAW,UACX,UAAW,UACX,UAAW,UACX,KAAM,UACN,YAAa,UACb,UAAW,UACX,IAAK,UACL,KAAM,UACN,QAAS,UACT,OAAQ,UACR,UAAW,UACX,OAAQ,UACR,MAAO,UACP,MAAO,UACP,WAAY,UACZ,OAAQ,UACR,YAAa,SACjB,ECpIO,YAAoB,EAAO,CAC9B,GAAI,GAAM,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,CAAE,EACzB,EAAI,EACJ,EAAI,KACJ,EAAI,KACJ,EAAI,KACJ,EAAK,GACL,EAAS,GACb,MAAI,OAAO,IAAU,UACjB,GAAQ,GAAoB,CAAK,GAEjC,MAAO,IAAU,UACjB,CAAI,EAAe,EAAM,CAAC,GAAK,EAAe,EAAM,CAAC,GAAK,EAAe,EAAM,CAAC,EAC5E,GAAM,GAAS,EAAM,EAAG,EAAM,EAAG,EAAM,CAAC,EACxC,EAAK,GACL,EAAS,OAAO,EAAM,CAAC,EAAE,OAAO,EAAE,IAAM,IAAM,OAAS,OAEtD,AAAI,EAAe,EAAM,CAAC,GAAK,EAAe,EAAM,CAAC,GAAK,EAAe,EAAM,CAAC,EACjF,GAAI,EAAoB,EAAM,CAAC,EAC/B,EAAI,EAAoB,EAAM,CAAC,EAC/B,EAAM,GAAS,EAAM,EAAG,EAAG,CAAC,EAC5B,EAAK,GACL,EAAS,OAEJ,EAAe,EAAM,CAAC,GAAK,EAAe,EAAM,CAAC,GAAK,EAAe,EAAM,CAAC,GACjF,GAAI,EAAoB,EAAM,CAAC,EAC/B,EAAI,EAAoB,EAAM,CAAC,EAC/B,EAAM,GAAS,EAAM,EAAG,EAAG,CAAC,EAC5B,EAAK,GACL,EAAS,OAET,OAAO,UAAU,eAAe,KAAK,EAAO,GAAG,GAC/C,GAAI,EAAM,IAGlB,EAAI,EAAW,CAAC,EACT,CACH,GAAI,EACJ,OAAQ,EAAM,QAAU,EACxB,EAAG,KAAK,IAAI,IAAK,KAAK,IAAI,EAAI,EAAG,CAAC,CAAC,EACnC,EAAG,KAAK,IAAI,IAAK,KAAK,IAAI,EAAI,EAAG,CAAC,CAAC,EACnC,EAAG,KAAK,IAAI,IAAK,KAAK,IAAI,EAAI,EAAG,CAAC,CAAC,EACnC,EAAG,CACP,CACJ,CAEA,GAAI,IAAc,gBAEd,GAAa,uBAEb,EAAW,MAAM,OAAO,GAAY,OAAO,EAAE,OAAO,GAAa,GAAG,EAIpE,EAAoB,cAAc,OAAO,EAAU,YAAY,EAAE,OAAO,EAAU,YAAY,EAAE,OAAO,EAAU,WAAW,EAC5H,EAAoB,cAAc,OAAO,EAAU,YAAY,EAAE,OAAO,EAAU,YAAY,EAAE,OAAO,EAAU,YAAY,EAAE,OAAO,EAAU,WAAW,EAC3J,EAAW,CACX,SAAU,GAAI,QAAO,CAAQ,EAC7B,IAAK,GAAI,QAAO,MAAQ,CAAiB,EACzC,KAAM,GAAI,QAAO,OAAS,CAAiB,EAC3C,IAAK,GAAI,QAAO,MAAQ,CAAiB,EACzC,KAAM,GAAI,QAAO,OAAS,CAAiB,EAC3C,IAAK,GAAI,QAAO,MAAQ,CAAiB,EACzC,KAAM,GAAI,QAAO,OAAS,CAAiB,EAC3C,KAAM,uDACN,KAAM,uDACN,KAAM,uEACN,KAAM,sEACV,EAKO,YAA6B,EAAO,CAEvC,GADA,EAAQ,EAAM,KAAK,EAAE,YAAY,EAC7B,EAAM,SAAW,EACjB,MAAO,GAEX,GAAI,GAAQ,GACZ,GAAI,EAAM,GACN,EAAQ,EAAM,GACd,EAAQ,WAEH,IAAU,cACf,MAAO,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,OAAQ,MAAO,EAMpD,GAAI,GAAQ,EAAS,IAAI,KAAK,CAAK,EACnC,MAAI,GACO,CAAE,EAAG,EAAM,GAAI,EAAG,EAAM,GAAI,EAAG,EAAM,EAAG,EAEnD,GAAQ,EAAS,KAAK,KAAK,CAAK,EAC5B,EACO,CAAE,EAAG,EAAM,GAAI,EAAG,EAAM,GAAI,EAAG,EAAM,GAAI,EAAG,EAAM,EAAG,EAEhE,GAAQ,EAAS,IAAI,KAAK,CAAK,EAC3B,EACO,CAAE,EAAG,EAAM,GAAI,EAAG,EAAM,GAAI,EAAG,EAAM,EAAG,EAEnD,GAAQ,EAAS,KAAK,KAAK,CAAK,EAC5B,EACO,CAAE,EAAG,EAAM,GAAI,EAAG,EAAM,GAAI,EAAG,EAAM,GAAI,EAAG,EAAM,EAAG,EAEhE,GAAQ,EAAS,IAAI,KAAK,CAAK,EAC3B,EACO,CAAE,EAAG,EAAM,GAAI,EAAG,EAAM,GAAI,EAAG,EAAM,EAAG,EAEnD,GAAQ,EAAS,KAAK,KAAK,CAAK,EAC5B,EACO,CAAE,EAAG,EAAM,GAAI,EAAG,EAAM,GAAI,EAAG,EAAM,GAAI,EAAG,EAAM,EAAG,EAEhE,GAAQ,EAAS,KAAK,KAAK,CAAK,EAC5B,EACO,CACH,EAAG,EAAgB,EAAM,EAAE,EAC3B,EAAG,EAAgB,EAAM,EAAE,EAC3B,EAAG,EAAgB,EAAM,EAAE,EAC3B,EAAG,EAAoB,EAAM,EAAE,EAC/B,OAAQ,EAAQ,OAAS,MAC7B,EAEJ,GAAQ,EAAS,KAAK,KAAK,CAAK,EAC5B,EACO,CACH,EAAG,EAAgB,EAAM,EAAE,EAC3B,EAAG,EAAgB,EAAM,EAAE,EAC3B,EAAG,EAAgB,EAAM,EAAE,EAC3B,OAAQ,EAAQ,OAAS,KAC7B,EAEJ,GAAQ,EAAS,KAAK,KAAK,CAAK,EAC5B,EACO,CACH,EAAG,EAAgB,EAAM,GAAK,EAAM,EAAE,EACtC,EAAG,EAAgB,EAAM,GAAK,EAAM,EAAE,EACtC,EAAG,EAAgB,EAAM,GAAK,EAAM,EAAE,EACtC,EAAG,EAAoB,EAAM,GAAK,EAAM,EAAE,EAC1C,OAAQ,EAAQ,OAAS,MAC7B,EAEJ,GAAQ,EAAS,KAAK,KAAK,CAAK,EAC5B,EACO,CACH,EAAG,EAAgB,EAAM,GAAK,EAAM,EAAE,EACtC,EAAG,EAAgB,EAAM,GAAK,EAAM,EAAE,EACtC,EAAG,EAAgB,EAAM,GAAK,EAAM,EAAE,EACtC,OAAQ,EAAQ,OAAS,KAC7B,EAEG,WACX,CAKO,WAAwB,EAAO,CAClC,MAAO,SAAQ,EAAS,SAAS,KAAK,OAAO,CAAK,CAAC,CAAC,CACxD,CCjLA,GAAI,GAA2B,UAAY,CACvC,WAAmB,EAAO,EAAM,CAC5B,AAAI,IAAU,QAAU,GAAQ,IAC5B,IAAS,QAAU,GAAO,CAAC,GAC/B,GAAI,GAEJ,GAAI,YAAiB,GAEjB,MAAO,GAEX,AAAI,MAAO,IAAU,UACjB,GAAQ,GAAoB,CAAK,GAErC,KAAK,cAAgB,EACrB,GAAI,GAAM,GAAW,CAAK,EAC1B,KAAK,cAAgB,EACrB,KAAK,EAAI,EAAI,EACb,KAAK,EAAI,EAAI,EACb,KAAK,EAAI,EAAI,EACb,KAAK,EAAI,EAAI,EACb,KAAK,OAAS,KAAK,MAAM,IAAM,KAAK,CAAC,EAAI,IACzC,KAAK,OAAU,GAAK,EAAK,UAAY,MAAQ,IAAO,OAAS,EAAK,EAAI,OACtE,KAAK,aAAe,EAAK,aAKrB,KAAK,EAAI,GACT,MAAK,EAAI,KAAK,MAAM,KAAK,CAAC,GAE1B,KAAK,EAAI,GACT,MAAK,EAAI,KAAK,MAAM,KAAK,CAAC,GAE1B,KAAK,EAAI,GACT,MAAK,EAAI,KAAK,MAAM,KAAK,CAAC,GAE9B,KAAK,QAAU,EAAI,EACvB,CACA,SAAU,UAAU,OAAS,UAAY,CACrC,MAAO,MAAK,cAAc,EAAI,GAClC,EACA,EAAU,UAAU,QAAU,UAAY,CACtC,MAAO,CAAC,KAAK,OAAO,CACxB,EAIA,EAAU,UAAU,cAAgB,UAAY,CAE5C,GAAI,GAAM,KAAK,MAAM,EACrB,MAAQ,GAAI,EAAI,IAAM,EAAI,EAAI,IAAM,EAAI,EAAI,KAAO,GACvD,EAIA,EAAU,UAAU,aAAe,UAAY,CAE3C,GAAI,GAAM,KAAK,MAAM,EACjB,EACA,EACA,EACA,EAAQ,EAAI,EAAI,IAChB,EAAQ,EAAI,EAAI,IAChB,EAAQ,EAAI,EAAI,IACpB,MAAI,IAAS,OACT,EAAI,EAAQ,MAIZ,EAAI,KAAK,IAAK,GAAQ,MAAS,MAAO,GAAG,EAE7C,AAAI,GAAS,OACT,EAAI,EAAQ,MAIZ,EAAI,KAAK,IAAK,GAAQ,MAAS,MAAO,GAAG,EAE7C,AAAI,GAAS,OACT,EAAI,EAAQ,MAIZ,EAAI,KAAK,IAAK,GAAQ,MAAS,MAAO,GAAG,EAEtC,MAAS,EAAI,MAAS,EAAI,MAAS,CAC9C,EAIA,EAAU,UAAU,SAAW,UAAY,CACvC,MAAO,MAAK,CAChB,EAMA,EAAU,UAAU,SAAW,SAAU,EAAO,CAC5C,YAAK,EAAI,EAAW,CAAK,EACzB,KAAK,OAAS,KAAK,MAAM,IAAM,KAAK,CAAC,EAAI,IAClC,IACX,EAIA,EAAU,UAAU,MAAQ,UAAY,CACpC,GAAI,GAAM,EAAS,KAAK,EAAG,KAAK,EAAG,KAAK,CAAC,EACzC,MAAO,CAAE,EAAG,EAAI,EAAI,IAAK,EAAG,EAAI,EAAG,EAAG,EAAI,EAAG,EAAG,KAAK,CAAE,CAC3D,EAKA,EAAU,UAAU,YAAc,UAAY,CAC1C,GAAI,GAAM,EAAS,KAAK,EAAG,KAAK,EAAG,KAAK,CAAC,EACrC,EAAI,KAAK,MAAM,EAAI,EAAI,GAAG,EAC1B,EAAI,KAAK,MAAM,EAAI,EAAI,GAAG,EAC1B,EAAI,KAAK,MAAM,EAAI,EAAI,GAAG,EAC9B,MAAO,MAAK,IAAM,EAAI,OAAO,OAAO,EAAG,IAAI,EAAE,OAAO,EAAG,KAAK,EAAE,OAAO,EAAG,IAAI,EAAI,QAAQ,OAAO,EAAG,IAAI,EAAE,OAAO,EAAG,KAAK,EAAE,OAAO,EAAG,KAAK,EAAE,OAAO,KAAK,OAAQ,GAAG,CACrK,EAIA,EAAU,UAAU,MAAQ,UAAY,CACpC,GAAI,GAAM,EAAS,KAAK,EAAG,KAAK,EAAG,KAAK,CAAC,EACzC,MAAO,CAAE,EAAG,EAAI,EAAI,IAAK,EAAG,EAAI,EAAG,EAAG,EAAI,EAAG,EAAG,KAAK,CAAE,CAC3D,EAKA,EAAU,UAAU,YAAc,UAAY,CAC1C,GAAI,GAAM,EAAS,KAAK,EAAG,KAAK,EAAG,KAAK,CAAC,EACrC,EAAI,KAAK,MAAM,EAAI,EAAI,GAAG,EAC1B,EAAI,KAAK,MAAM,EAAI,EAAI,GAAG,EAC1B,EAAI,KAAK,MAAM,EAAI,EAAI,GAAG,EAC9B,MAAO,MAAK,IAAM,EAAI,OAAO,OAAO,EAAG,IAAI,EAAE,OAAO,EAAG,KAAK,EAAE,OAAO,EAAG,IAAI,EAAI,QAAQ,OAAO,EAAG,IAAI,EAAE,OAAO,EAAG,KAAK,EAAE,OAAO,EAAG,KAAK,EAAE,OAAO,KAAK,OAAQ,GAAG,CACrK,EAKA,EAAU,UAAU,MAAQ,SAAU,EAAY,CAC9C,MAAI,KAAe,QAAU,GAAa,IACnC,EAAS,KAAK,EAAG,KAAK,EAAG,KAAK,EAAG,CAAU,CACtD,EAKA,EAAU,UAAU,YAAc,SAAU,EAAY,CACpD,MAAI,KAAe,QAAU,GAAa,IACnC,IAAM,KAAK,MAAM,CAAU,CACtC,EAKA,EAAU,UAAU,OAAS,SAAU,EAAY,CAC/C,MAAI,KAAe,QAAU,GAAa,IACnC,GAAU,KAAK,EAAG,KAAK,EAAG,KAAK,EAAG,KAAK,EAAG,CAAU,CAC/D,EAKA,EAAU,UAAU,aAAe,SAAU,EAAY,CACrD,MAAI,KAAe,QAAU,GAAa,IACnC,IAAM,KAAK,OAAO,CAAU,CACvC,EAIA,EAAU,UAAU,MAAQ,UAAY,CACpC,MAAO,CACH,EAAG,KAAK,MAAM,KAAK,CAAC,EACpB,EAAG,KAAK,MAAM,KAAK,CAAC,EACpB,EAAG,KAAK,MAAM,KAAK,CAAC,EACpB,EAAG,KAAK,CACZ,CACJ,EAKA,EAAU,UAAU,YAAc,UAAY,CAC1C,GAAI,GAAI,KAAK,MAAM,KAAK,CAAC,EACrB,EAAI,KAAK,MAAM,KAAK,CAAC,EACrB,EAAI,KAAK,MAAM,KAAK,CAAC,EACzB,MAAO,MAAK,IAAM,EAAI,OAAO,OAAO,EAAG,IAAI,EAAE,OAAO,EAAG,IAAI,EAAE,OAAO,EAAG,GAAG,EAAI,QAAQ,OAAO,EAAG,IAAI,EAAE,OAAO,EAAG,IAAI,EAAE,OAAO,EAAG,IAAI,EAAE,OAAO,KAAK,OAAQ,GAAG,CACjK,EAIA,EAAU,UAAU,gBAAkB,UAAY,CAC9C,GAAI,GAAM,SAAU,EAAG,CAAE,MAAO,GAAG,OAAO,KAAK,MAAM,EAAQ,EAAG,GAAG,EAAI,GAAG,EAAG,GAAG,CAAG,EACnF,MAAO,CACH,EAAG,EAAI,KAAK,CAAC,EACb,EAAG,EAAI,KAAK,CAAC,EACb,EAAG,EAAI,KAAK,CAAC,EACb,EAAG,KAAK,CACZ,CACJ,EAIA,EAAU,UAAU,sBAAwB,UAAY,CACpD,GAAI,GAAM,SAAU,EAAG,CAAE,MAAO,MAAK,MAAM,EAAQ,EAAG,GAAG,EAAI,GAAG,CAAG,EACnE,MAAO,MAAK,IAAM,EACZ,OAAO,OAAO,EAAI,KAAK,CAAC,EAAG,KAAK,EAAE,OAAO,EAAI,KAAK,CAAC,EAAG,KAAK,EAAE,OAAO,EAAI,KAAK,CAAC,EAAG,IAAI,EACrF,QAAQ,OAAO,EAAI,KAAK,CAAC,EAAG,KAAK,EAAE,OAAO,EAAI,KAAK,CAAC,EAAG,KAAK,EAAE,OAAO,EAAI,KAAK,CAAC,EAAG,KAAK,EAAE,OAAO,KAAK,OAAQ,GAAG,CAC1H,EAIA,EAAU,UAAU,OAAS,UAAY,CACrC,GAAI,KAAK,IAAM,EACX,MAAO,cAEX,GAAI,KAAK,EAAI,EACT,MAAO,GAGX,OADI,GAAM,IAAM,EAAS,KAAK,EAAG,KAAK,EAAG,KAAK,EAAG,EAAK,EAC7C,EAAK,EAAG,EAAK,OAAO,QAAQ,CAAK,EAAG,EAAK,EAAG,OAAQ,IAAM,CAC/D,GAAI,GAAK,EAAG,GAAK,EAAM,EAAG,GAAI,EAAQ,EAAG,GACzC,GAAI,IAAQ,EACR,MAAO,EAEf,CACA,MAAO,EACX,EACA,EAAU,UAAU,SAAW,SAAU,EAAQ,CAC7C,GAAI,GAAY,QAAQ,CAAM,EAC9B,EAAS,GAAW,KAA4B,EAAS,KAAK,OAC9D,GAAI,GAAkB,GAClB,EAAW,KAAK,EAAI,GAAK,KAAK,GAAK,EACnC,EAAmB,CAAC,GAAa,GAAa,GAAO,WAAW,KAAK,GAAK,IAAW,QACzF,MAAI,GAGI,IAAW,QAAU,KAAK,IAAM,EACzB,KAAK,OAAO,EAEhB,KAAK,YAAY,EAExB,KAAW,OACX,GAAkB,KAAK,YAAY,GAEnC,IAAW,QACX,GAAkB,KAAK,sBAAsB,GAE7C,KAAW,OAAS,IAAW,SAC/B,GAAkB,KAAK,YAAY,GAEnC,IAAW,QACX,GAAkB,KAAK,YAAY,EAAI,GAEvC,IAAW,QACX,GAAkB,KAAK,aAAa,EAAI,GAExC,IAAW,QACX,GAAkB,KAAK,aAAa,GAEpC,IAAW,QACX,GAAkB,KAAK,OAAO,GAE9B,IAAW,OACX,GAAkB,KAAK,YAAY,GAEnC,IAAW,OACX,GAAkB,KAAK,YAAY,GAEhC,GAAmB,KAAK,YAAY,EAC/C,EACA,EAAU,UAAU,SAAW,UAAY,CACvC,MAAQ,MAAK,MAAM,KAAK,CAAC,GAAK,IAAO,MAAK,MAAM,KAAK,CAAC,GAAK,GAAK,KAAK,MAAM,KAAK,CAAC,CACrF,EACA,EAAU,UAAU,MAAQ,UAAY,CACpC,MAAO,IAAI,GAAU,KAAK,SAAS,CAAC,CACxC,EAKA,EAAU,UAAU,QAAU,SAAU,EAAQ,CAC5C,AAAI,IAAW,QAAU,GAAS,IAClC,GAAI,GAAM,KAAK,MAAM,EACrB,SAAI,GAAK,EAAS,IAClB,EAAI,EAAI,EAAQ,EAAI,CAAC,EACd,GAAI,GAAU,CAAG,CAC5B,EAKA,EAAU,UAAU,SAAW,SAAU,EAAQ,CAC7C,AAAI,IAAW,QAAU,GAAS,IAClC,GAAI,GAAM,KAAK,MAAM,EACrB,SAAI,EAAI,KAAK,IAAI,EAAG,KAAK,IAAI,IAAK,EAAI,EAAI,KAAK,MAAM,IAAM,CAAE,GAAS,IAAI,CAAC,CAAC,EAC5E,EAAI,EAAI,KAAK,IAAI,EAAG,KAAK,IAAI,IAAK,EAAI,EAAI,KAAK,MAAM,IAAM,CAAE,GAAS,IAAI,CAAC,CAAC,EAC5E,EAAI,EAAI,KAAK,IAAI,EAAG,KAAK,IAAI,IAAK,EAAI,EAAI,KAAK,MAAM,IAAM,CAAE,GAAS,IAAI,CAAC,CAAC,EACrE,GAAI,GAAU,CAAG,CAC5B,EAMA,EAAU,UAAU,OAAS,SAAU,EAAQ,CAC3C,AAAI,IAAW,QAAU,GAAS,IAClC,GAAI,GAAM,KAAK,MAAM,EACrB,SAAI,GAAK,EAAS,IAClB,EAAI,EAAI,EAAQ,EAAI,CAAC,EACd,GAAI,GAAU,CAAG,CAC5B,EAMA,EAAU,UAAU,KAAO,SAAU,EAAQ,CACzC,MAAI,KAAW,QAAU,GAAS,IAC3B,KAAK,IAAI,QAAS,CAAM,CACnC,EAMA,EAAU,UAAU,MAAQ,SAAU,EAAQ,CAC1C,MAAI,KAAW,QAAU,GAAS,IAC3B,KAAK,IAAI,QAAS,CAAM,CACnC,EAMA,EAAU,UAAU,WAAa,SAAU,EAAQ,CAC/C,AAAI,IAAW,QAAU,GAAS,IAClC,GAAI,GAAM,KAAK,MAAM,EACrB,SAAI,GAAK,EAAS,IAClB,EAAI,EAAI,EAAQ,EAAI,CAAC,EACd,GAAI,GAAU,CAAG,CAC5B,EAKA,EAAU,UAAU,SAAW,SAAU,EAAQ,CAC7C,AAAI,IAAW,QAAU,GAAS,IAClC,GAAI,GAAM,KAAK,MAAM,EACrB,SAAI,GAAK,EAAS,IAClB,EAAI,EAAI,EAAQ,EAAI,CAAC,EACd,GAAI,GAAU,CAAG,CAC5B,EAKA,EAAU,UAAU,UAAY,UAAY,CACxC,MAAO,MAAK,WAAW,GAAG,CAC9B,EAKA,EAAU,UAAU,KAAO,SAAU,EAAQ,CACzC,GAAI,GAAM,KAAK,MAAM,EACjB,EAAO,GAAI,EAAI,GAAU,IAC7B,SAAI,EAAI,EAAM,EAAI,IAAM,EAAM,EACvB,GAAI,GAAU,CAAG,CAC5B,EAKA,EAAU,UAAU,IAAM,SAAU,EAAO,EAAQ,CAC/C,AAAI,IAAW,QAAU,GAAS,IAClC,GAAI,GAAO,KAAK,MAAM,EAClB,EAAO,GAAI,GAAU,CAAK,EAAE,MAAM,EAClC,EAAI,EAAS,IACb,EAAO,CACP,EAAI,GAAK,EAAI,EAAK,GAAK,EAAI,EAAK,EAChC,EAAI,GAAK,EAAI,EAAK,GAAK,EAAI,EAAK,EAChC,EAAI,GAAK,EAAI,EAAK,GAAK,EAAI,EAAK,EAChC,EAAI,GAAK,EAAI,EAAK,GAAK,EAAI,EAAK,CACpC,EACA,MAAO,IAAI,GAAU,CAAI,CAC7B,EACA,EAAU,UAAU,UAAY,SAAU,EAAS,EAAQ,CACvD,AAAI,IAAY,QAAU,GAAU,GAChC,IAAW,QAAU,GAAS,IAClC,GAAI,GAAM,KAAK,MAAM,EACjB,EAAO,IAAM,EACb,EAAM,CAAC,IAAI,EACf,IAAK,EAAI,EAAK,GAAI,EAAM,GAAO,GAAY,GAAK,KAAO,IAAK,EAAE,GAC1D,EAAI,EAAK,GAAI,EAAI,GAAQ,IACzB,EAAI,KAAK,GAAI,GAAU,CAAG,CAAC,EAE/B,MAAO,EACX,EAIA,EAAU,UAAU,WAAa,UAAY,CACzC,GAAI,GAAM,KAAK,MAAM,EACrB,SAAI,EAAK,GAAI,EAAI,KAAO,IACjB,GAAI,GAAU,CAAG,CAC5B,EACA,EAAU,UAAU,cAAgB,SAAU,EAAS,CACnD,AAAI,IAAY,QAAU,GAAU,GAOpC,OANI,GAAM,KAAK,MAAM,EACjB,EAAI,EAAI,EACR,EAAI,EAAI,EACR,EAAI,EAAI,EACR,EAAM,CAAC,EACP,EAAe,EAAI,EAChB,KACH,EAAI,KAAK,GAAI,GAAU,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,CAAE,CAAC,CAAC,EAC5C,EAAK,GAAI,GAAgB,EAE7B,MAAO,EACX,EACA,EAAU,UAAU,gBAAkB,UAAY,CAC9C,GAAI,GAAM,KAAK,MAAM,EACjB,EAAI,EAAI,EACZ,MAAO,CACH,KACA,GAAI,GAAU,CAAE,EAAI,GAAI,IAAM,IAAK,EAAG,EAAI,EAAG,EAAG,EAAI,CAAE,CAAC,EACvD,GAAI,GAAU,CAAE,EAAI,GAAI,KAAO,IAAK,EAAG,EAAI,EAAG,EAAG,EAAI,CAAE,CAAC,CAC5D,CACJ,EAIA,EAAU,UAAU,aAAe,SAAU,EAAY,CACrD,GAAI,GAAK,KAAK,MAAM,EAChB,EAAK,GAAI,GAAU,CAAU,EAAE,MAAM,EACzC,MAAO,IAAI,GAAU,CACjB,EAAG,EAAG,EAAK,GAAG,EAAI,EAAG,GAAK,EAAG,EAC7B,EAAG,EAAG,EAAK,GAAG,EAAI,EAAG,GAAK,EAAG,EAC7B,EAAG,EAAG,EAAK,GAAG,EAAI,EAAG,GAAK,EAAG,CACjC,CAAC,CACL,EAIA,EAAU,UAAU,MAAQ,UAAY,CACpC,MAAO,MAAK,OAAO,CAAC,CACxB,EAIA,EAAU,UAAU,OAAS,UAAY,CACrC,MAAO,MAAK,OAAO,CAAC,CACxB,EAKA,EAAU,UAAU,OAAS,SAAU,EAAG,CAKtC,OAJI,GAAM,KAAK,MAAM,EACjB,EAAI,EAAI,EACR,EAAS,CAAC,IAAI,EACd,EAAY,IAAM,EACb,EAAI,EAAG,EAAI,EAAG,IACnB,EAAO,KAAK,GAAI,GAAU,CAAE,EAAI,GAAI,EAAI,GAAa,IAAK,EAAG,EAAI,EAAG,EAAG,EAAI,CAAE,CAAC,CAAC,EAEnF,MAAO,EACX,EAIA,EAAU,UAAU,OAAS,SAAU,EAAO,CAC1C,MAAO,MAAK,YAAY,IAAM,GAAI,GAAU,CAAK,EAAE,YAAY,CACnE,EACO,CACX,EAAE,ECneK,GAAM,GAAc,IAClB,KAAK,OAAO,EAAE,SAAS,EAAE,EAAE,MAAM,CAAC,EAG9B,EAAe,AAAC,GACpB,KAAK,MAAO,GAAM,OAAO,SAAW,GAAG,EAAI,ICF7C,GAAM,GAAkB,IAOlB,EAAmB,AAAC,GAC3B,GAAM,GACR,GAAM,GAEJ,EAAM,KACR,GAAM,KAED,OAAO,KAAK,MAAM,CAAG,iBAOjB,EAA0B,AAAC,GAAqB,CAC3D,GAAM,GAAO,EAAM,MAAM,EACzB,MAAO,kCAAkC,EAAK,KAAK,EAAK,KAAK,EAAK,kBAAkB,EAAK,KAAK,EAAK,KAAK,EAAK,aAC/G,EAEa,EAAe,AAAC,GAAqB,CAChD,GAAM,GAAO,EAAM,MAAM,EACzB,MAAO,QAAQ,EAAK,MAAM,EAAK,MAAM,EAAK,MAAM,EAAa,EAAK,CAAC,IACrE,EAEa,GAAe,AAAC,GAAqB,CAChD,GAAM,GAAO,EAAM,MAAM,EACzB,MAAO,QAAQ,KAAK,MAAM,EAAK,CAAC,MAAM,KAAK,MAAM,EAAK,EAAI,GAAG,OAAO,KAAK,MAAM,EAAK,EAAI,GAAG,OAAO,EAAa,EAAK,CAAC,IACvH,EAEa,GAAe,AAAC,GAAqB,CAChD,GAAM,GAAO,EAAM,MAAM,EACzB,MAAO,QAAQ,KAAK,MAAM,EAAK,CAAC,MAAM,KAAK,MAAM,EAAK,EAAI,GAAG,OAAO,KAAK,MAAM,EAAK,EAAI,GAAG,OAAO,EAAa,EAAK,CAAC,IACvH,EAMa,EAAgB,AAAC,GACxB,GAAQ,GACV,GAAQ,GAEN,EAAQ,GACV,GAAQ,GAGH,GAAG,AADE,EAAE,GAAQ,KAAO,KACf,QAAQ,CAAC,MAOZ,EAAsB,AAAC,GAC9B,GAAa,GACf,GAAa,GAEX,EAAa,GACf,GAAa,GAIR,GAAG,AADE,GAAa,KACX,QAAQ,CAAC,MAOZ,EAAe,AAAC,GAAgB,CAC3C,AAAI,EAAM,GACR,GAAM,GAGJ,EAAM,KACR,GAAM,KAER,GAAM,GAAQ,EAAM,IAAO,IACvB,EAAU,KAAK,MAAM,EAAO,GAAG,EAAI,IAEvC,MAAI,GAAU,GACZ,GAAU,GAGR,EAAU,KACZ,GAAU,KAGL,CACT,EAKa,EAAe,AAAC,GACnB,IAAM,EAAQ,IAMX,EAAS,AAAC,GAAkC,CACvD,GAAI,GAAQ,OAAO,CAAY,GAAK,EACpC,SAAQ,KAAK,MAAM,CAAK,EACxB,EAAQ,KAAK,IAAI,EAAG,CAAK,EACzB,EAAQ,KAAK,IAAI,IAAK,CAAK,EACpB,CACT,EAKa,GAAa,AAAC,GAAkC,CAC3D,GAAI,GAAQ,OAAO,CAAY,GAAK,IACpC,SAAQ,KAAK,MAAM,CAAK,EACxB,EAAQ,KAAK,IAAI,EAAG,CAAK,EACzB,EAAQ,KAAK,IAAI,IAAK,CAAK,EACpB,CACT,EAEa,EAAa,AAAC,GAA+B,CACxD,GAAM,GAAQ,GAAI,GAAU,GAAe,MAAM,EACjD,SAAM,SAAS,EAAM,SAAS,CAAC,EACxB,CACT,EC5HA,GAAM,GAAN,aAAyB,YAAY,CAgBnC,aAAc,CACZ,MAAM,EAfR,OAAQ,OAER,OAAQ,eACR,OAAQ,UACR,OAAQ,YAER,OAAQ,MAAM,GACd,OAAQ,aAAa,GACrB,OAAQ,QAAQ,GASd,KAAK,aAAa,CAChB,KAAM,MACR,CAAC,EAED,KAAK,YAAc,KAAK,YAAY,KAAK,IAAI,EAC7C,KAAK,UAAY,KAAK,UAAU,KAAK,IAAI,EACzC,KAAK,SAAW,KAAK,SAAS,KAAK,IAAI,EACvC,KAAK,iBAAmB,KAAK,iBAAiB,KAAK,IAAI,EAEvD,KAAK,WAAa,KAAK,WAAW,KAAK,IAAI,EAC3C,KAAK,WAAa,KAAK,WAAW,KAAK,IAAI,CAC7C,CAlBA,UAAW,qBAAqB,CAC9B,MAAO,CAAC,OAAO,CACjB,CAkBA,OAAO,EAAY,GAAM,CAEvB,AAAI,KAAK,UACP,MAAK,SAAS,MAAM,KAAO,EAAoB,KAAK,UAAU,EAC9D,KAAK,SAAS,MAAM,IAAM,EAAc,KAAK,KAAK,GAGhD,KAAK,QACP,KAAK,OAAO,aAAa,QAAS,eAAe,EAAiB,KAAK,GAAG,GAAG,EAG3E,GAGF,EAAmB,KAAK,IAAK,KAAK,IAAK,KAAK,WAAY,KAAK,KAAK,CAEtE,CAIA,SAAS,EAAU,CACjB,GAAI,CAAC,KAAK,YAAa,OAEvB,GAAM,CAAE,MAAO,EAAU,OAAQ,EAAW,KAAM,EAAS,IAAK,GAAW,KAAK,YAAY,sBAAsB,EAClH,GAAI,IAAa,GAAK,IAAc,EAAG,OAEvC,GAAM,GAAS,MAAO,GAAI,SAAY,SAAW,EAAI,QAAU,EAAI,QAAQ,GAAG,QACxE,EAAS,MAAO,GAAI,SAAY,SAAW,EAAI,QAAU,EAAI,QAAQ,GAAG,QAExE,EAAO,KAAK,IAAI,KAAK,IAAI,EAAG,EAAS,CAAO,EAAG,CAAQ,EACvD,EAAO,KAAK,IAAI,KAAK,IAAI,EAAG,EAAS,CAAM,EAAG,CAAS,EAE7D,KAAK,WAAa,EAAO,EACzB,KAAK,MAAQ,EAAI,EAAO,EAExB,KAAK,OAAO,CACd,CAEA,iBAAiB,EAAoB,CACnC,OAAQ,EAAI,SACL,YAAa,CAChB,KAAK,WAAa,KAAK,IAAI,EAAG,KAAK,WAAa,CAAe,EAC/D,KAAK,OAAO,EACZ,KACF,KAEK,aAAc,CACjB,KAAK,WAAa,KAAK,IAAI,EAAG,KAAK,WAAa,CAAe,EAC/D,KAAK,OAAO,EACZ,KACF,KAEK,UAAW,CACd,KAAK,MAAQ,KAAK,IAAI,EAAG,KAAK,MAAQ,CAAe,EACrD,KAAK,OAAO,EACZ,KACF,KAEK,YAAa,CAChB,EAAI,eAAe,EACnB,KAAK,MAAQ,KAAK,IAAI,EAAG,KAAK,MAAQ,CAAe,EACrD,KAAK,OAAO,EACZ,KACF,EAEJ,CAEA,YAAY,EAAiB,CAC3B,AAAI,EAAI,gBACN,EAAI,eAAe,EAGrB,KAAK,SAAS,CAAG,EAEjB,OAAO,iBAAiB,YAAa,KAAK,QAAQ,EAClD,OAAO,iBAAiB,UAAW,KAAK,SAAS,EAEjD,OAAO,WAAW,IAAM,CAvH5B,MAwHM,QAAK,WAAL,QAAe,OACjB,EAAG,CAAC,CACN,CAEA,WAAY,CACV,OAAO,oBAAoB,YAAa,KAAK,QAAQ,EACrD,OAAO,oBAAoB,UAAW,KAAK,QAAQ,CACrD,CAEA,WAAW,EAAkB,CAI3B,GAHI,CAAC,GAAO,CAAC,EAAI,QAAU,CAAC,EAAI,OAAO,KAGnC,EAAI,OAAO,MAAQ,KAAK,IAAK,OAEjC,GAAI,GAAU,GAEd,AAAI,KAAK,MAAQ,EAAI,OAAO,GAC1B,MAAK,IAAM,EAAI,OAAO,EACtB,EAAU,IAGR,KAAK,aAAe,EAAI,OAAO,GACjC,MAAK,WAAa,EAAI,OAAO,EAC7B,EAAU,IAGR,KAAK,QAAU,EAAI,OAAO,GAC5B,MAAK,MAAQ,EAAI,OAAO,EACxB,EAAU,IAGR,GACF,KAAK,OAAO,EAAK,CAErB,CAEA,WAAW,EAAkB,CAC3B,AAAI,CAAC,GAAO,CAAC,EAAI,QAAU,CAAC,EAAI,OAAO,KAGnC,EAAI,OAAO,MAAQ,KAAK,KAE5B,MAAK,IAAM,EAAI,OAAO,EAEtB,KAAK,OAAO,EACd,CAKA,mBAAoB,CA3KtB,cA4KI,GAAI,CAAC,KAAK,WAAY,OAEtB,KAAK,IAAM,KAAK,aAAa,KAAK,GAAK,GAGvC,GAAM,GAAM,AADE,EAAW,KAAK,aAAa,OAAO,CAAC,EACjC,MAAM,EAExB,KAAK,IAAM,EAAI,EACf,KAAK,WAAa,EAAI,EACtB,KAAK,MAAQ,EAAI,EAEjB,GAAM,GAAM,EAAc,KAAK,KAAK,EAC9B,EAAO,EAAoB,KAAK,UAAU,EAEhD,KAAK,WAAW,UAAY;AAAA,oBACZ;AAAA;AAAA,sDAEkC,EAAiB,KAAK,GAAG;AAAA;AAAA;AAAA;AAAA,wEAIP,YAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAQlF,KAAK,YAAc,KAAK,WAAW,cAAc,aAAa,EAC9D,KAAK,OAAS,KAAK,WAAW,cAAc,MAAM,EAClD,KAAK,SAAW,KAAK,WAAW,cAAc,UAAU,EAExD,QAAK,WAAL,QAAe,iBAAiB,UAAW,KAAK,kBAChD,QAAK,cAAL,QAAkB,iBAAiB,YAAa,KAAK,aACrD,QAAK,cAAL,QAAkB,iBAAiB,UAAW,KAAK,WACnD,QAAK,cAAL,QAAkB,iBAAiB,YAAa,KAAK,UACrD,QAAK,cAAL,QAAkB,iBAAiB,aAAc,KAAK,UAEtD,SAAS,iBAAiB,EAAgC,KAAK,UAAU,EACzE,SAAS,iBAAiB,EAAgC,KAAK,UAAU,CAC3E,CAKA,sBAAuB,CA1NzB,cA2NI,QAAK,cAAL,QAAkB,oBAAoB,YAAa,KAAK,aACxD,QAAK,cAAL,QAAkB,oBAAoB,UAAW,KAAK,WACtD,QAAK,cAAL,QAAkB,oBAAoB,YAAa,KAAK,UACxD,QAAK,cAAL,QAAkB,oBAAoB,aAAc,KAAK,UACzD,QAAK,WAAL,QAAe,oBAAoB,UAAW,KAAK,kBAEnD,SAAS,oBAAoB,EAAgC,KAAK,UAAU,EAC5E,SAAS,oBAAoB,EAAgC,KAAK,UAAU,CAC9E,CAKA,yBAAyB,EAAmB,EAAiB,EAAgB,CAE3E,GAAM,GAAM,AADE,EAAW,CAAM,EACb,MAAM,EAExB,KAAK,IAAM,EAAI,EACf,KAAK,WAAa,EAAI,EACtB,KAAK,MAAQ,EAAI,EAEjB,KAAK,OAAO,EAAK,CACnB,CACF,EAEO,GAAQ,6tBC1Of,GAAM,GAAN,aAAkB,YAAY,CAa5B,aAAc,CACZ,MAAM,EAZR,OAAQ,OAER,OAAQ,QACR,OAAQ,YAER,OAAQ,MAAM,GASZ,KAAK,aAAa,CAChB,KAAM,MACR,CAAC,EAED,KAAK,YAAc,KAAK,YAAY,KAAK,IAAI,EAC7C,KAAK,UAAY,KAAK,UAAU,KAAK,IAAI,EACzC,KAAK,SAAW,KAAK,SAAS,KAAK,IAAI,EACvC,KAAK,UAAY,KAAK,UAAU,KAAK,IAAI,EAEzC,KAAK,WAAa,KAAK,WAAW,KAAK,IAAI,CAC7C,CAjBA,UAAW,qBAAqB,CAC9B,MAAO,CAAC,OAAO,CACjB,CAiBA,QAAS,CACP,AAAI,KAAK,UACP,MAAK,SAAS,MAAM,KAAO,GAAG,EAAa,KAAK,GAAG,MAKrD,GAAmB,KAAK,IAAK,KAAK,GAAG,CACvC,CAEA,WAAW,EAAkB,CAC3B,AAAI,CAAC,GAAO,CAAC,EAAI,QAAU,CAAC,EAAI,OAAO,KAGnC,EAAI,OAAO,MAAQ,KAAK,KAExB,KAAK,MAAQ,EAAI,OAAO,GAC1B,MAAK,IAAM,EAAI,OAAO,EACtB,KAAK,OAAO,EAEhB,CAIA,SAAS,EAAU,CACjB,GAAI,CAAC,KAAK,KAAM,OAEhB,AAAI,EAAI,gBACN,EAAI,eAAe,EAGrB,GAAM,CAAE,MAAO,EAAU,KAAM,GAAY,KAAK,KAAK,sBAAsB,EAC3E,GAAI,IAAa,EAAG,OAEpB,GAAM,GAAS,MAAO,GAAI,SAAY,SAAW,EAAI,QAAU,EAAI,QAAQ,GAAG,QAExE,EAAO,KAAK,IAAI,KAAK,IAAI,EAAG,EAAS,CAAO,EAAG,CAAQ,EACvD,EAAU,KAAK,IAAI,KAAK,IAAI,EAAG,KAAK,MAAO,EAAO,IAAO,CAAQ,CAAC,EAAG,GAAG,EAE9E,KAAK,IAAM,EAAa,CAAO,EAC/B,KAAK,OAAO,CACd,CAEA,UAAU,EAAoB,CAjFhC,MAoFI,OAFA,QAAK,WAAL,QAAe,QAEP,EAAI,SACL,YAAa,CAChB,GAAI,GAAU,EAAa,KAAK,GAAG,EACnC,EAAU,KAAK,IAAI,EAAG,EAAU,CAAC,EACjC,KAAK,IAAM,EAAa,CAAO,EAC/B,KAAK,OAAO,EACZ,KACF,KAEK,aAAc,CACjB,GAAI,GAAU,EAAa,KAAK,GAAG,EACnC,EAAU,KAAK,IAAI,IAAK,EAAU,CAAC,EACnC,KAAK,IAAM,EAAa,CAAO,EAC/B,KAAK,OAAO,EACZ,KACF,EAEJ,CAEA,YAAY,EAAiB,CAC3B,AAAI,EAAI,gBACN,EAAI,eAAe,EAGrB,KAAK,SAAS,CAAG,EAEjB,OAAO,iBAAiB,YAAa,KAAK,QAAQ,EAClD,OAAO,iBAAiB,UAAW,KAAK,SAAS,EAEjD,OAAO,WAAW,IAAM,CAjH5B,MAkHM,QAAK,WAAL,QAAe,OACjB,EAAG,CAAC,CACN,CAEA,WAAY,CACV,OAAO,oBAAoB,YAAa,KAAK,QAAQ,EACrD,OAAO,oBAAoB,UAAW,KAAK,QAAQ,CACrD,CAKA,mBAAoB,CA9HtB,cA+HI,GAAI,CAAC,KAAK,WAAY,OAEtB,KAAK,IAAM,KAAK,aAAa,KAAK,GAAK,GAEvC,GAAM,GAAQ,EAAW,KAAK,aAAa,OAAO,CAAC,EACnD,KAAK,IAAM,EAAM,MAAM,EAAE,EAEzB,KAAK,WAAW,UAAY;AAAA,oBACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6EAQyD,EAAa,KAAK,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAQ9F,KAAK,KAAO,KAAK,WAAW,cAAc,MAAM,EAChD,KAAK,SAAW,KAAK,WAAW,cAAc,cAAc,EAE5D,QAAK,OAAL,QAAW,iBAAiB,YAAa,KAAK,aAC9C,QAAK,OAAL,QAAW,iBAAiB,UAAW,KAAK,WAC5C,QAAK,OAAL,QAAW,iBAAiB,YAAa,KAAK,UAC9C,QAAK,OAAL,QAAW,iBAAiB,aAAc,KAAK,UAE/C,QAAK,WAAL,QAAe,iBAAiB,UAAW,KAAK,WAChD,SAAS,iBAAiB,EAAgC,KAAK,UAAU,CAC3E,CAKA,sBAAuB,CAtKzB,cAuKI,QAAK,OAAL,QAAW,oBAAoB,YAAa,KAAK,aACjD,QAAK,OAAL,QAAW,oBAAoB,UAAW,KAAK,WAC/C,QAAK,OAAL,QAAW,oBAAoB,YAAa,KAAK,UACjD,QAAK,OAAL,QAAW,oBAAoB,aAAc,KAAK,UAClD,QAAK,WAAL,QAAe,oBAAoB,UAAW,KAAK,WAEnD,SAAS,oBAAoB,EAAgC,KAAK,UAAU,CAC9E,CAKA,yBAAyB,EAAmB,EAAiB,EAAgB,CAE3E,GAAM,GAAM,AADE,EAAW,CAAM,EACb,MAAM,EAExB,KAAK,IAAM,EAAI,EACf,KAAK,OAAO,CACd,CACF,EAEO,GAAQ,+tBCjLf,GAAM,GAAN,aAAoB,YAAY,CAiB9B,aAAc,CACZ,MAAM,EAZR,OAAQ,OAER,OAAQ,UACR,OAAQ,UACR,OAAQ,YAER,OAAQ,QAAQ,GAChB,OAAQ,MAAM,GACd,OAAQ,aAAa,GACrB,OAAQ,QAAQ,GAKd,KAAK,aAAa,CAChB,KAAM,MACR,CAAC,EAED,KAAK,YAAc,KAAK,YAAY,KAAK,IAAI,EAC7C,KAAK,UAAY,KAAK,UAAU,KAAK,IAAI,EACzC,KAAK,SAAW,KAAK,SAAS,KAAK,IAAI,EACvC,KAAK,UAAY,KAAK,UAAU,KAAK,IAAI,EAEzC,KAAK,WAAa,KAAK,WAAW,KAAK,IAAI,EAC3C,KAAK,WAAa,KAAK,WAAW,KAAK,IAAI,EAC3C,KAAK,aAAe,KAAK,aAAa,KAAK,IAAI,CACjD,CA/BA,UAAW,qBAAqB,CAC9B,MAAO,CAAC,OAAO,CACjB,CA+BA,OAAO,EAAY,GAAM,CAKvB,GAJI,KAAK,UACP,MAAK,SAAS,MAAM,KAAO,GAAG,KAAK,MAAQ,QAGzC,KAAK,OAAQ,CACf,GAAM,GAAQ,GAAI,GAAU,CAC1B,EAAG,KAAK,IACR,EAAG,KAAK,WACR,EAAG,KAAK,MACR,EAAG,KAAK,KACV,CAAC,EAED,KAAK,OAAO,MAAM,WAAa,EAAwB,CAAK,CAC9D,CAEA,AAAI,GACF,EAAqB,KAAK,IAAK,KAAK,KAAK,CAE7C,CAIA,SAAS,EAAU,CACjB,GAAI,CAAC,KAAK,OAAQ,OAElB,AAAI,EAAI,gBACN,EAAI,eAAe,EAGrB,GAAM,CAAE,MAAO,EAAU,KAAM,GAAY,KAAK,OAAO,sBAAsB,EAC7E,GAAI,IAAa,EAAG,OAEpB,GAAM,GAAS,MAAO,GAAI,SAAY,SAAW,EAAI,QAAU,EAAI,QAAQ,GAAG,QAExE,EAAO,KAAK,IAAI,KAAK,IAAI,EAAG,EAAS,CAAO,EAAG,CAAQ,EACvD,EAAU,KAAK,IAAI,KAAK,IAAI,EAAI,EAAO,IAAO,CAAQ,EAAG,GAAG,EAElE,KAAK,MAAQ,EAAU,IACvB,KAAK,OAAO,CACd,CAEA,UAAU,EAAoB,CAvFhC,MA0FI,OAFA,QAAK,WAAL,QAAe,QAEP,EAAI,SACL,YAAa,CAChB,GAAI,GAAU,KAAK,MAAQ,IAC3B,EAAU,KAAK,IAAI,EAAG,EAAU,CAAC,EACjC,KAAK,MAAQ,EAAU,IACvB,KAAK,OAAO,EACZ,KACF,KAEK,aAAc,CACjB,GAAI,GAAU,KAAK,MAAQ,IAC3B,EAAU,KAAK,IAAI,IAAK,EAAU,CAAC,EACnC,KAAK,MAAQ,EAAU,IACvB,KAAK,OAAO,EACZ,KACF,EAEJ,CAEA,WAAW,EAAkB,CAC3B,AAAI,CAAC,GAAO,CAAC,EAAI,QAAU,CAAC,EAAI,OAAO,KAGnC,EAAI,OAAO,MAAQ,KAAK,KAE5B,MAAK,WAAa,EAAI,OAAO,EAC7B,KAAK,IAAM,EAAI,OAAO,EACtB,KAAK,MAAQ,EAAI,OAAO,EAExB,KAAK,OAAO,EAAK,EACnB,CAEA,WAAW,EAAkB,CAC3B,AAAI,CAAC,GAAO,CAAC,EAAI,QAAU,CAAC,EAAI,OAAO,KAGnC,EAAI,OAAO,MAAQ,KAAK,KAE5B,MAAK,IAAM,EAAI,OAAO,EAEtB,KAAK,OAAO,EAAK,EACnB,CAEA,aAAa,EAAkB,CAC7B,AAAI,CAAC,GAAO,CAAC,EAAI,QAAU,CAAC,EAAI,OAAO,KAGnC,EAAI,OAAO,MAAQ,KAAK,KAExB,KAAK,QAAU,EAAI,OAAO,GAC5B,MAAK,MAAQ,EAAI,OAAO,EACxB,KAAK,OAAO,EAEhB,CAEA,YAAY,EAAiB,CAC3B,AAAI,EAAI,gBACN,EAAI,eAAe,EAGrB,KAAK,SAAS,CAAG,EAEjB,OAAO,iBAAiB,YAAa,KAAK,QAAQ,EAClD,OAAO,iBAAiB,UAAW,KAAK,SAAS,EAEjD,OAAO,WAAW,IAAM,CA3J5B,MA4JM,QAAK,WAAL,QAAe,OACjB,EAAG,CAAC,CACN,CAEA,WAAY,CACV,OAAO,oBAAoB,YAAa,KAAK,QAAQ,EACrD,OAAO,oBAAoB,UAAW,KAAK,QAAQ,CACrD,CAKA,mBAAoB,CAxKtB,cAyKI,GAAI,CAAC,KAAK,WAAY,OAEtB,KAAK,IAAM,KAAK,aAAa,KAAK,GAAK,GAEvC,GAAM,GAAQ,EAAW,KAAK,aAAa,OAAO,CAAC,EAC7C,EAAM,EAAM,MAAM,EAExB,KAAK,MAAQ,EAAI,EACjB,KAAK,IAAM,EAAI,EACf,KAAK,WAAa,EAAI,EACtB,KAAK,MAAQ,EAAI,EAEjB,KAAK,WAAW,UAAY;AAAA,oBACZ;AAAA;AAAA;AAAA;AAAA,mEAI+C,EAAwB,CAAK;AAAA;AAAA;AAAA,6EAGnB,KAAK,MAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAQtF,KAAK,OAAS,KAAK,WAAW,cAAc,QAAQ,EACpD,KAAK,OAAS,KAAK,WAAW,cAAc,WAAW,EACvD,KAAK,SAAW,KAAK,WAAW,cAAc,cAAc,EAE5D,QAAK,SAAL,QAAa,iBAAiB,YAAa,KAAK,aAChD,QAAK,SAAL,QAAa,iBAAiB,UAAW,KAAK,WAC9C,QAAK,SAAL,QAAa,iBAAiB,YAAa,KAAK,UAChD,QAAK,SAAL,QAAa,iBAAiB,aAAc,KAAK,UACjD,QAAK,WAAL,QAAe,iBAAiB,UAAW,KAAK,WAEhD,SAAS,iBAAiB,EAAgC,KAAK,UAAU,EACzE,SAAS,iBAAiB,EAAgC,KAAK,UAAU,EACzE,SAAS,iBAAiB,EAAkC,KAAK,YAAY,CAC/E,CAKA,sBAAuB,CAvNzB,cAwNI,QAAK,SAAL,QAAa,oBAAoB,YAAa,KAAK,aACnD,QAAK,SAAL,QAAa,oBAAoB,UAAW,KAAK,WACjD,QAAK,SAAL,QAAa,oBAAoB,YAAa,KAAK,UACnD,QAAK,SAAL,QAAa,oBAAoB,aAAc,KAAK,UACpD,QAAK,WAAL,QAAe,oBAAoB,UAAW,KAAK,WAEnD,SAAS,oBAAoB,EAAgC,KAAK,UAAU,EAC5E,SAAS,oBAAoB,EAAgC,KAAK,UAAU,EAC5E,SAAS,oBAAoB,EAAkC,KAAK,YAAY,CAClF,CAKA,yBAAyB,EAAmB,EAAiB,EAAgB,CAE3E,GAAM,GAAM,AADE,EAAW,CAAM,EACb,MAAM,EAExB,KAAK,MAAQ,EAAI,EACjB,KAAK,IAAM,EAAI,EACf,KAAK,WAAa,EAAI,EACtB,KAAK,MAAQ,EAAI,EAEjB,KAAK,OAAO,CACd,CACF,EAEO,GAAQ,8uBCvOf,GAAM,GAAN,aAAqB,YAAY,CAqB/B,aAAc,CACZ,MAAM,EApBR,OAAQ,OACR,OAAQ,QAAmB,GAAI,GAAU,MAAM,GAE/C,OAAQ,QACR,OAAQ,MACR,OAAQ,MACR,OAAQ,MACR,OAAQ,MAER,OAAQ,MAAM,IACd,OAAQ,IAAI,GACZ,OAAQ,IAAI,GACZ,OAAQ,IAAI,GACZ,OAAQ,IAAI,GASV,KAAK,aAAa,CAChB,KAAM,MACR,CAAC,EAED,KAAK,WAAa,KAAK,WAAW,KAAK,IAAI,EAC3C,KAAK,WAAa,KAAK,WAAW,KAAK,IAAI,EAC3C,KAAK,aAAe,KAAK,aAAa,KAAK,IAAI,EAE/C,KAAK,YAAc,KAAK,YAAY,KAAK,IAAI,EAC7C,KAAK,OAAS,KAAK,OAAO,KAAK,IAAI,EACnC,KAAK,YAAc,KAAK,YAAY,KAAK,IAAI,EAC7C,KAAK,cAAgB,KAAK,cAAc,KAAK,IAAI,EACjD,KAAK,aAAe,KAAK,aAAa,KAAK,IAAI,EAC/C,KAAK,cAAgB,KAAK,cAAc,KAAK,IAAI,EACjD,KAAK,aAAe,KAAK,aAAa,KAAK,IAAI,EAC/C,KAAK,cAAgB,KAAK,cAAc,KAAK,IAAI,EACjD,KAAK,eAAiB,KAAK,eAAe,KAAK,IAAI,EACnD,KAAK,eAAiB,KAAK,eAAe,KAAK,IAAI,CACrD,CAzBA,UAAW,qBAAqB,CAC9B,MAAO,CAAC,OAAO,CACjB,CAyBA,WAAW,EAAkB,CAI3B,GAHI,CAAC,GAAO,CAAC,EAAI,QAAU,CAAC,EAAI,OAAO,KAGnC,EAAI,OAAO,MAAQ,KAAK,IAAK,OAEjC,GAAM,GAAM,KAAK,MAAM,MAAM,EAE7B,KAAK,MAAQ,GAAI,GAAU,CACzB,EAAG,OAAO,EAAI,OAAO,CAAC,EACtB,EAAG,EAAI,EACP,EAAG,EAAI,EACP,EAAG,EAAI,CACT,CAAC,EAED,KAAK,OAAO,CACd,CAEA,aAAa,EAAkB,CAI7B,GAHI,CAAC,GAAO,CAAC,EAAI,QAAU,CAAC,EAAI,OAAO,KAGnC,EAAI,OAAO,MAAQ,KAAK,IAAK,OAEjC,GAAM,GAAO,KAAK,MAAM,MAAM,EAC9B,EAAK,EAAI,EAAI,OAAO,EAEpB,KAAK,MAAQ,GAAI,GAAU,CAAI,EAC/B,KAAK,OAAO,CACd,CAEA,WAAW,EAAkB,CAC3B,AAAI,CAAC,GAAO,CAAC,EAAI,QAAU,CAAC,EAAI,OAAO,KAGnC,EAAI,OAAO,MAAQ,KAAK,KAE5B,MAAK,MAAQ,GAAI,GAAU,CACzB,EAAG,EAAI,OAAO,EACd,EAAG,EAAI,OAAO,EACd,EAAG,EAAI,OAAO,EACd,EAAG,KAAK,MAAM,MAAM,EAAE,CACxB,CAAC,EAED,KAAK,OAAO,EACd,CAEA,QAAS,CAvGX,cAwGI,GAAM,GAAO,KAAK,MAAM,MAAM,EAC9B,KAAK,EAAI,EAAK,EACd,KAAK,EAAI,EAAK,EACd,KAAK,EAAI,EAAK,EACd,KAAK,EAAI,EAAK,EACd,KAAK,IAAM,KAAK,MAAM,MAAM,EAExB,KAAK,MAAQ,SAAK,aAAL,cAAiB,iBAAkB,KAAK,MACvD,MAAK,KAAK,MAAQ,KAAK,IAAI,YAAY,GAGrC,KAAK,IAAM,SAAK,aAAL,cAAiB,iBAAkB,KAAK,IACrD,MAAK,GAAG,MAAQ,KAAK,EAAE,SAAS,GAG9B,KAAK,IAAM,SAAK,aAAL,cAAiB,iBAAkB,KAAK,IACrD,MAAK,GAAG,MAAQ,KAAK,EAAE,SAAS,GAG9B,KAAK,IAAM,SAAK,aAAL,cAAiB,iBAAkB,KAAK,IACrD,MAAK,GAAG,MAAQ,KAAK,EAAE,SAAS,GAG9B,KAAK,IAAM,SAAK,aAAL,cAAiB,iBAAkB,KAAK,IACrD,MAAK,GAAG,MAAQ,KAAK,MAAM,KAAK,EAAI,GAAG,EAAE,SAAS,EAEtD,CAEA,eAAe,EAAoB,EAAc,CApInD,QAqII,GAAM,GAAO,KAAK,MAAM,MAAM,EAE9B,OAAQ,EAAI,SACL,UAAW,CACd,GAAI,IAAS,IAAK,CAChB,KAAK,EAAI,KAAK,IAAI,IAAK,EAAK,EAAI,CAAC,EACjC,EAAK,EAAI,KAAK,EACd,GAAM,GAAM,GAAI,GAAU,CAAI,EAAE,MAAM,EACtC,EAAmB,KAAK,IAAK,EAAI,EAAG,EAAI,EAAG,EAAI,CAAC,EAChD,KAAK,GAAG,MAAQ,KAAK,EAAE,SAAS,EAChC,KAAK,OAAO,CACd,CACA,GAAI,IAAS,IAAK,CAChB,KAAK,EAAI,KAAK,IAAI,IAAK,EAAK,EAAI,CAAC,EACjC,EAAK,EAAI,KAAK,EAEd,GAAM,GAAM,GAAI,GAAU,CAAI,EAAE,MAAM,EACtC,EAAmB,KAAK,IAAK,EAAI,EAAG,EAAI,EAAG,EAAI,CAAC,EAChD,KAAK,GAAG,MAAQ,KAAK,EAAE,SAAS,EAChC,KAAK,OAAO,CACd,CACA,GAAI,IAAS,IAAK,CAChB,KAAK,EAAI,KAAK,IAAI,IAAK,EAAK,EAAI,CAAC,EACjC,EAAK,EAAI,KAAK,EACd,GAAM,GAAM,GAAI,GAAU,CAAI,EAAE,MAAM,EACtC,EAAmB,KAAK,IAAK,EAAI,EAAG,EAAI,EAAG,EAAI,CAAC,EAChD,KAAK,GAAG,MAAQ,KAAK,EAAE,SAAS,EAChC,KAAK,OAAO,CACd,CACA,GAAI,IAAS,IAAK,CAChB,KAAK,EAAI,KAAK,IAAI,IAAK,KAAK,EAAI,GAAI,EACpC,KAAK,GAAG,MAAQ,KAAK,MAAM,KAAK,EAAI,GAAG,EAAE,SAAS,EAElD,GAAM,GAAO,KAAK,MAAM,MAAM,EAC9B,EAAK,EAAI,KAAK,EACd,KAAK,MAAQ,GAAI,GAAU,CAAI,EAE/B,KAAK,OAAO,EACZ,EAAqB,KAAK,IAAK,KAAK,CAAC,CACvC,CACA,KACF,KACK,YAAa,CAChB,GAAI,IAAS,IAAK,CAChB,KAAK,EAAI,KAAK,IAAI,EAAG,EAAK,EAAI,CAAC,EAC/B,EAAK,EAAI,KAAK,EACd,GAAM,GAAM,GAAI,GAAU,CAAI,EAAE,MAAM,EACtC,EAAmB,KAAK,IAAK,EAAI,EAAG,EAAI,EAAG,EAAI,CAAC,EAChD,KAAK,GAAG,MAAQ,KAAK,EAAE,SAAS,EAChC,KAAK,OAAO,CACd,CACA,GAAI,IAAS,IAAK,CAChB,KAAK,EAAI,KAAK,IAAI,EAAG,EAAK,EAAI,CAAC,EAC/B,EAAK,EAAI,KAAK,EAEd,GAAM,GAAM,GAAI,GAAU,CAAI,EAAE,MAAM,EACtC,EAAmB,KAAK,IAAK,EAAI,EAAG,EAAI,EAAG,EAAI,CAAC,EAChD,KAAK,GAAG,MAAQ,KAAK,EAAE,SAAS,EAChC,KAAK,OAAO,CACd,CACA,GAAI,IAAS,IAAK,CAChB,KAAK,EAAI,KAAK,IAAI,EAAG,EAAK,EAAI,CAAC,EAC/B,EAAK,EAAI,KAAK,EACd,GAAM,GAAM,GAAI,GAAU,CAAI,EAAE,MAAM,EACtC,EAAmB,KAAK,IAAK,EAAI,EAAG,EAAI,EAAG,EAAI,CAAC,EAChD,KAAK,GAAG,MAAQ,KAAK,EAAE,SAAS,EAChC,KAAK,OAAO,CACd,CACA,GAAI,IAAS,IAAK,CAChB,KAAK,EAAI,KAAK,IAAI,EAAG,KAAK,EAAI,GAAI,EAClC,KAAK,GAAG,MAAQ,KAAK,MAAM,KAAK,EAAI,GAAG,EAAE,SAAS,EAElD,GAAM,GAAO,KAAK,MAAM,MAAM,EAC9B,EAAK,EAAI,KAAK,EACd,KAAK,MAAQ,GAAI,GAAU,CAAI,EAE/B,KAAK,OAAO,EACZ,EAAqB,KAAK,IAAK,KAAK,CAAC,CACvC,CACA,KACF,KACK,SAAU,CACb,AAAI,QAAK,aAAL,QAAiB,eAEnB,AADY,KAAK,WAAW,cACxB,KAAK,EAGX,KAAK,OAAO,EACZ,KACF,KACK,QAAS,CACZ,AAAI,QAAK,aAAL,QAAiB,eAEnB,AADY,KAAK,WAAW,cACxB,KAAK,EAGX,KAAK,OAAO,EACZ,KACF,EAEJ,CAEA,aAAa,EAAoB,CAC/B,KAAK,eAAe,EAAK,GAAG,CAC9B,CAEA,eAAe,EAAoB,CACjC,KAAK,eAAe,EAAK,GAAG,CAC9B,CAEA,cAAc,EAAoB,CAChC,KAAK,eAAe,EAAK,GAAG,CAC9B,CAEA,eAAe,EAAoB,CACjC,KAAK,eAAe,EAAK,GAAG,CAC9B,CAEA,YAAY,EAAY,CACtB,GAAM,GAAU,EAAI,OACpB,GAAI,EAAQ,MAAM,SAAW,EAAG,OAEhC,GAAM,GAAe,GAAI,GAAU,IAAI,EAAQ,OAAO,EAEtD,GAAI,EAAa,QAAS,CACxB,KAAK,MAAQ,EAEb,GAAM,GAAM,KAAK,MAAM,MAAM,EAI7B,EAAmB,KAAK,IAAK,EAAI,EAAG,EAAI,EAAG,EAAI,CAAC,CAClD,CACF,CAEA,YAAY,EAAY,CACtB,GAAM,GAAU,EAAI,OACd,EAAa,EAAO,EAAQ,KAAK,EAEvC,GAAI,EAAW,SAAS,IAAM,EAAQ,MAAO,CAC3C,GAAM,GAAO,KAAK,MAAM,MAAM,EAC9B,EAAK,EAAI,EACT,GAAM,GAAM,GAAI,GAAU,CAAI,EAAE,MAAM,EAItC,EAAmB,KAAK,IAAK,EAAI,EAAG,EAAI,EAAG,EAAI,CAAC,CAClD,CACF,CAEA,cAAc,EAAY,CACxB,GAAM,GAAU,EAAI,OACd,EAAa,EAAO,EAAQ,KAAK,EAEvC,GAAI,EAAW,SAAS,IAAM,EAAQ,MAAO,CAC3C,GAAM,GAAO,KAAK,MAAM,MAAM,EAC9B,EAAK,EAAI,EACT,GAAM,GAAM,GAAI,GAAU,CAAI,EAAE,MAAM,EAItC,EAAmB,KAAK,IAAK,EAAI,EAAG,EAAI,EAAG,EAAI,CAAC,CAClD,CACF,CAEA,aAAa,EAAY,CACvB,GAAM,GAAU,EAAI,OACd,EAAa,EAAO,EAAQ,KAAK,EAEvC,GAAI,EAAW,SAAS,IAAM,EAAQ,MAAO,CAC3C,GAAM,GAAO,KAAK,MAAM,MAAM,EAC9B,EAAK,EAAI,EACT,GAAM,GAAM,GAAI,GAAU,CAAI,EAAE,MAAM,EAItC,EAAmB,KAAK,IAAK,EAAI,EAAG,EAAI,EAAG,EAAI,CAAC,CAClD,CACF,CAEA,cAAc,EAAY,CACxB,GAAM,GAAU,EAAI,OACd,EAAa,GAAW,EAAQ,KAAK,EAE3C,AAAI,EAAW,SAAS,IAAM,EAAQ,OACpC,EAAqB,KAAK,IAAK,EAAa,GAAG,CAEnD,CAKA,mBAAoB,CAClB,GAAI,CAAC,KAAK,WAAY,OAEtB,KAAK,IAAM,KAAK,aAAa,KAAK,GAAK,GACvC,KAAK,MAAQ,EAAW,KAAK,aAAa,OAAO,CAAC,EAElD,GAAM,GAAO,KAAK,MAAM,MAAM,EAC9B,KAAK,EAAI,EAAK,EACd,KAAK,EAAI,EAAK,EACd,KAAK,EAAI,EAAK,EACd,KAAK,EAAI,EAAK,EACd,KAAK,IAAM,KAAK,MAAM,MAAM,EAE5B,GAAM,GAAQ,EAAY,EACpB,EAAM,EAAY,EAClB,EAAM,EAAY,EAClB,EAAM,EAAY,EAClB,EAAM,EAAY,EAExB,KAAK,WAAW,UAAY;AAAA,oBACZ;AAAA;AAAA,gCAEY,yBAA6B,KAAK,IAAI,YAAY;AAAA,8BACpD,yBAA2B,KAAK;AAAA,8BAChC,yBAA2B,KAAK;AAAA,8BAChC,yBAA2B,KAAK;AAAA,8BAChC,yBAA2B,KAAK,MAAM,KAAK,EAAI,GAAG;AAAA;AAAA,iCAE/C;AAAA,+BACF;AAAA,+BACA;AAAA,+BACA;AAAA,+BACA;AAAA;AAAA,UAI3B,KAAK,KAAO,KAAK,WAAW,eAAe,OAAO,GAAO,EACzD,KAAK,GAAK,KAAK,WAAW,eAAe,KAAK,GAAK,EACnD,KAAK,GAAK,KAAK,WAAW,eAAe,KAAK,GAAK,EACnD,KAAK,GAAK,KAAK,WAAW,eAAe,KAAK,GAAK,EACnD,KAAK,GAAK,KAAK,WAAW,eAAe,KAAK,GAAK,EAGnD,SAAS,iBAAiB,EAAgC,KAAK,UAAU,EACzE,SAAS,iBAAiB,EAAgC,KAAK,UAAU,EACzE,SAAS,iBAAiB,EAAkC,KAAK,YAAY,EAE7E,KAAK,KAAK,iBAAiB,QAAS,KAAK,WAAW,EACpD,KAAK,GAAG,iBAAiB,QAAS,KAAK,WAAW,EAClD,KAAK,GAAG,iBAAiB,QAAS,KAAK,aAAa,EACpD,KAAK,GAAG,iBAAiB,QAAS,KAAK,YAAY,EACnD,KAAK,GAAG,iBAAiB,QAAS,KAAK,aAAa,EAEpD,KAAK,KAAK,iBAAiB,OAAQ,KAAK,MAAM,EAC9C,KAAK,GAAG,iBAAiB,OAAQ,KAAK,MAAM,EAC5C,KAAK,GAAG,iBAAiB,OAAQ,KAAK,MAAM,EAC5C,KAAK,GAAG,iBAAiB,OAAQ,KAAK,MAAM,EAC5C,KAAK,GAAG,iBAAiB,OAAQ,KAAK,MAAM,EAE5C,KAAK,GAAG,iBAAiB,UAAW,KAAK,YAAY,EACrD,KAAK,GAAG,iBAAiB,UAAW,KAAK,cAAc,EACvD,KAAK,GAAG,iBAAiB,UAAW,KAAK,aAAa,EACtD,KAAK,GAAG,iBAAiB,UAAW,KAAK,cAAc,CACzD,CAKA,sBAAuB,CACrB,SAAS,oBAAoB,EAAgC,KAAK,UAAU,EAC5E,SAAS,oBAAoB,EAAgC,KAAK,UAAU,EAC5E,SAAS,oBAAoB,EAAkC,KAAK,YAAY,EAEhF,KAAK,KAAK,oBAAoB,QAAS,KAAK,WAAW,EACvD,KAAK,GAAG,oBAAoB,QAAS,KAAK,WAAW,EACrD,KAAK,GAAG,oBAAoB,QAAS,KAAK,aAAa,EACvD,KAAK,GAAG,oBAAoB,QAAS,KAAK,YAAY,EACtD,KAAK,GAAG,oBAAoB,QAAS,KAAK,aAAa,EAEvD,KAAK,KAAK,oBAAoB,OAAQ,KAAK,MAAM,EACjD,KAAK,GAAG,oBAAoB,OAAQ,KAAK,MAAM,EAC/C,KAAK,GAAG,oBAAoB,OAAQ,KAAK,MAAM,EAC/C,KAAK,GAAG,oBAAoB,OAAQ,KAAK,MAAM,EAC/C,KAAK,GAAG,oBAAoB,OAAQ,KAAK,MAAM,EAE/C,KAAK,GAAG,oBAAoB,UAAW,KAAK,YAAY,EACxD,KAAK,GAAG,oBAAoB,UAAW,KAAK,cAAc,EAC1D,KAAK,GAAG,oBAAoB,UAAW,KAAK,aAAa,EACzD,KAAK,GAAG,oBAAoB,UAAW,KAAK,cAAc,CAC5D,CAKA,yBAAyB,EAAmB,EAAiB,EAAgB,CAC3E,KAAK,MAAQ,EAAW,CAAM,EAC9B,KAAK,OAAO,CACd,CACF,EAEO,GAAQ,EC7Zf,GAAM,GAAN,aAA+B,YAAY,CAYzC,aAAc,CACZ,MAAM,EAXR,OAAiB,OACjB,OAAQ,gBAAgB,QAExB,OAAQ,UACR,OAAQ,QAAQ,QAUT,eAAe,IAAI,kCAAkC,GACxD,eAAe,OAAO,mCAAoC,EAAU,EAGjE,eAAe,IAAI,2BAA2B,GACjD,eAAe,OAAO,4BAA6B,EAAG,EAGnD,eAAe,IAAI,6BAA6B,GACnD,eAAe,OAAO,8BAA+B,EAAK,EAGvD,eAAe,IAAI,8BAA8B,GACpD,eAAe,OAAO,+BAAgC,EAAM,EAG9D,KAAK,IAAM,KAAK,aAAa,KAAK,GAAK,GACvC,KAAK,QAAU,KAAK,QAAQ,KAAK,IAAI,EAErC,KAAK,aAAa,CAChB,KAAM,MACR,CAAC,CACH,CA9BA,UAAW,qBAAqB,CAC9B,MAAO,CAAC,QAAS,gBAAgB,CACnC,CA8BA,QAAQ,EAAiB,CACvB,EAAI,gBAAgB,CACtB,CAKA,mBAAoB,CA3DtB,QA4DI,AAAI,CAAC,KAAK,YAEV,MAAK,MAAQ,KAAK,aAAa,OAAO,GAAK,OAC3C,KAAK,cAAgB,KAAK,aAAa,gBAAgB,GAAK,OAE5D,KAAK,WAAW,UAAY;AAAA,oBACZ;AAAA;AAAA,2DAEuC,KAAK,eAAe,KAAK;AAAA,oDAChC,KAAK,eAAe,KAAK;AAAA,sDACvB,KAAK,eAAe,KAAK;AAAA,uDACxB,KAAK,eAAe,KAAK;AAAA;AAAA,UAI5E,KAAK,OAAS,KAAK,WAAW,cAAc,QAAQ,EACpD,QAAK,SAAL,QAAa,iBAAiB,YAAa,KAAK,SAChD,QAAK,SAAL,QAAa,UAAU,OAAO,QAAS,KAAK,gBAAkB,SAChE,CAKA,sBAAuB,CAnFzB,MAoFI,QAAK,SAAL,QAAa,oBAAoB,YAAa,KAAK,QACrD,CAKA,yBAAyB,EAAkB,EAAiB,EAAgB,CA1F9E,YAmGI,GARI,IAAa,kBACf,MAAK,cAAgB,EAEjB,KAAK,QACP,KAAK,OAAO,UAAU,OAAO,QAAS,KAAK,gBAAkB,OAAO,GAIpE,IAAa,QAAS,CACxB,KAAK,MAAQ,EAEb,GAAM,GAAc,QAAK,aAAL,cAAiB,cAAc,oCAC7C,EAAO,QAAK,aAAL,cAAiB,cAAc,6BACtC,EAAS,QAAK,aAAL,cAAiB,cAAc,+BACxC,GAAU,QAAK,aAAL,cAAiB,cAAc,gCAE/C,AAAI,GACF,EAAY,aAAa,QAAS,KAAK,KAAK,EAG1C,GACF,EAAK,aAAa,QAAS,KAAK,KAAK,EAGnC,GACF,EAAO,aAAa,QAAS,KAAK,KAAK,EAGrC,IACF,GAAQ,aAAa,QAAS,KAAK,KAAK,CAE5C,CACF,CACF,EAEO,GAAQ,EClHf,GAAM,IAAmD,CACvD,GAAI,WACJ,GAAI,SACJ,GAAI,SACJ,GAAI,UACJ,MAAO,OACP,MAAO,UACP,MAAO,QACT,EAsBM,GAAN,aAA0B,YAAY,CAyGpC,aAAc,CACZ,MAAM,EAlBR,OAAgB,OAEhB,OAAQ,WACR,OAAQ,gBACR,OAAQ,aAER,OAAQ,gBAAmC,CACzC,eAAgB,GAChB,cAAe,OACf,aAAc,GAAI,GAAU,MAAM,EAClC,MAAO,GAAI,GAAU,MAAM,EAC3B,YAAa,KACb,aAAc,KACd,cAAe,IACjB,GACA,OAAQ,SAKN,KAAK,IAAM,EAAY,EAGlB,eAAe,IAAI,6BAA6B,GACnD,eAAe,OAAO,8BAA+B,EAAgB,EAGvE,KAAK,aAAa,CAChB,KAAM,MACR,CAAC,EAED,KAAK,OAAS,KAAK,OAAO,KAAK,IAAI,EACnC,KAAK,UAAY,KAAK,UAAU,KAAK,IAAI,EACzC,KAAK,eAAiB,KAAK,eAAe,KAAK,IAAI,EACnD,KAAK,gBAAkB,KAAK,gBAAgB,KAAK,IAAI,EAErD,KAAK,WAAa,KAAK,WAAW,KAAK,IAAI,EAC3C,KAAK,WAAa,KAAK,WAAW,KAAK,IAAI,EAC3C,KAAK,aAAe,KAAK,aAAa,KAAK,IAAI,EAC/C,KAAK,cAAgB,KAAK,cAAc,KAAK,IAAI,EACjD,KAAK,iBAAmB,KAAK,iBAAiB,KAAK,IAAI,EAEvD,KAAK,UAAU,CACjB,CAlIA,UAAW,qBAAqB,CAC9B,MAAO,CAAC,QAAS,iBAAkB,eAAgB,gBAAiB,gBAAgB,CACtF,CAOA,GAAW,OAAM,EAAuB,CACtC,KAAK,MAAM,MAAQ,GAAI,GAAU,CAAS,CAC5C,CAKA,GAAW,QAAQ,CACjB,MAAO,MAAK,MAAM,KACpB,CAKA,GAAW,MAAM,CACf,MAAO,MAAK,MAAM,MAAM,YAAY,EAAE,YAAY,CACpD,CAKA,GAAW,OAAO,CAChB,MAAO,MAAK,MAAM,MAAM,aAAa,EAAE,YAAY,CACrD,CAKA,GAAW,MAAM,CACf,MAAO,MAAK,MAAM,MAAM,YAAY,CACtC,CAKA,GAAW,OAAO,CAChB,MAAO,GAAa,KAAK,MAAM,KAAK,CACtC,CAKA,GAAW,MAAM,CACf,MAAO,MAAK,MAAM,MAAM,YAAY,CACtC,CAKA,GAAW,OAAO,CAChB,MAAO,IAAa,KAAK,MAAM,KAAK,CACtC,CAKA,GAAW,MAAM,CACf,MAAO,MAAK,MAAM,MAAM,YAAY,CACtC,CAKA,GAAW,OAAO,CAChB,MAAO,IAAa,KAAK,MAAM,KAAK,CACtC,CAEA,GAAW,SAAS,CAClB,MAAO,MAAK,MAAM,cACpB,CAEA,GAAW,QAAO,EAAmB,CACnC,KAAK,MAAM,eAAiB,CAC9B,CAoDA,WAAY,CAEV,GAAM,GAAQ,KACd,KAAK,MAAQ,GAAI,OAAM,EAAM,cAAe,CAE1C,IAAI,EAA2B,EAAsB,EAAY,EAAyB,CACxF,SAAO,GAAO,EAEV,IAAQ,kBACV,EAAM,wBAAwB,EAG5B,IAAQ,iBACV,EAAM,iBAAiB,EAGrB,IAAQ,gBACV,EAAM,qBAAqB,EAGzB,IAAQ,SACV,EAAM,cAAc,EAGlB,KAAQ,eAAiB,IAAQ,gBAAkB,IAAQ,kBAC7D,EAAM,cAAc,EAGf,EACT,CACF,CAAC,CACH,CAEA,yBAA0B,CACxB,AAAI,CAAC,KAAK,WACV,MAAK,UAAU,UAAY,KAAK,MAAM,eAClC,uCAAuC,KAAK,MAAM,MAAM,YAAY,WAAW,KAAK,wBAAwB,KAAK,MAAM,oBACvH,GACN,CAEA,kBAAmB,CACjB,GAAI,CAAC,KAAK,UAAW,OAErB,GAAM,GAAS,KAAK,UAAU,cAAc,6BAA6B,EACzE,AAAI,CAAC,GAEL,EAAO,aAAa,iBAAkB,KAAK,MAAM,aAAa,CAChE,CAEA,sBAAuB,CAlOzB,MAmOI,GAAM,GAAU,EAAa,KAAK,MAAM,KAAK,EAE7C,AAAI,KAAK,cACP,MAAK,aAAa,MAAM,gBAAkB,GAG5C,GAAM,GAAS,QAAK,aAAL,cAAiB,cAAc,+BAC9C,AAAI,GACF,EAAO,aAAa,QAAS,CAAO,CAExC,CAEA,eAAgB,CACd,AAAI,CAAC,KAAK,SAEN,MAAK,MAAM,aACb,MAAK,QAAQ,MAAM,MAAQ,KAAK,iBAAiB,KAAK,MAAM,WAAW,GAGrE,KAAK,MAAM,cACb,MAAK,QAAQ,MAAM,OAAS,KAAK,iBAAiB,KAAK,MAAM,YAAY,GAGvE,KAAK,MAAM,eACb,MAAK,QAAQ,MAAM,QAAU,KAAK,MAAM,eAE5C,CAEA,eAAgB,CACd,AAAI,KAAK,cACP,MAAK,aAAa,MAAM,gBAAkB,EAAa,KAAK,MAAM,KAAK,GAGzE,KAAK,cACH,GAAI,aAAY,SAAU,CACxB,OAAQ,CACN,IAAK,KAAK,IACV,KAAM,KAAK,KACX,IAAK,KAAK,IACV,KAAM,KAAK,KACX,IAAK,KAAK,IACV,KAAM,KAAK,KACX,IAAK,KAAK,IACV,KAAM,KAAK,KACX,MAAO,KAAK,KACd,CACF,CAAC,CACH,CACF,CAEA,WAAW,EAAkB,CAC3B,AAAI,CAAC,GAAO,CAAC,EAAI,QAAU,CAAC,EAAI,OAAO,KAGnC,EAAI,OAAO,MAAQ,KAAK,KAE5B,MAAK,MAAM,MAAQ,GAAI,GAAU,CAC/B,EAAG,EAAI,OAAO,EACd,EAAG,EAAI,OAAO,EACd,EAAG,EAAI,OAAO,EACd,EAAG,KAAK,MAAM,MAAM,MAAM,EAAE,CAC9B,CAAC,EACH,CAEA,WAAW,EAAkB,CAI3B,GAHI,CAAC,GAAO,CAAC,EAAI,QAAU,CAAC,EAAI,OAAO,KAGnC,EAAI,OAAO,MAAQ,KAAK,IAAK,OAEjC,GAAM,GAAM,KAAK,MAAM,MAAM,MAAM,EAEnC,KAAK,MAAM,MAAQ,GAAI,GAAU,CAC/B,EAAG,EAAI,OAAO,EACd,EAAG,EAAI,EACP,EAAG,EAAI,EACP,EAAG,EAAI,CACT,CAAC,CACH,CAEA,aAAa,EAAkB,CAI7B,GAHI,CAAC,GAAO,CAAC,EAAI,QAAU,CAAC,EAAI,OAAO,KAGnC,EAAI,OAAO,MAAQ,KAAK,IAAK,OAEjC,GAAM,GAAO,KAAK,MAAM,MAAM,MAAM,EACpC,EAAK,EAAI,EAAI,OAAO,EAEpB,KAAK,MAAM,MAAQ,GAAI,GAAU,CAAI,CACvC,CAKA,cAAc,EAAkB,CAC9B,AAAI,CAAC,GAAO,CAAC,EAAI,QAAU,CAAC,EAAI,OAAO,KAEnC,EAAI,OAAO,MAAQ,KAAK,KAE5B,MAAK,MAAM,eAAiB,GAC9B,CAEA,gBAAiB,CACf,KAAK,MAAM,eAAiB,EAC9B,CAEA,QAAS,CACP,GAAM,GAAY,KAAK,MAAM,eAI7B,OAAO,WAAW,IAAM,CACtB,KAAK,MAAM,eAAiB,CAAC,EAE7B,GAA6B,KAAK,GAAG,CACvC,EAAG,CAAC,CACN,CAEA,UAAU,EAAoB,CAC5B,AAAI,EAAI,MAAQ,UAEd,MAAK,MAAM,eAAiB,GAEhC,CAEA,gBAAgB,EAAiB,CAC/B,EAAI,gBAAgB,CACtB,CAMA,iBAAiB,EAAc,CAzWjC,MA0WI,MAAO,MAAsB,KAAtB,OAA+B,CACxC,CAOA,mBAAoB,CAlXtB,UAmXI,AAAI,CAAC,KAAK,YAEV,MAAK,MAAM,aAAe,EAAW,KAAK,aAAa,OAAO,CAAC,EAC/D,KAAK,MAAM,MAAQ,EAAW,KAAK,aAAa,OAAO,CAAC,EACxD,KAAK,MAAM,cAAgB,KAAK,aAAa,gBAAgB,GAAK,OAClE,KAAK,MAAM,YAAc,KAAK,aAAa,cAAc,EACzD,KAAK,MAAM,aAAe,KAAK,aAAa,eAAe,EAC3D,KAAK,MAAM,cAAgB,KAAK,aAAa,gBAAgB,EAE7D,KAAK,WAAW,UAAY;AAAA;AAAA,kBAEd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oEAQkD,EAAa,KAAK,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA,UAO7F,KAAK,QAAU,KAAK,WAAW,cAAc,SAAS,EACtD,KAAK,aAAe,KAAK,WAAW,cAAc,eAAe,EAEjE,QAAK,UAAL,QAAc,iBAAiB,QAAS,KAAK,QAC7C,QAAK,UAAL,QAAc,iBAAiB,UAAW,KAAK,WAC/C,QAAK,UAAL,QAAc,iBAAiB,YAAa,KAAK,iBAGjD,KAAK,UAAY,KAAK,WAAW,cAAc,kBAAkB,EAGjE,KAAK,cAAc,EAKnB,SAAS,iBAAiB,YAAa,KAAK,cAAc,EAG1D,SAAS,iBAAiB,EAAgC,KAAK,UAAU,EACzE,SAAS,iBAAiB,EAAgC,KAAK,UAAU,EACzE,SAAS,iBAAiB,EAAkC,KAAK,YAAY,EAC7E,SAAS,iBAAiB,EAA6B,KAAK,aAAa,EAC3E,CAKA,sBAAuB,CAzazB,UA0aI,QAAK,UAAL,QAAc,oBAAoB,QAAS,KAAK,QAChD,QAAK,UAAL,QAAc,oBAAoB,UAAW,KAAK,WAClD,QAAK,UAAL,QAAc,oBAAoB,YAAa,KAAK,iBACpD,SAAS,oBAAoB,YAAa,KAAK,cAAc,EAE7D,SAAS,oBAAoB,EAAgC,KAAK,UAAU,EAC5E,SAAS,oBAAoB,EAAgC,KAAK,UAAU,EAC5E,SAAS,oBAAoB,EAAkC,KAAK,YAAY,EAChF,SAAS,oBAAoB,EAA6B,KAAK,aAAa,CAC9E,CAKA,yBAAyB,EAAkB,CACzC,OAAQ,OACD,QAAS,CACZ,KAAK,MAAM,aAAe,EAAW,KAAK,aAAa,OAAO,CAAC,EAC/D,KAAK,MAAM,MAAQ,EAAW,KAAK,aAAa,OAAO,CAAC,EACxD,KAAK,qBAAqB,EAC1B,KACF,KAEK,iBAAkB,CACrB,KAAK,MAAM,cAAgB,KAAK,aAAa,gBAAgB,GAAK,OAClE,KAAK,iBAAiB,EACtB,KACF,KAEK,eAAgB,CACnB,KAAK,MAAM,YAAc,KAAK,aAAa,cAAc,EACzD,KAAK,cAAc,EACnB,KACF,KAEK,gBAAiB,CACpB,KAAK,MAAM,aAAe,KAAK,aAAa,eAAe,EAC3D,KAAK,cAAc,EACnB,KACF,KAEK,iBAAkB,CACrB,KAAK,MAAM,cAAgB,KAAK,aAAa,gBAAgB,EAC7D,KAAK,cAAc,EACnB,KACF,EAEJ,CACF,EAEO,GAAQ,GCpdf,AAAK,eAAe,IAAI,uBAAuB,GAC7C,eAAe,OAAO,wBAAyB,EAAW",
  "names": []
}
